# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKStatisticsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageToHistogramFilterPython
else:
    import _itkImageToHistogramFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageSinkPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkArrayPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkSimpleDataObjectDecoratorPython

def itkImageToHistogramFilterICD2_New():
    return itkImageToHistogramFilterICD2.New()

class itkImageToHistogramFilterICD2(itk.itkImageSinkPython.itkImageSinkICD2):
    r"""Proxy of C++ itkImageToHistogramFilterICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICD2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICD2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICD2

        Create a new object of the class itkImageToHistogramFilterICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICD2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2_swigregister(itkImageToHistogramFilterICD2)

def itkImageToHistogramFilterICD3_New():
    return itkImageToHistogramFilterICD3.New()

class itkImageToHistogramFilterICD3(itk.itkImageSinkPython.itkImageSinkICD3):
    r"""Proxy of C++ itkImageToHistogramFilterICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICD3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICD3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICD3

        Create a new object of the class itkImageToHistogramFilterICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICD3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3_swigregister(itkImageToHistogramFilterICD3)

def itkImageToHistogramFilterICD4_New():
    return itkImageToHistogramFilterICD4.New()

class itkImageToHistogramFilterICD4(itk.itkImageSinkPython.itkImageSinkICD4):
    r"""Proxy of C++ itkImageToHistogramFilterICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICD4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICD4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICD4

        Create a new object of the class itkImageToHistogramFilterICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICD4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4_swigregister(itkImageToHistogramFilterICD4)

def itkImageToHistogramFilterICF2_New():
    return itkImageToHistogramFilterICF2.New()

class itkImageToHistogramFilterICF2(itk.itkImageSinkPython.itkImageSinkICF2):
    r"""Proxy of C++ itkImageToHistogramFilterICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICF2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICF2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICF2

        Create a new object of the class itkImageToHistogramFilterICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICF2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2_swigregister(itkImageToHistogramFilterICF2)

def itkImageToHistogramFilterICF3_New():
    return itkImageToHistogramFilterICF3.New()

class itkImageToHistogramFilterICF3(itk.itkImageSinkPython.itkImageSinkICF3):
    r"""Proxy of C++ itkImageToHistogramFilterICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICF3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICF3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICF3

        Create a new object of the class itkImageToHistogramFilterICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICF3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3_swigregister(itkImageToHistogramFilterICF3)

def itkImageToHistogramFilterICF4_New():
    return itkImageToHistogramFilterICF4.New()

class itkImageToHistogramFilterICF4(itk.itkImageSinkPython.itkImageSinkICF4):
    r"""Proxy of C++ itkImageToHistogramFilterICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICF4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICF4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICF4

        Create a new object of the class itkImageToHistogramFilterICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICF4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4_swigregister(itkImageToHistogramFilterICF4)

def itkImageToHistogramFilterICVF22_New():
    return itkImageToHistogramFilterICVF22.New()

class itkImageToHistogramFilterICVF22(itk.itkImageSinkPython.itkImageSinkICVF22):
    r"""Proxy of C++ itkImageToHistogramFilterICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICVF22_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICVF22_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF22

        Create a new object of the class itkImageToHistogramFilterICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF22 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22_swigregister(itkImageToHistogramFilterICVF22)

def itkImageToHistogramFilterICVF23_New():
    return itkImageToHistogramFilterICVF23.New()

class itkImageToHistogramFilterICVF23(itk.itkImageSinkPython.itkImageSinkICVF23):
    r"""Proxy of C++ itkImageToHistogramFilterICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICVF23_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICVF23_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF23

        Create a new object of the class itkImageToHistogramFilterICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF23 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23_swigregister(itkImageToHistogramFilterICVF23)

def itkImageToHistogramFilterICVF24_New():
    return itkImageToHistogramFilterICVF24.New()

class itkImageToHistogramFilterICVF24(itk.itkImageSinkPython.itkImageSinkICVF24):
    r"""Proxy of C++ itkImageToHistogramFilterICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICVF24_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICVF24_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF24

        Create a new object of the class itkImageToHistogramFilterICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF24 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24_swigregister(itkImageToHistogramFilterICVF24)

def itkImageToHistogramFilterICVF32_New():
    return itkImageToHistogramFilterICVF32.New()

class itkImageToHistogramFilterICVF32(itk.itkImageSinkPython.itkImageSinkICVF32):
    r"""Proxy of C++ itkImageToHistogramFilterICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICVF32_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICVF32_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF32

        Create a new object of the class itkImageToHistogramFilterICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF32 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32_swigregister(itkImageToHistogramFilterICVF32)

def itkImageToHistogramFilterICVF33_New():
    return itkImageToHistogramFilterICVF33.New()

class itkImageToHistogramFilterICVF33(itk.itkImageSinkPython.itkImageSinkICVF33):
    r"""Proxy of C++ itkImageToHistogramFilterICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICVF33_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICVF33_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF33

        Create a new object of the class itkImageToHistogramFilterICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF33 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33_swigregister(itkImageToHistogramFilterICVF33)

def itkImageToHistogramFilterICVF34_New():
    return itkImageToHistogramFilterICVF34.New()

class itkImageToHistogramFilterICVF34(itk.itkImageSinkPython.itkImageSinkICVF34):
    r"""Proxy of C++ itkImageToHistogramFilterICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICVF34_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICVF34_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF34

        Create a new object of the class itkImageToHistogramFilterICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF34 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34_swigregister(itkImageToHistogramFilterICVF34)

def itkImageToHistogramFilterICVF42_New():
    return itkImageToHistogramFilterICVF42.New()

class itkImageToHistogramFilterICVF42(itk.itkImageSinkPython.itkImageSinkICVF42):
    r"""Proxy of C++ itkImageToHistogramFilterICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICVF42_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICVF42_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF42

        Create a new object of the class itkImageToHistogramFilterICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF42 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42_swigregister(itkImageToHistogramFilterICVF42)

def itkImageToHistogramFilterICVF43_New():
    return itkImageToHistogramFilterICVF43.New()

class itkImageToHistogramFilterICVF43(itk.itkImageSinkPython.itkImageSinkICVF43):
    r"""Proxy of C++ itkImageToHistogramFilterICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICVF43_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICVF43_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF43

        Create a new object of the class itkImageToHistogramFilterICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF43 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43_swigregister(itkImageToHistogramFilterICVF43)

def itkImageToHistogramFilterICVF44_New():
    return itkImageToHistogramFilterICVF44.New()

class itkImageToHistogramFilterICVF44(itk.itkImageSinkPython.itkImageSinkICVF44):
    r"""Proxy of C++ itkImageToHistogramFilterICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterICVF44_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterICVF44_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterICVF44

        Create a new object of the class itkImageToHistogramFilterICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterICVF44 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44_swigregister(itkImageToHistogramFilterICVF44)

def itkImageToHistogramFilterID2_New():
    return itkImageToHistogramFilterID2.New()

class itkImageToHistogramFilterID2(itk.itkImageSinkPython.itkImageSinkID2):
    r"""Proxy of C++ itkImageToHistogramFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterID2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterID2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterID2

        Create a new object of the class itkImageToHistogramFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterID2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterID2_swigregister(itkImageToHistogramFilterID2)

def itkImageToHistogramFilterID3_New():
    return itkImageToHistogramFilterID3.New()

class itkImageToHistogramFilterID3(itk.itkImageSinkPython.itkImageSinkID3):
    r"""Proxy of C++ itkImageToHistogramFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterID3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterID3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterID3

        Create a new object of the class itkImageToHistogramFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterID3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterID3_swigregister(itkImageToHistogramFilterID3)

def itkImageToHistogramFilterID4_New():
    return itkImageToHistogramFilterID4.New()

class itkImageToHistogramFilterID4(itk.itkImageSinkPython.itkImageSinkID4):
    r"""Proxy of C++ itkImageToHistogramFilterID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterID4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterID4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterID4

        Create a new object of the class itkImageToHistogramFilterID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterID4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterID4_swigregister(itkImageToHistogramFilterID4)

def itkImageToHistogramFilterIF2_New():
    return itkImageToHistogramFilterIF2.New()

class itkImageToHistogramFilterIF2(itk.itkImageSinkPython.itkImageSinkIF2):
    r"""Proxy of C++ itkImageToHistogramFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIF2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIF2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIF2

        Create a new object of the class itkImageToHistogramFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIF2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2_swigregister(itkImageToHistogramFilterIF2)

def itkImageToHistogramFilterIF3_New():
    return itkImageToHistogramFilterIF3.New()

class itkImageToHistogramFilterIF3(itk.itkImageSinkPython.itkImageSinkIF3):
    r"""Proxy of C++ itkImageToHistogramFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIF3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIF3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIF3

        Create a new object of the class itkImageToHistogramFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIF3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3_swigregister(itkImageToHistogramFilterIF3)

def itkImageToHistogramFilterIF4_New():
    return itkImageToHistogramFilterIF4.New()

class itkImageToHistogramFilterIF4(itk.itkImageSinkPython.itkImageSinkIF4):
    r"""Proxy of C++ itkImageToHistogramFilterIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIF4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIF4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIF4

        Create a new object of the class itkImageToHistogramFilterIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIF4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4_swigregister(itkImageToHistogramFilterIF4)

def itkImageToHistogramFilterIRGBAUC2_New():
    return itkImageToHistogramFilterIRGBAUC2.New()

class itkImageToHistogramFilterIRGBAUC2(itk.itkImageSinkPython.itkImageSinkIRGBAUC2):
    r"""Proxy of C++ itkImageToHistogramFilterIRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIRGBAUC2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIRGBAUC2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIRGBAUC2

        Create a new object of the class itkImageToHistogramFilterIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIRGBAUC2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2_swigregister(itkImageToHistogramFilterIRGBAUC2)

def itkImageToHistogramFilterIRGBAUC3_New():
    return itkImageToHistogramFilterIRGBAUC3.New()

class itkImageToHistogramFilterIRGBAUC3(itk.itkImageSinkPython.itkImageSinkIRGBAUC3):
    r"""Proxy of C++ itkImageToHistogramFilterIRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIRGBAUC3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIRGBAUC3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIRGBAUC3

        Create a new object of the class itkImageToHistogramFilterIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIRGBAUC3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3_swigregister(itkImageToHistogramFilterIRGBAUC3)

def itkImageToHistogramFilterIRGBAUC4_New():
    return itkImageToHistogramFilterIRGBAUC4.New()

class itkImageToHistogramFilterIRGBAUC4(itk.itkImageSinkPython.itkImageSinkIRGBAUC4):
    r"""Proxy of C++ itkImageToHistogramFilterIRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIRGBAUC4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIRGBAUC4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIRGBAUC4

        Create a new object of the class itkImageToHistogramFilterIRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIRGBAUC4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4_swigregister(itkImageToHistogramFilterIRGBAUC4)

def itkImageToHistogramFilterIRGBUC2_New():
    return itkImageToHistogramFilterIRGBUC2.New()

class itkImageToHistogramFilterIRGBUC2(itk.itkImageSinkPython.itkImageSinkIRGBUC2):
    r"""Proxy of C++ itkImageToHistogramFilterIRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIRGBUC2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIRGBUC2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIRGBUC2

        Create a new object of the class itkImageToHistogramFilterIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIRGBUC2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2_swigregister(itkImageToHistogramFilterIRGBUC2)

def itkImageToHistogramFilterIRGBUC3_New():
    return itkImageToHistogramFilterIRGBUC3.New()

class itkImageToHistogramFilterIRGBUC3(itk.itkImageSinkPython.itkImageSinkIRGBUC3):
    r"""Proxy of C++ itkImageToHistogramFilterIRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIRGBUC3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIRGBUC3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIRGBUC3

        Create a new object of the class itkImageToHistogramFilterIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIRGBUC3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3_swigregister(itkImageToHistogramFilterIRGBUC3)

def itkImageToHistogramFilterIRGBUC4_New():
    return itkImageToHistogramFilterIRGBUC4.New()

class itkImageToHistogramFilterIRGBUC4(itk.itkImageSinkPython.itkImageSinkIRGBUC4):
    r"""Proxy of C++ itkImageToHistogramFilterIRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIRGBUC4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIRGBUC4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIRGBUC4

        Create a new object of the class itkImageToHistogramFilterIRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIRGBUC4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4_swigregister(itkImageToHistogramFilterIRGBUC4)

def itkImageToHistogramFilterISS2_New():
    return itkImageToHistogramFilterISS2.New()

class itkImageToHistogramFilterISS2(itk.itkImageSinkPython.itkImageSinkISS2):
    r"""Proxy of C++ itkImageToHistogramFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterISS2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterISS2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterISS2

        Create a new object of the class itkImageToHistogramFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterISS2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2_swigregister(itkImageToHistogramFilterISS2)

def itkImageToHistogramFilterISS3_New():
    return itkImageToHistogramFilterISS3.New()

class itkImageToHistogramFilterISS3(itk.itkImageSinkPython.itkImageSinkISS3):
    r"""Proxy of C++ itkImageToHistogramFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterISS3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterISS3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterISS3

        Create a new object of the class itkImageToHistogramFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterISS3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3_swigregister(itkImageToHistogramFilterISS3)

def itkImageToHistogramFilterISS4_New():
    return itkImageToHistogramFilterISS4.New()

class itkImageToHistogramFilterISS4(itk.itkImageSinkPython.itkImageSinkISS4):
    r"""Proxy of C++ itkImageToHistogramFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterISS4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterISS4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterISS4

        Create a new object of the class itkImageToHistogramFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterISS4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4_swigregister(itkImageToHistogramFilterISS4)

def itkImageToHistogramFilterIUC2_New():
    return itkImageToHistogramFilterIUC2.New()

class itkImageToHistogramFilterIUC2(itk.itkImageSinkPython.itkImageSinkIUC2):
    r"""Proxy of C++ itkImageToHistogramFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIUC2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIUC2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIUC2

        Create a new object of the class itkImageToHistogramFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIUC2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2_swigregister(itkImageToHistogramFilterIUC2)

def itkImageToHistogramFilterIUC3_New():
    return itkImageToHistogramFilterIUC3.New()

class itkImageToHistogramFilterIUC3(itk.itkImageSinkPython.itkImageSinkIUC3):
    r"""Proxy of C++ itkImageToHistogramFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIUC3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIUC3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIUC3

        Create a new object of the class itkImageToHistogramFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIUC3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3_swigregister(itkImageToHistogramFilterIUC3)

def itkImageToHistogramFilterIUC4_New():
    return itkImageToHistogramFilterIUC4.New()

class itkImageToHistogramFilterIUC4(itk.itkImageSinkPython.itkImageSinkIUC4):
    r"""Proxy of C++ itkImageToHistogramFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIUC4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIUC4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIUC4

        Create a new object of the class itkImageToHistogramFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIUC4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4_swigregister(itkImageToHistogramFilterIUC4)

def itkImageToHistogramFilterIUS2_New():
    return itkImageToHistogramFilterIUS2.New()

class itkImageToHistogramFilterIUS2(itk.itkImageSinkPython.itkImageSinkIUS2):
    r"""Proxy of C++ itkImageToHistogramFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIUS2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIUS2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIUS2

        Create a new object of the class itkImageToHistogramFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIUS2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2_swigregister(itkImageToHistogramFilterIUS2)

def itkImageToHistogramFilterIUS3_New():
    return itkImageToHistogramFilterIUS3.New()

class itkImageToHistogramFilterIUS3(itk.itkImageSinkPython.itkImageSinkIUS3):
    r"""Proxy of C++ itkImageToHistogramFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIUS3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIUS3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIUS3

        Create a new object of the class itkImageToHistogramFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIUS3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3_swigregister(itkImageToHistogramFilterIUS3)

def itkImageToHistogramFilterIUS4_New():
    return itkImageToHistogramFilterIUS4.New()

class itkImageToHistogramFilterIUS4(itk.itkImageSinkPython.itkImageSinkIUS4):
    r"""Proxy of C++ itkImageToHistogramFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIUS4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIUS4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIUS4

        Create a new object of the class itkImageToHistogramFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIUS4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4_swigregister(itkImageToHistogramFilterIUS4)

def itkImageToHistogramFilterIVF22_New():
    return itkImageToHistogramFilterIVF22.New()

class itkImageToHistogramFilterIVF22(itk.itkImageSinkPython.itkImageSinkIVF22):
    r"""Proxy of C++ itkImageToHistogramFilterIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIVF22_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIVF22_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF22

        Create a new object of the class itkImageToHistogramFilterIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF22 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22_swigregister(itkImageToHistogramFilterIVF22)

def itkImageToHistogramFilterIVF23_New():
    return itkImageToHistogramFilterIVF23.New()

class itkImageToHistogramFilterIVF23(itk.itkImageSinkPython.itkImageSinkIVF23):
    r"""Proxy of C++ itkImageToHistogramFilterIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIVF23_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIVF23_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF23

        Create a new object of the class itkImageToHistogramFilterIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF23 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23_swigregister(itkImageToHistogramFilterIVF23)

def itkImageToHistogramFilterIVF24_New():
    return itkImageToHistogramFilterIVF24.New()

class itkImageToHistogramFilterIVF24(itk.itkImageSinkPython.itkImageSinkIVF24):
    r"""Proxy of C++ itkImageToHistogramFilterIVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIVF24_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIVF24_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF24

        Create a new object of the class itkImageToHistogramFilterIVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF24 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24_swigregister(itkImageToHistogramFilterIVF24)

def itkImageToHistogramFilterIVF32_New():
    return itkImageToHistogramFilterIVF32.New()

class itkImageToHistogramFilterIVF32(itk.itkImageSinkPython.itkImageSinkIVF32):
    r"""Proxy of C++ itkImageToHistogramFilterIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIVF32_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIVF32_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF32

        Create a new object of the class itkImageToHistogramFilterIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF32 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32_swigregister(itkImageToHistogramFilterIVF32)

def itkImageToHistogramFilterIVF33_New():
    return itkImageToHistogramFilterIVF33.New()

class itkImageToHistogramFilterIVF33(itk.itkImageSinkPython.itkImageSinkIVF33):
    r"""Proxy of C++ itkImageToHistogramFilterIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIVF33_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIVF33_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF33

        Create a new object of the class itkImageToHistogramFilterIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF33 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33_swigregister(itkImageToHistogramFilterIVF33)

def itkImageToHistogramFilterIVF34_New():
    return itkImageToHistogramFilterIVF34.New()

class itkImageToHistogramFilterIVF34(itk.itkImageSinkPython.itkImageSinkIVF34):
    r"""Proxy of C++ itkImageToHistogramFilterIVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIVF34_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIVF34_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF34

        Create a new object of the class itkImageToHistogramFilterIVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF34 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34_swigregister(itkImageToHistogramFilterIVF34)

def itkImageToHistogramFilterIVF42_New():
    return itkImageToHistogramFilterIVF42.New()

class itkImageToHistogramFilterIVF42(itk.itkImageSinkPython.itkImageSinkIVF42):
    r"""Proxy of C++ itkImageToHistogramFilterIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIVF42_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIVF42_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF42

        Create a new object of the class itkImageToHistogramFilterIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF42 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42_swigregister(itkImageToHistogramFilterIVF42)

def itkImageToHistogramFilterIVF43_New():
    return itkImageToHistogramFilterIVF43.New()

class itkImageToHistogramFilterIVF43(itk.itkImageSinkPython.itkImageSinkIVF43):
    r"""Proxy of C++ itkImageToHistogramFilterIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIVF43_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIVF43_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF43

        Create a new object of the class itkImageToHistogramFilterIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF43 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43_swigregister(itkImageToHistogramFilterIVF43)

def itkImageToHistogramFilterIVF44_New():
    return itkImageToHistogramFilterIVF44.New()

class itkImageToHistogramFilterIVF44(itk.itkImageSinkPython.itkImageSinkIVF44):
    r"""Proxy of C++ itkImageToHistogramFilterIVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterIVF44_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterIVF44_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterIVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterIVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterIVF44

        Create a new object of the class itkImageToHistogramFilterIVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterIVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterIVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterIVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterIVF44 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44_swigregister(itkImageToHistogramFilterIVF44)

def itkImageToHistogramFilterVID2_New():
    return itkImageToHistogramFilterVID2.New()

class itkImageToHistogramFilterVID2(itk.itkImageSinkPython.itkImageSinkVID2):
    r"""Proxy of C++ itkImageToHistogramFilterVID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVID2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVID2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVID2

        Create a new object of the class itkImageToHistogramFilterVID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVID2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2_swigregister(itkImageToHistogramFilterVID2)

def itkImageToHistogramFilterVID3_New():
    return itkImageToHistogramFilterVID3.New()

class itkImageToHistogramFilterVID3(itk.itkImageSinkPython.itkImageSinkVID3):
    r"""Proxy of C++ itkImageToHistogramFilterVID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVID3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVID3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVID3

        Create a new object of the class itkImageToHistogramFilterVID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVID3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3_swigregister(itkImageToHistogramFilterVID3)

def itkImageToHistogramFilterVID4_New():
    return itkImageToHistogramFilterVID4.New()

class itkImageToHistogramFilterVID4(itk.itkImageSinkPython.itkImageSinkVID4):
    r"""Proxy of C++ itkImageToHistogramFilterVID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVID4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVID4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVID4

        Create a new object of the class itkImageToHistogramFilterVID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVID4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4_swigregister(itkImageToHistogramFilterVID4)

def itkImageToHistogramFilterVIF2_New():
    return itkImageToHistogramFilterVIF2.New()

class itkImageToHistogramFilterVIF2(itk.itkImageSinkPython.itkImageSinkVIF2):
    r"""Proxy of C++ itkImageToHistogramFilterVIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVIF2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVIF2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIF2

        Create a new object of the class itkImageToHistogramFilterVIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIF2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2_swigregister(itkImageToHistogramFilterVIF2)

def itkImageToHistogramFilterVIF3_New():
    return itkImageToHistogramFilterVIF3.New()

class itkImageToHistogramFilterVIF3(itk.itkImageSinkPython.itkImageSinkVIF3):
    r"""Proxy of C++ itkImageToHistogramFilterVIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVIF3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVIF3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIF3

        Create a new object of the class itkImageToHistogramFilterVIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIF3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3_swigregister(itkImageToHistogramFilterVIF3)

def itkImageToHistogramFilterVIF4_New():
    return itkImageToHistogramFilterVIF4.New()

class itkImageToHistogramFilterVIF4(itk.itkImageSinkPython.itkImageSinkVIF4):
    r"""Proxy of C++ itkImageToHistogramFilterVIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVIF4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVIF4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIF4

        Create a new object of the class itkImageToHistogramFilterVIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIF4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4_swigregister(itkImageToHistogramFilterVIF4)

def itkImageToHistogramFilterVISS2_New():
    return itkImageToHistogramFilterVISS2.New()

class itkImageToHistogramFilterVISS2(itk.itkImageSinkPython.itkImageSinkVISS2):
    r"""Proxy of C++ itkImageToHistogramFilterVISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVISS2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVISS2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVISS2

        Create a new object of the class itkImageToHistogramFilterVISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVISS2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2_swigregister(itkImageToHistogramFilterVISS2)

def itkImageToHistogramFilterVISS3_New():
    return itkImageToHistogramFilterVISS3.New()

class itkImageToHistogramFilterVISS3(itk.itkImageSinkPython.itkImageSinkVISS3):
    r"""Proxy of C++ itkImageToHistogramFilterVISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVISS3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVISS3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVISS3

        Create a new object of the class itkImageToHistogramFilterVISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVISS3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3_swigregister(itkImageToHistogramFilterVISS3)

def itkImageToHistogramFilterVISS4_New():
    return itkImageToHistogramFilterVISS4.New()

class itkImageToHistogramFilterVISS4(itk.itkImageSinkPython.itkImageSinkVISS4):
    r"""Proxy of C++ itkImageToHistogramFilterVISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVISS4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVISS4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVISS4

        Create a new object of the class itkImageToHistogramFilterVISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVISS4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4_swigregister(itkImageToHistogramFilterVISS4)

def itkImageToHistogramFilterVIUC2_New():
    return itkImageToHistogramFilterVIUC2.New()

class itkImageToHistogramFilterVIUC2(itk.itkImageSinkPython.itkImageSinkVIUC2):
    r"""Proxy of C++ itkImageToHistogramFilterVIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVIUC2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVIUC2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIUC2

        Create a new object of the class itkImageToHistogramFilterVIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIUC2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2_swigregister(itkImageToHistogramFilterVIUC2)

def itkImageToHistogramFilterVIUC3_New():
    return itkImageToHistogramFilterVIUC3.New()

class itkImageToHistogramFilterVIUC3(itk.itkImageSinkPython.itkImageSinkVIUC3):
    r"""Proxy of C++ itkImageToHistogramFilterVIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVIUC3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVIUC3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIUC3

        Create a new object of the class itkImageToHistogramFilterVIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIUC3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3_swigregister(itkImageToHistogramFilterVIUC3)

def itkImageToHistogramFilterVIUC4_New():
    return itkImageToHistogramFilterVIUC4.New()

class itkImageToHistogramFilterVIUC4(itk.itkImageSinkPython.itkImageSinkVIUC4):
    r"""Proxy of C++ itkImageToHistogramFilterVIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVIUC4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVIUC4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIUC4

        Create a new object of the class itkImageToHistogramFilterVIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIUC4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4_swigregister(itkImageToHistogramFilterVIUC4)

def itkImageToHistogramFilterVIUS2_New():
    return itkImageToHistogramFilterVIUS2.New()

class itkImageToHistogramFilterVIUS2(itk.itkImageSinkPython.itkImageSinkVIUS2):
    r"""Proxy of C++ itkImageToHistogramFilterVIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVIUS2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVIUS2_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIUS2

        Create a new object of the class itkImageToHistogramFilterVIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIUS2 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2_swigregister(itkImageToHistogramFilterVIUS2)

def itkImageToHistogramFilterVIUS3_New():
    return itkImageToHistogramFilterVIUS3.New()

class itkImageToHistogramFilterVIUS3(itk.itkImageSinkPython.itkImageSinkVIUS3):
    r"""Proxy of C++ itkImageToHistogramFilterVIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVIUS3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVIUS3_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIUS3

        Create a new object of the class itkImageToHistogramFilterVIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIUS3 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3_swigregister(itkImageToHistogramFilterVIUS3)

def itkImageToHistogramFilterVIUS4_New():
    return itkImageToHistogramFilterVIUS4.New()

class itkImageToHistogramFilterVIUS4(itk.itkImageSinkPython.itkImageSinkVIUS4):
    r"""Proxy of C++ itkImageToHistogramFilterVIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageToHistogramFilterVIUS4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageToHistogramFilterVIUS4_Pointer"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_Clone(self)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkHistogramD
        GetOutput(self) -> itkHistogramD
        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GetOutput(self, *args)

    def SetHistogramSizeInput(self, _arg):
        r"""
        SetHistogramSizeInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_SetHistogramSizeInput(self, _arg)

    def SetHistogramSize(self, *args):
        r"""
        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAUL const *

        SetHistogramSize(self, _arg)

        Parameters
        ----------
        _arg: itkArrayUL const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_SetHistogramSize(self, *args)

    def GetHistogramSizeInput(self):
        r"""GetHistogramSizeInput(self) -> itkSimpleDataObjectDecoratorAUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GetHistogramSizeInput(self)

    def GetHistogramSize(self):
        r"""GetHistogramSize(self) -> itkArrayUL"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GetHistogramSize(self)

    def SetMarginalScaleInput(self, _arg):
        r"""
        SetMarginalScaleInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_SetMarginalScaleInput(self, _arg)

    def SetMarginalScale(self, *args):
        r"""
        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMarginalScale(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_SetMarginalScale(self, *args)

    def GetMarginalScaleInput(self):
        r"""GetMarginalScaleInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GetMarginalScaleInput(self)

    def GetMarginalScale(self):
        r"""GetMarginalScale(self) -> double const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GetMarginalScale(self)

    def SetHistogramBinMinimumInput(self, _arg):
        r"""
        SetHistogramBinMinimumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_SetHistogramBinMinimumInput(self, _arg)

    def SetHistogramBinMinimum(self, *args):
        r"""
        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMinimum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_SetHistogramBinMinimum(self, *args)

    def GetHistogramBinMinimumInput(self):
        r"""GetHistogramBinMinimumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GetHistogramBinMinimumInput(self)

    def GetHistogramBinMinimum(self):
        r"""GetHistogramBinMinimum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GetHistogramBinMinimum(self)

    def SetHistogramBinMaximumInput(self, _arg):
        r"""
        SetHistogramBinMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_SetHistogramBinMaximumInput(self, _arg)

    def SetHistogramBinMaximum(self, *args):
        r"""
        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorAD const *

        SetHistogramBinMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_SetHistogramBinMaximum(self, *args)

    def GetHistogramBinMaximumInput(self):
        r"""GetHistogramBinMaximumInput(self) -> itkSimpleDataObjectDecoratorAD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GetHistogramBinMaximumInput(self)

    def GetHistogramBinMaximum(self):
        r"""GetHistogramBinMaximum(self) -> itkArrayD"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GetHistogramBinMaximum(self)

    def SetAutoMinimumMaximumInput(self, _arg):
        r"""
        SetAutoMinimumMaximumInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_SetAutoMinimumMaximumInput(self, _arg)

    def SetAutoMinimumMaximum(self, *args):
        r"""
        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorB const *

        SetAutoMinimumMaximum(self, _arg)

        Parameters
        ----------
        _arg: bool const &

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_SetAutoMinimumMaximum(self, *args)

    def GetAutoMinimumMaximumInput(self):
        r"""GetAutoMinimumMaximumInput(self) -> itkSimpleDataObjectDecoratorB"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GetAutoMinimumMaximumInput(self)

    def GetAutoMinimumMaximum(self):
        r"""GetAutoMinimumMaximum(self) -> bool const &"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GetAutoMinimumMaximum(self)

    def AutoMinimumMaximumOn(self):
        r"""AutoMinimumMaximumOn(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_AutoMinimumMaximumOn(self)

    def AutoMinimumMaximumOff(self):
        r"""AutoMinimumMaximumOff(self)"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_AutoMinimumMaximumOff(self)

    def GraftOutput(self, graft):
        r"""
        GraftOutput(self, graft)

        Parameters
        ----------
        graft: itkDataObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GraftOutput(self, graft)

    def SetNumberOfStreamDivisions(self, n):
        r"""
        SetNumberOfStreamDivisions(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_SetNumberOfStreamDivisions(self, n)

    def GetNumberOfStreamDivisions(self):
        r"""GetNumberOfStreamDivisions(self) -> unsigned int"""
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_GetNumberOfStreamDivisions(self)
    __swig_destroy__ = _itkImageToHistogramFilterPython.delete_itkImageToHistogramFilterVIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageToHistogramFilterVIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageToHistogramFilterVIUS4

        Create a new object of the class itkImageToHistogramFilterVIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageToHistogramFilterVIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageToHistogramFilterVIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageToHistogramFilterVIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageToHistogramFilterVIUS4 in _itkImageToHistogramFilterPython:
_itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4_swigregister(itkImageToHistogramFilterVIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def image_to_histogram_filter(*args: itkt.ImageLike,  histogram_size_input=..., histogram_size: Sequence[int]=..., marginal_scale_input=..., marginal_scale: float=..., histogram_bin_minimum_input=..., histogram_bin_minimum: Sequence[float]=..., histogram_bin_maximum_input=..., histogram_bin_maximum: Sequence[float]=..., auto_minimum_maximum_input=..., auto_minimum_maximum: bool=..., number_of_stream_divisions: int=...,**kwargs):
    """Functional interface for ImageToHistogramFilter"""
    import itk

    kwarg_typehints = { 'histogram_size_input':histogram_size_input,'histogram_size':histogram_size,'marginal_scale_input':marginal_scale_input,'marginal_scale':marginal_scale,'histogram_bin_minimum_input':histogram_bin_minimum_input,'histogram_bin_minimum':histogram_bin_minimum,'histogram_bin_maximum_input':histogram_bin_maximum_input,'histogram_bin_maximum':histogram_bin_maximum,'auto_minimum_maximum_input':auto_minimum_maximum_input,'auto_minimum_maximum':auto_minimum_maximum,'number_of_stream_divisions':number_of_stream_divisions }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageToHistogramFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def image_to_histogram_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKStatistics.ImageToHistogramFilter
    image_to_histogram_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_to_histogram_filter.__doc__ = filter_object.__doc__



