# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPadImageFilterBasePython
else:
    import _itkPadImageFilterBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython
import itk.itkImageBoundaryConditionPython

def itkPadImageFilterBaseICD2ICD2_New():
    return itkPadImageFilterBaseICD2ICD2.New()

class itkPadImageFilterBaseICD2ICD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkPadImageFilterBaseICD2ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICD2ICD2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD2ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICD2ICD2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD2ICD2_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICD2 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD2ICD2_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICD2"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD2ICD2_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICD2ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICD2ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD2ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICD2ICD2

        Create a new object of the class itkPadImageFilterBaseICD2ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICD2ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICD2ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICD2ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICD2ICD2 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICD2ICD2_swigregister(itkPadImageFilterBaseICD2ICD2)

def itkPadImageFilterBaseICD3ICD3_New():
    return itkPadImageFilterBaseICD3ICD3.New()

class itkPadImageFilterBaseICD3ICD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkPadImageFilterBaseICD3ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICD3ICD3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD3ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICD3ICD3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD3ICD3_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICD3 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD3ICD3_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICD3"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD3ICD3_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICD3ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICD3ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD3ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICD3ICD3

        Create a new object of the class itkPadImageFilterBaseICD3ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICD3ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICD3ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICD3ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICD3ICD3 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICD3ICD3_swigregister(itkPadImageFilterBaseICD3ICD3)

def itkPadImageFilterBaseICD4ICD4_New():
    return itkPadImageFilterBaseICD4ICD4.New()

class itkPadImageFilterBaseICD4ICD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkPadImageFilterBaseICD4ICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICD4ICD4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD4ICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICD4ICD4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD4ICD4_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICD4 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD4ICD4_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICD4"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD4ICD4_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICD4ICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICD4ICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICD4ICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICD4ICD4

        Create a new object of the class itkPadImageFilterBaseICD4ICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICD4ICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICD4ICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICD4ICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICD4ICD4 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICD4ICD4_swigregister(itkPadImageFilterBaseICD4ICD4)

def itkPadImageFilterBaseICF2ICF2_New():
    return itkPadImageFilterBaseICF2ICF2.New()

class itkPadImageFilterBaseICF2ICF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkPadImageFilterBaseICF2ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICF2ICF2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF2ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICF2ICF2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF2ICF2_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICF2 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF2ICF2_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICF2"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF2ICF2_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICF2ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICF2ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF2ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICF2ICF2

        Create a new object of the class itkPadImageFilterBaseICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICF2ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICF2ICF2 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICF2ICF2_swigregister(itkPadImageFilterBaseICF2ICF2)

def itkPadImageFilterBaseICF3ICF3_New():
    return itkPadImageFilterBaseICF3ICF3.New()

class itkPadImageFilterBaseICF3ICF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkPadImageFilterBaseICF3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICF3ICF3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF3ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICF3ICF3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF3ICF3_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICF3 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF3ICF3_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICF3"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF3ICF3_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICF3ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICF3ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF3ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICF3ICF3

        Create a new object of the class itkPadImageFilterBaseICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICF3ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICF3ICF3 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICF3ICF3_swigregister(itkPadImageFilterBaseICF3ICF3)

def itkPadImageFilterBaseICF4ICF4_New():
    return itkPadImageFilterBaseICF4ICF4.New()

class itkPadImageFilterBaseICF4ICF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkPadImageFilterBaseICF4ICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICF4ICF4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF4ICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICF4ICF4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF4ICF4_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICF4 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF4ICF4_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICF4"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF4ICF4_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICF4ICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICF4ICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICF4ICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICF4ICF4

        Create a new object of the class itkPadImageFilterBaseICF4ICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICF4ICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICF4ICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICF4ICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICF4ICF4 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICF4ICF4_swigregister(itkPadImageFilterBaseICF4ICF4)

def itkPadImageFilterBaseICVF22ICVF22_New():
    return itkPadImageFilterBaseICVF22ICVF22.New()

class itkPadImageFilterBaseICVF22ICVF22(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22):
    r"""Proxy of C++ itkPadImageFilterBaseICVF22ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICVF22ICVF22_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF22ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICVF22ICVF22_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF22ICVF22_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICVF22 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF22ICVF22_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICVF22"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF22ICVF22_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICVF22ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICVF22ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF22ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICVF22ICVF22

        Create a new object of the class itkPadImageFilterBaseICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICVF22ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICVF22ICVF22 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICVF22ICVF22_swigregister(itkPadImageFilterBaseICVF22ICVF22)

def itkPadImageFilterBaseICVF23ICVF23_New():
    return itkPadImageFilterBaseICVF23ICVF23.New()

class itkPadImageFilterBaseICVF23ICVF23(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23):
    r"""Proxy of C++ itkPadImageFilterBaseICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICVF23ICVF23_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF23ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICVF23ICVF23_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF23ICVF23_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICVF23 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF23ICVF23_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICVF23"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF23ICVF23_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICVF23ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICVF23ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF23ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICVF23ICVF23

        Create a new object of the class itkPadImageFilterBaseICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICVF23ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICVF23ICVF23 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICVF23ICVF23_swigregister(itkPadImageFilterBaseICVF23ICVF23)

def itkPadImageFilterBaseICVF24ICVF24_New():
    return itkPadImageFilterBaseICVF24ICVF24.New()

class itkPadImageFilterBaseICVF24ICVF24(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24):
    r"""Proxy of C++ itkPadImageFilterBaseICVF24ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICVF24ICVF24_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF24ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICVF24ICVF24_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF24ICVF24_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICVF24 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF24ICVF24_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICVF24"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF24ICVF24_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICVF24ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICVF24ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF24ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICVF24ICVF24

        Create a new object of the class itkPadImageFilterBaseICVF24ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICVF24ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICVF24ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICVF24ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICVF24ICVF24 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICVF24ICVF24_swigregister(itkPadImageFilterBaseICVF24ICVF24)

def itkPadImageFilterBaseICVF32ICVF32_New():
    return itkPadImageFilterBaseICVF32ICVF32.New()

class itkPadImageFilterBaseICVF32ICVF32(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32):
    r"""Proxy of C++ itkPadImageFilterBaseICVF32ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICVF32ICVF32_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF32ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICVF32ICVF32_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF32ICVF32_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICVF32 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF32ICVF32_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICVF32"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF32ICVF32_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICVF32ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICVF32ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF32ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICVF32ICVF32

        Create a new object of the class itkPadImageFilterBaseICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICVF32ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICVF32ICVF32 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICVF32ICVF32_swigregister(itkPadImageFilterBaseICVF32ICVF32)

def itkPadImageFilterBaseICVF33ICVF33_New():
    return itkPadImageFilterBaseICVF33ICVF33.New()

class itkPadImageFilterBaseICVF33ICVF33(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33):
    r"""Proxy of C++ itkPadImageFilterBaseICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICVF33ICVF33_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF33ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICVF33ICVF33_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF33ICVF33_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICVF33 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF33ICVF33_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICVF33"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF33ICVF33_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICVF33ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICVF33ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF33ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICVF33ICVF33

        Create a new object of the class itkPadImageFilterBaseICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICVF33ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICVF33ICVF33 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICVF33ICVF33_swigregister(itkPadImageFilterBaseICVF33ICVF33)

def itkPadImageFilterBaseICVF34ICVF34_New():
    return itkPadImageFilterBaseICVF34ICVF34.New()

class itkPadImageFilterBaseICVF34ICVF34(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34):
    r"""Proxy of C++ itkPadImageFilterBaseICVF34ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICVF34ICVF34_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF34ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICVF34ICVF34_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF34ICVF34_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICVF34 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF34ICVF34_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICVF34"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF34ICVF34_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICVF34ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICVF34ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF34ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICVF34ICVF34

        Create a new object of the class itkPadImageFilterBaseICVF34ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICVF34ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICVF34ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICVF34ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICVF34ICVF34 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICVF34ICVF34_swigregister(itkPadImageFilterBaseICVF34ICVF34)

def itkPadImageFilterBaseICVF42ICVF42_New():
    return itkPadImageFilterBaseICVF42ICVF42.New()

class itkPadImageFilterBaseICVF42ICVF42(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42):
    r"""Proxy of C++ itkPadImageFilterBaseICVF42ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICVF42ICVF42_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF42ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICVF42ICVF42_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF42ICVF42_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICVF42 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF42ICVF42_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICVF42"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF42ICVF42_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICVF42ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICVF42ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF42ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICVF42ICVF42

        Create a new object of the class itkPadImageFilterBaseICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICVF42ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICVF42ICVF42 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICVF42ICVF42_swigregister(itkPadImageFilterBaseICVF42ICVF42)

def itkPadImageFilterBaseICVF43ICVF43_New():
    return itkPadImageFilterBaseICVF43ICVF43.New()

class itkPadImageFilterBaseICVF43ICVF43(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43):
    r"""Proxy of C++ itkPadImageFilterBaseICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICVF43ICVF43_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF43ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICVF43ICVF43_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF43ICVF43_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICVF43 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF43ICVF43_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICVF43"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF43ICVF43_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICVF43ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICVF43ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF43ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICVF43ICVF43

        Create a new object of the class itkPadImageFilterBaseICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICVF43ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICVF43ICVF43 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICVF43ICVF43_swigregister(itkPadImageFilterBaseICVF43ICVF43)

def itkPadImageFilterBaseICVF44ICVF44_New():
    return itkPadImageFilterBaseICVF44ICVF44.New()

class itkPadImageFilterBaseICVF44ICVF44(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44):
    r"""Proxy of C++ itkPadImageFilterBaseICVF44ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseICVF44ICVF44_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF44ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseICVF44ICVF44_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF44ICVF44_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionICVF44 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF44ICVF44_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionICVF44"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF44ICVF44_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseICVF44ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseICVF44ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseICVF44ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseICVF44ICVF44

        Create a new object of the class itkPadImageFilterBaseICVF44ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseICVF44ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseICVF44ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseICVF44ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseICVF44ICVF44 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseICVF44ICVF44_swigregister(itkPadImageFilterBaseICVF44ICVF44)

def itkPadImageFilterBaseID2ID2_New():
    return itkPadImageFilterBaseID2ID2.New()

class itkPadImageFilterBaseID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkPadImageFilterBaseID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseID2ID2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseID2ID2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID2ID2_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionID2 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID2ID2_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionID2"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID2ID2_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseID2ID2

        Create a new object of the class itkPadImageFilterBaseID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseID2ID2 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseID2ID2_swigregister(itkPadImageFilterBaseID2ID2)

def itkPadImageFilterBaseID3ID3_New():
    return itkPadImageFilterBaseID3ID3.New()

class itkPadImageFilterBaseID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkPadImageFilterBaseID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseID3ID3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseID3ID3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID3ID3_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionID3 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID3ID3_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionID3"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID3ID3_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseID3ID3

        Create a new object of the class itkPadImageFilterBaseID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseID3ID3 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseID3ID3_swigregister(itkPadImageFilterBaseID3ID3)

def itkPadImageFilterBaseID4ID4_New():
    return itkPadImageFilterBaseID4ID4.New()

class itkPadImageFilterBaseID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkPadImageFilterBaseID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseID4ID4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseID4ID4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID4ID4_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionID4 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID4ID4_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionID4"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID4ID4_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseID4ID4

        Create a new object of the class itkPadImageFilterBaseID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseID4ID4 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseID4ID4_swigregister(itkPadImageFilterBaseID4ID4)

def itkPadImageFilterBaseIF2IF2_New():
    return itkPadImageFilterBaseIF2IF2.New()

class itkPadImageFilterBaseIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkPadImageFilterBaseIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIF2IF2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIF2IF2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF2IF2_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIF2 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF2IF2_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIF2"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF2IF2_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIF2IF2

        Create a new object of the class itkPadImageFilterBaseIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIF2IF2 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIF2IF2_swigregister(itkPadImageFilterBaseIF2IF2)

def itkPadImageFilterBaseIF3IF3_New():
    return itkPadImageFilterBaseIF3IF3.New()

class itkPadImageFilterBaseIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkPadImageFilterBaseIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIF3IF3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIF3IF3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF3IF3_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIF3 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF3IF3_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIF3"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF3IF3_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIF3IF3

        Create a new object of the class itkPadImageFilterBaseIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIF3IF3 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIF3IF3_swigregister(itkPadImageFilterBaseIF3IF3)

def itkPadImageFilterBaseIF4IF4_New():
    return itkPadImageFilterBaseIF4IF4.New()

class itkPadImageFilterBaseIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkPadImageFilterBaseIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIF4IF4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIF4IF4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF4IF4_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIF4 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF4IF4_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIF4"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF4IF4_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIF4IF4

        Create a new object of the class itkPadImageFilterBaseIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIF4IF4 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIF4IF4_swigregister(itkPadImageFilterBaseIF4IF4)

def itkPadImageFilterBaseIRGBAUC2IRGBAUC2_New():
    return itkPadImageFilterBaseIRGBAUC2IRGBAUC2.New()

class itkPadImageFilterBaseIRGBAUC2IRGBAUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2):
    r"""Proxy of C++ itkPadImageFilterBaseIRGBAUC2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIRGBAUC2IRGBAUC2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIRGBAUC2IRGBAUC2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC2IRGBAUC2_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIRGBAUC2 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC2IRGBAUC2_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIRGBAUC2"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC2IRGBAUC2_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIRGBAUC2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIRGBAUC2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIRGBAUC2IRGBAUC2

        Create a new object of the class itkPadImageFilterBaseIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIRGBAUC2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIRGBAUC2IRGBAUC2 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC2IRGBAUC2_swigregister(itkPadImageFilterBaseIRGBAUC2IRGBAUC2)

def itkPadImageFilterBaseIRGBAUC3IRGBAUC3_New():
    return itkPadImageFilterBaseIRGBAUC3IRGBAUC3.New()

class itkPadImageFilterBaseIRGBAUC3IRGBAUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3):
    r"""Proxy of C++ itkPadImageFilterBaseIRGBAUC3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIRGBAUC3IRGBAUC3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIRGBAUC3IRGBAUC3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC3IRGBAUC3_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIRGBAUC3 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC3IRGBAUC3_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIRGBAUC3"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC3IRGBAUC3_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIRGBAUC3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIRGBAUC3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIRGBAUC3IRGBAUC3

        Create a new object of the class itkPadImageFilterBaseIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIRGBAUC3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIRGBAUC3IRGBAUC3 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC3IRGBAUC3_swigregister(itkPadImageFilterBaseIRGBAUC3IRGBAUC3)

def itkPadImageFilterBaseIRGBAUC4IRGBAUC4_New():
    return itkPadImageFilterBaseIRGBAUC4IRGBAUC4.New()

class itkPadImageFilterBaseIRGBAUC4IRGBAUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4):
    r"""Proxy of C++ itkPadImageFilterBaseIRGBAUC4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIRGBAUC4IRGBAUC4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIRGBAUC4IRGBAUC4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC4IRGBAUC4_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIRGBAUC4 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC4IRGBAUC4_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIRGBAUC4"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC4IRGBAUC4_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIRGBAUC4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIRGBAUC4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIRGBAUC4IRGBAUC4

        Create a new object of the class itkPadImageFilterBaseIRGBAUC4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIRGBAUC4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIRGBAUC4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIRGBAUC4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIRGBAUC4IRGBAUC4 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC4IRGBAUC4_swigregister(itkPadImageFilterBaseIRGBAUC4IRGBAUC4)

def itkPadImageFilterBaseIRGBUC2IRGBUC2_New():
    return itkPadImageFilterBaseIRGBUC2IRGBUC2.New()

class itkPadImageFilterBaseIRGBUC2IRGBUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2):
    r"""Proxy of C++ itkPadImageFilterBaseIRGBUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIRGBUC2IRGBUC2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIRGBUC2IRGBUC2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC2IRGBUC2_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIRGBUC2 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC2IRGBUC2_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIRGBUC2"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC2IRGBUC2_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIRGBUC2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIRGBUC2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIRGBUC2IRGBUC2

        Create a new object of the class itkPadImageFilterBaseIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIRGBUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIRGBUC2IRGBUC2 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC2IRGBUC2_swigregister(itkPadImageFilterBaseIRGBUC2IRGBUC2)

def itkPadImageFilterBaseIRGBUC3IRGBUC3_New():
    return itkPadImageFilterBaseIRGBUC3IRGBUC3.New()

class itkPadImageFilterBaseIRGBUC3IRGBUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3):
    r"""Proxy of C++ itkPadImageFilterBaseIRGBUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIRGBUC3IRGBUC3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIRGBUC3IRGBUC3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC3IRGBUC3_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIRGBUC3 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC3IRGBUC3_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIRGBUC3"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC3IRGBUC3_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIRGBUC3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIRGBUC3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIRGBUC3IRGBUC3

        Create a new object of the class itkPadImageFilterBaseIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIRGBUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIRGBUC3IRGBUC3 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC3IRGBUC3_swigregister(itkPadImageFilterBaseIRGBUC3IRGBUC3)

def itkPadImageFilterBaseIRGBUC4IRGBUC4_New():
    return itkPadImageFilterBaseIRGBUC4IRGBUC4.New()

class itkPadImageFilterBaseIRGBUC4IRGBUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4):
    r"""Proxy of C++ itkPadImageFilterBaseIRGBUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIRGBUC4IRGBUC4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIRGBUC4IRGBUC4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC4IRGBUC4_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIRGBUC4 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC4IRGBUC4_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIRGBUC4"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC4IRGBUC4_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIRGBUC4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIRGBUC4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIRGBUC4IRGBUC4

        Create a new object of the class itkPadImageFilterBaseIRGBUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIRGBUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIRGBUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIRGBUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIRGBUC4IRGBUC4 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC4IRGBUC4_swigregister(itkPadImageFilterBaseIRGBUC4IRGBUC4)

def itkPadImageFilterBaseISS2ISS2_New():
    return itkPadImageFilterBaseISS2ISS2.New()

class itkPadImageFilterBaseISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkPadImageFilterBaseISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseISS2ISS2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseISS2ISS2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS2ISS2_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionISS2 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS2ISS2_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionISS2"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS2ISS2_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseISS2ISS2

        Create a new object of the class itkPadImageFilterBaseISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseISS2ISS2 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseISS2ISS2_swigregister(itkPadImageFilterBaseISS2ISS2)

def itkPadImageFilterBaseISS3ISS3_New():
    return itkPadImageFilterBaseISS3ISS3.New()

class itkPadImageFilterBaseISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkPadImageFilterBaseISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseISS3ISS3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseISS3ISS3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS3ISS3_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionISS3 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS3ISS3_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionISS3"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS3ISS3_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseISS3ISS3

        Create a new object of the class itkPadImageFilterBaseISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseISS3ISS3 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseISS3ISS3_swigregister(itkPadImageFilterBaseISS3ISS3)

def itkPadImageFilterBaseISS4ISS4_New():
    return itkPadImageFilterBaseISS4ISS4.New()

class itkPadImageFilterBaseISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkPadImageFilterBaseISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseISS4ISS4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseISS4ISS4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS4ISS4_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionISS4 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS4ISS4_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionISS4"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS4ISS4_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseISS4ISS4

        Create a new object of the class itkPadImageFilterBaseISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseISS4ISS4 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseISS4ISS4_swigregister(itkPadImageFilterBaseISS4ISS4)

def itkPadImageFilterBaseIUC2IUC2_New():
    return itkPadImageFilterBaseIUC2IUC2.New()

class itkPadImageFilterBaseIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkPadImageFilterBaseIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIUC2IUC2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIUC2IUC2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC2IUC2_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIUC2 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC2IUC2_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIUC2"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC2IUC2_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIUC2IUC2

        Create a new object of the class itkPadImageFilterBaseIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIUC2IUC2 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIUC2IUC2_swigregister(itkPadImageFilterBaseIUC2IUC2)

def itkPadImageFilterBaseIUC3IUC3_New():
    return itkPadImageFilterBaseIUC3IUC3.New()

class itkPadImageFilterBaseIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkPadImageFilterBaseIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIUC3IUC3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIUC3IUC3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC3IUC3_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIUC3 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC3IUC3_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIUC3"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC3IUC3_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIUC3IUC3

        Create a new object of the class itkPadImageFilterBaseIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIUC3IUC3 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIUC3IUC3_swigregister(itkPadImageFilterBaseIUC3IUC3)

def itkPadImageFilterBaseIUC4IUC4_New():
    return itkPadImageFilterBaseIUC4IUC4.New()

class itkPadImageFilterBaseIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkPadImageFilterBaseIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIUC4IUC4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIUC4IUC4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC4IUC4_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIUC4 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC4IUC4_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIUC4"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC4IUC4_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIUC4IUC4

        Create a new object of the class itkPadImageFilterBaseIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIUC4IUC4 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIUC4IUC4_swigregister(itkPadImageFilterBaseIUC4IUC4)

def itkPadImageFilterBaseIUS2IUS2_New():
    return itkPadImageFilterBaseIUS2IUS2.New()

class itkPadImageFilterBaseIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkPadImageFilterBaseIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIUS2IUS2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIUS2IUS2_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS2IUS2_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIUS2 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS2IUS2_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIUS2"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS2IUS2_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIUS2IUS2

        Create a new object of the class itkPadImageFilterBaseIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIUS2IUS2 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIUS2IUS2_swigregister(itkPadImageFilterBaseIUS2IUS2)

def itkPadImageFilterBaseIUS3IUS3_New():
    return itkPadImageFilterBaseIUS3IUS3.New()

class itkPadImageFilterBaseIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkPadImageFilterBaseIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIUS3IUS3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIUS3IUS3_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS3IUS3_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIUS3 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS3IUS3_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIUS3"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS3IUS3_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIUS3IUS3

        Create a new object of the class itkPadImageFilterBaseIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIUS3IUS3 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIUS3IUS3_swigregister(itkPadImageFilterBaseIUS3IUS3)

def itkPadImageFilterBaseIUS4IUS4_New():
    return itkPadImageFilterBaseIUS4IUS4.New()

class itkPadImageFilterBaseIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkPadImageFilterBaseIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIUS4IUS4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIUS4IUS4_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS4IUS4_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIUS4 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS4IUS4_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIUS4"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS4IUS4_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIUS4IUS4

        Create a new object of the class itkPadImageFilterBaseIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIUS4IUS4 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIUS4IUS4_swigregister(itkPadImageFilterBaseIUS4IUS4)

def itkPadImageFilterBaseIVF22IVF22_New():
    return itkPadImageFilterBaseIVF22IVF22.New()

class itkPadImageFilterBaseIVF22IVF22(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22):
    r"""Proxy of C++ itkPadImageFilterBaseIVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIVF22IVF22_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF22IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIVF22IVF22_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF22IVF22_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIVF22 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF22IVF22_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIVF22"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF22IVF22_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIVF22IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIVF22IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF22IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIVF22IVF22

        Create a new object of the class itkPadImageFilterBaseIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIVF22IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIVF22IVF22 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIVF22IVF22_swigregister(itkPadImageFilterBaseIVF22IVF22)

def itkPadImageFilterBaseIVF23IVF23_New():
    return itkPadImageFilterBaseIVF23IVF23.New()

class itkPadImageFilterBaseIVF23IVF23(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23):
    r"""Proxy of C++ itkPadImageFilterBaseIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIVF23IVF23_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF23IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIVF23IVF23_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF23IVF23_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIVF23 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF23IVF23_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIVF23"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF23IVF23_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIVF23IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIVF23IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF23IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIVF23IVF23

        Create a new object of the class itkPadImageFilterBaseIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIVF23IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIVF23IVF23 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIVF23IVF23_swigregister(itkPadImageFilterBaseIVF23IVF23)

def itkPadImageFilterBaseIVF24IVF24_New():
    return itkPadImageFilterBaseIVF24IVF24.New()

class itkPadImageFilterBaseIVF24IVF24(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24):
    r"""Proxy of C++ itkPadImageFilterBaseIVF24IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIVF24IVF24_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF24IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIVF24IVF24_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF24IVF24_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIVF24 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF24IVF24_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIVF24"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF24IVF24_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIVF24IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIVF24IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF24IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIVF24IVF24

        Create a new object of the class itkPadImageFilterBaseIVF24IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIVF24IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIVF24IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIVF24IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIVF24IVF24 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIVF24IVF24_swigregister(itkPadImageFilterBaseIVF24IVF24)

def itkPadImageFilterBaseIVF32IVF32_New():
    return itkPadImageFilterBaseIVF32IVF32.New()

class itkPadImageFilterBaseIVF32IVF32(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32):
    r"""Proxy of C++ itkPadImageFilterBaseIVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIVF32IVF32_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF32IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIVF32IVF32_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF32IVF32_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIVF32 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF32IVF32_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIVF32"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF32IVF32_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIVF32IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIVF32IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF32IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIVF32IVF32

        Create a new object of the class itkPadImageFilterBaseIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIVF32IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIVF32IVF32 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIVF32IVF32_swigregister(itkPadImageFilterBaseIVF32IVF32)

def itkPadImageFilterBaseIVF33IVF33_New():
    return itkPadImageFilterBaseIVF33IVF33.New()

class itkPadImageFilterBaseIVF33IVF33(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    r"""Proxy of C++ itkPadImageFilterBaseIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIVF33IVF33_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF33IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIVF33IVF33_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF33IVF33_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIVF33 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF33IVF33_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIVF33"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF33IVF33_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIVF33IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIVF33IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF33IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIVF33IVF33

        Create a new object of the class itkPadImageFilterBaseIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIVF33IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIVF33IVF33 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIVF33IVF33_swigregister(itkPadImageFilterBaseIVF33IVF33)

def itkPadImageFilterBaseIVF34IVF34_New():
    return itkPadImageFilterBaseIVF34IVF34.New()

class itkPadImageFilterBaseIVF34IVF34(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34):
    r"""Proxy of C++ itkPadImageFilterBaseIVF34IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIVF34IVF34_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF34IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIVF34IVF34_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF34IVF34_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIVF34 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF34IVF34_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIVF34"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF34IVF34_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIVF34IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIVF34IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF34IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIVF34IVF34

        Create a new object of the class itkPadImageFilterBaseIVF34IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIVF34IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIVF34IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIVF34IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIVF34IVF34 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIVF34IVF34_swigregister(itkPadImageFilterBaseIVF34IVF34)

def itkPadImageFilterBaseIVF42IVF42_New():
    return itkPadImageFilterBaseIVF42IVF42.New()

class itkPadImageFilterBaseIVF42IVF42(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42):
    r"""Proxy of C++ itkPadImageFilterBaseIVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIVF42IVF42_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF42IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIVF42IVF42_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF42IVF42_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIVF42 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF42IVF42_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIVF42"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF42IVF42_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIVF42IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIVF42IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF42IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIVF42IVF42

        Create a new object of the class itkPadImageFilterBaseIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIVF42IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIVF42IVF42 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIVF42IVF42_swigregister(itkPadImageFilterBaseIVF42IVF42)

def itkPadImageFilterBaseIVF43IVF43_New():
    return itkPadImageFilterBaseIVF43IVF43.New()

class itkPadImageFilterBaseIVF43IVF43(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43):
    r"""Proxy of C++ itkPadImageFilterBaseIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIVF43IVF43_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF43IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIVF43IVF43_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF43IVF43_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIVF43 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF43IVF43_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIVF43"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF43IVF43_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIVF43IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIVF43IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF43IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIVF43IVF43

        Create a new object of the class itkPadImageFilterBaseIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIVF43IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIVF43IVF43 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIVF43IVF43_swigregister(itkPadImageFilterBaseIVF43IVF43)

def itkPadImageFilterBaseIVF44IVF44_New():
    return itkPadImageFilterBaseIVF44IVF44.New()

class itkPadImageFilterBaseIVF44IVF44(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44):
    r"""Proxy of C++ itkPadImageFilterBaseIVF44IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPadImageFilterBaseIVF44IVF44_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF44IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPadImageFilterBaseIVF44IVF44_Pointer"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF44IVF44_Clone(self)

    def SetBoundaryCondition(self, _arg):
        r"""
        SetBoundaryCondition(self, _arg)

        Parameters
        ----------
        _arg: itkImageBoundaryConditionIVF44 *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF44IVF44_SetBoundaryCondition(self, _arg)

    def GetBoundaryCondition(self):
        r"""GetBoundaryCondition(self) -> itkImageBoundaryConditionIVF44"""
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF44IVF44_GetBoundaryCondition(self)
    __swig_destroy__ = _itkPadImageFilterBasePython.delete_itkPadImageFilterBaseIVF44IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPadImageFilterBaseIVF44IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPadImageFilterBasePython.itkPadImageFilterBaseIVF44IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPadImageFilterBaseIVF44IVF44

        Create a new object of the class itkPadImageFilterBaseIVF44IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPadImageFilterBaseIVF44IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPadImageFilterBaseIVF44IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPadImageFilterBaseIVF44IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPadImageFilterBaseIVF44IVF44 in _itkPadImageFilterBasePython:
_itkPadImageFilterBasePython.itkPadImageFilterBaseIVF44IVF44_swigregister(itkPadImageFilterBaseIVF44IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def pad_image_filter_base(*args: itkt.ImageLike,  boundary_condition: itkt.ImageBoundaryCondition=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for PadImageFilterBase"""
    import itk

    kwarg_typehints = { 'boundary_condition':boundary_condition }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.PadImageFilterBase.New(*args, **kwargs)

    return instance.__internal_call__()

def pad_image_filter_base_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageGrid.PadImageFilterBase
    pad_image_filter_base.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    pad_image_filter_base.__doc__ = filter_object.__doc__



