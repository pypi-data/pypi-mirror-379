# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkExtractImageFilterPython
else:
    import _itkExtractImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkInPlaceImageFilterBPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkOffsetPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
class itkExtractImageFilterEnums(object):
    r"""Proxy of C++ itkExtractImageFilterEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    DirectionCollapseStrategy_DIRECTIONCOLLAPSETOUNKOWN = _itkExtractImageFilterPython.itkExtractImageFilterEnums_DirectionCollapseStrategy_DIRECTIONCOLLAPSETOUNKOWN
    
    DirectionCollapseStrategy_DIRECTIONCOLLAPSETOIDENTITY = _itkExtractImageFilterPython.itkExtractImageFilterEnums_DirectionCollapseStrategy_DIRECTIONCOLLAPSETOIDENTITY
    
    DirectionCollapseStrategy_DIRECTIONCOLLAPSETOSUBMATRIX = _itkExtractImageFilterPython.itkExtractImageFilterEnums_DirectionCollapseStrategy_DIRECTIONCOLLAPSETOSUBMATRIX
    
    DirectionCollapseStrategy_DIRECTIONCOLLAPSETOGUESS = _itkExtractImageFilterPython.itkExtractImageFilterEnums_DirectionCollapseStrategy_DIRECTIONCOLLAPSETOGUESS
    

    def __init__(self, *args):
        r"""
        __init__(self) -> itkExtractImageFilterEnums
        __init__(self, arg0) -> itkExtractImageFilterEnums

        Parameters
        ----------
        arg0: itkExtractImageFilterEnums const &

        """
        _itkExtractImageFilterPython.itkExtractImageFilterEnums_swiginit(self, _itkExtractImageFilterPython.new_itkExtractImageFilterEnums(*args))
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterEnums

# Register itkExtractImageFilterEnums in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterEnums_swigregister(itkExtractImageFilterEnums)

def itkExtractImageFilterICD2ICD2_New():
    return itkExtractImageFilterICD2ICD2.New()

class itkExtractImageFilterICD2ICD2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICD2ICD2):
    r"""Proxy of C++ itkExtractImageFilterICD2ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICD2ICD2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICD2ICD2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICD2ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICD2ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICD2ICD2

        Create a new object of the class itkExtractImageFilterICD2ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICD2ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICD2ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICD2ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICD2ICD2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2_swigregister(itkExtractImageFilterICD2ICD2)

def itkExtractImageFilterICD3ICD2_New():
    return itkExtractImageFilterICD3ICD2.New()

class itkExtractImageFilterICD3ICD2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICD3ICD2):
    r"""Proxy of C++ itkExtractImageFilterICD3ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICD3ICD2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICD3ICD2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICD3ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICD3ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICD3ICD2

        Create a new object of the class itkExtractImageFilterICD3ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICD3ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICD3ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICD3ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICD3ICD2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICD3ICD2_swigregister(itkExtractImageFilterICD3ICD2)

def itkExtractImageFilterICD3ICD3_New():
    return itkExtractImageFilterICD3ICD3.New()

class itkExtractImageFilterICD3ICD3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICD3ICD3):
    r"""Proxy of C++ itkExtractImageFilterICD3ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICD3ICD3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICD3ICD3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICD3ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICD3ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICD3ICD3

        Create a new object of the class itkExtractImageFilterICD3ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICD3ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICD3ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICD3ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICD3ICD3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3_swigregister(itkExtractImageFilterICD3ICD3)

def itkExtractImageFilterICD4ICD2_New():
    return itkExtractImageFilterICD4ICD2.New()

class itkExtractImageFilterICD4ICD2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICD4ICD2):
    r"""Proxy of C++ itkExtractImageFilterICD4ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICD4ICD2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICD4ICD2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICD4ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICD4ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICD4ICD2

        Create a new object of the class itkExtractImageFilterICD4ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICD4ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICD4ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICD4ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICD4ICD2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICD4ICD2_swigregister(itkExtractImageFilterICD4ICD2)

def itkExtractImageFilterICD4ICD3_New():
    return itkExtractImageFilterICD4ICD3.New()

class itkExtractImageFilterICD4ICD3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICD4ICD3):
    r"""Proxy of C++ itkExtractImageFilterICD4ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICD4ICD3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICD4ICD3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICD4ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICD4ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICD4ICD3

        Create a new object of the class itkExtractImageFilterICD4ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICD4ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICD4ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICD4ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICD4ICD3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICD4ICD3_swigregister(itkExtractImageFilterICD4ICD3)

def itkExtractImageFilterICD4ICD4_New():
    return itkExtractImageFilterICD4ICD4.New()

class itkExtractImageFilterICD4ICD4(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICD4ICD4):
    r"""Proxy of C++ itkExtractImageFilterICD4ICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICD4ICD4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICD4ICD4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICD4ICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICD4ICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICD4ICD4

        Create a new object of the class itkExtractImageFilterICD4ICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICD4ICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICD4ICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICD4ICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICD4ICD4 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4_swigregister(itkExtractImageFilterICD4ICD4)

def itkExtractImageFilterICF2ICF2_New():
    return itkExtractImageFilterICF2ICF2.New()

class itkExtractImageFilterICF2ICF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    r"""Proxy of C++ itkExtractImageFilterICF2ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICF2ICF2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICF2ICF2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICF2ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICF2ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICF2ICF2

        Create a new object of the class itkExtractImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICF2ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICF2ICF2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2_swigregister(itkExtractImageFilterICF2ICF2)

def itkExtractImageFilterICF3ICF2_New():
    return itkExtractImageFilterICF3ICF2.New()

class itkExtractImageFilterICF3ICF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF2):
    r"""Proxy of C++ itkExtractImageFilterICF3ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICF3ICF2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICF3ICF2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICF3ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICF3ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICF3ICF2

        Create a new object of the class itkExtractImageFilterICF3ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICF3ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICF3ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICF3ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICF3ICF2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICF3ICF2_swigregister(itkExtractImageFilterICF3ICF2)

def itkExtractImageFilterICF3ICF3_New():
    return itkExtractImageFilterICF3ICF3.New()

class itkExtractImageFilterICF3ICF3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    r"""Proxy of C++ itkExtractImageFilterICF3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICF3ICF3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICF3ICF3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICF3ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICF3ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICF3ICF3

        Create a new object of the class itkExtractImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICF3ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICF3ICF3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3_swigregister(itkExtractImageFilterICF3ICF3)

def itkExtractImageFilterICF4ICF2_New():
    return itkExtractImageFilterICF4ICF2.New()

class itkExtractImageFilterICF4ICF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF4ICF2):
    r"""Proxy of C++ itkExtractImageFilterICF4ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICF4ICF2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICF4ICF2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICF4ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICF4ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICF4ICF2

        Create a new object of the class itkExtractImageFilterICF4ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICF4ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICF4ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICF4ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICF4ICF2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICF4ICF2_swigregister(itkExtractImageFilterICF4ICF2)

def itkExtractImageFilterICF4ICF3_New():
    return itkExtractImageFilterICF4ICF3.New()

class itkExtractImageFilterICF4ICF3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF4ICF3):
    r"""Proxy of C++ itkExtractImageFilterICF4ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICF4ICF3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICF4ICF3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICF4ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICF4ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICF4ICF3

        Create a new object of the class itkExtractImageFilterICF4ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICF4ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICF4ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICF4ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICF4ICF3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICF4ICF3_swigregister(itkExtractImageFilterICF4ICF3)

def itkExtractImageFilterICF4ICF4_New():
    return itkExtractImageFilterICF4ICF4.New()

class itkExtractImageFilterICF4ICF4(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF4ICF4):
    r"""Proxy of C++ itkExtractImageFilterICF4ICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICF4ICF4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICF4ICF4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICF4ICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICF4ICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICF4ICF4

        Create a new object of the class itkExtractImageFilterICF4ICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICF4ICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICF4ICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICF4ICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICF4ICF4 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4_swigregister(itkExtractImageFilterICF4ICF4)

def itkExtractImageFilterICVF22ICVF22_New():
    return itkExtractImageFilterICVF22ICVF22.New()

class itkExtractImageFilterICVF22ICVF22(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22):
    r"""Proxy of C++ itkExtractImageFilterICVF22ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICVF22ICVF22_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICVF22ICVF22_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICVF22ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICVF22ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICVF22ICVF22

        Create a new object of the class itkExtractImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICVF22ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICVF22ICVF22 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22_swigregister(itkExtractImageFilterICVF22ICVF22)

def itkExtractImageFilterICVF23ICVF23_New():
    return itkExtractImageFilterICVF23ICVF23.New()

class itkExtractImageFilterICVF23ICVF23(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF23ICVF23):
    r"""Proxy of C++ itkExtractImageFilterICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICVF23ICVF23_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICVF23ICVF23_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICVF23ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICVF23ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICVF23ICVF23

        Create a new object of the class itkExtractImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICVF23ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICVF23ICVF23 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23_swigregister(itkExtractImageFilterICVF23ICVF23)

def itkExtractImageFilterICVF24ICVF24_New():
    return itkExtractImageFilterICVF24ICVF24.New()

class itkExtractImageFilterICVF24ICVF24(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF24ICVF24):
    r"""Proxy of C++ itkExtractImageFilterICVF24ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICVF24ICVF24_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICVF24ICVF24_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICVF24ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICVF24ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICVF24ICVF24

        Create a new object of the class itkExtractImageFilterICVF24ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICVF24ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICVF24ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICVF24ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICVF24ICVF24 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24_swigregister(itkExtractImageFilterICVF24ICVF24)

def itkExtractImageFilterICVF32ICVF32_New():
    return itkExtractImageFilterICVF32ICVF32.New()

class itkExtractImageFilterICVF32ICVF32(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF32ICVF32):
    r"""Proxy of C++ itkExtractImageFilterICVF32ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICVF32ICVF32_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICVF32ICVF32_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICVF32ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICVF32ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICVF32ICVF32

        Create a new object of the class itkExtractImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICVF32ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICVF32ICVF32 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32_swigregister(itkExtractImageFilterICVF32ICVF32)

def itkExtractImageFilterICVF33ICVF33_New():
    return itkExtractImageFilterICVF33ICVF33.New()

class itkExtractImageFilterICVF33ICVF33(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33):
    r"""Proxy of C++ itkExtractImageFilterICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICVF33ICVF33_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICVF33ICVF33_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICVF33ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICVF33ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICVF33ICVF33

        Create a new object of the class itkExtractImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICVF33ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICVF33ICVF33 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33_swigregister(itkExtractImageFilterICVF33ICVF33)

def itkExtractImageFilterICVF34ICVF34_New():
    return itkExtractImageFilterICVF34ICVF34.New()

class itkExtractImageFilterICVF34ICVF34(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF34ICVF34):
    r"""Proxy of C++ itkExtractImageFilterICVF34ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICVF34ICVF34_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICVF34ICVF34_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICVF34ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICVF34ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICVF34ICVF34

        Create a new object of the class itkExtractImageFilterICVF34ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICVF34ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICVF34ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICVF34ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICVF34ICVF34 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34_swigregister(itkExtractImageFilterICVF34ICVF34)

def itkExtractImageFilterICVF42ICVF42_New():
    return itkExtractImageFilterICVF42ICVF42.New()

class itkExtractImageFilterICVF42ICVF42(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF42ICVF42):
    r"""Proxy of C++ itkExtractImageFilterICVF42ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICVF42ICVF42_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICVF42ICVF42_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICVF42ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICVF42ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICVF42ICVF42

        Create a new object of the class itkExtractImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICVF42ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICVF42ICVF42 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42_swigregister(itkExtractImageFilterICVF42ICVF42)

def itkExtractImageFilterICVF43ICVF43_New():
    return itkExtractImageFilterICVF43ICVF43.New()

class itkExtractImageFilterICVF43ICVF43(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF43ICVF43):
    r"""Proxy of C++ itkExtractImageFilterICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICVF43ICVF43_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICVF43ICVF43_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICVF43ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICVF43ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICVF43ICVF43

        Create a new object of the class itkExtractImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICVF43ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICVF43ICVF43 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43_swigregister(itkExtractImageFilterICVF43ICVF43)

def itkExtractImageFilterICVF44ICVF44_New():
    return itkExtractImageFilterICVF44ICVF44.New()

class itkExtractImageFilterICVF44ICVF44(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF44ICVF44):
    r"""Proxy of C++ itkExtractImageFilterICVF44ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterICVF44ICVF44_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterICVF44ICVF44_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterICVF44ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterICVF44ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterICVF44ICVF44

        Create a new object of the class itkExtractImageFilterICVF44ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterICVF44ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterICVF44ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterICVF44ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterICVF44ICVF44 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44_swigregister(itkExtractImageFilterICVF44ICVF44)

def itkExtractImageFilterID2ID2_New():
    return itkExtractImageFilterID2ID2.New()

class itkExtractImageFilterID2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkExtractImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterID2ID2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterID2ID2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID2ID2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID2ID2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID2ID2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID2ID2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID2ID2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID2ID2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID2ID2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID2ID2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterID2ID2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterID2ID2

        Create a new object of the class itkExtractImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterID2ID2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterID2ID2_swigregister(itkExtractImageFilterID2ID2)

def itkExtractImageFilterID3ID2_New():
    return itkExtractImageFilterID3ID2.New()

class itkExtractImageFilterID3ID2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ID2):
    r"""Proxy of C++ itkExtractImageFilterID3ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterID3ID2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterID3ID2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterID3ID2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterID3ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterID3ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterID3ID2

        Create a new object of the class itkExtractImageFilterID3ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterID3ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterID3ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterID3ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterID3ID2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterID3ID2_swigregister(itkExtractImageFilterID3ID2)

def itkExtractImageFilterID3ID3_New():
    return itkExtractImageFilterID3ID3.New()

class itkExtractImageFilterID3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkExtractImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterID3ID3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterID3ID3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterID3ID3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterID3ID3

        Create a new object of the class itkExtractImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterID3ID3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterID3ID3_swigregister(itkExtractImageFilterID3ID3)

def itkExtractImageFilterID4ID2_New():
    return itkExtractImageFilterID4ID2.New()

class itkExtractImageFilterID4ID2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterID4ID2):
    r"""Proxy of C++ itkExtractImageFilterID4ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterID4ID2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterID4ID2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterID4ID2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterID4ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterID4ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterID4ID2

        Create a new object of the class itkExtractImageFilterID4ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterID4ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterID4ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterID4ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterID4ID2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterID4ID2_swigregister(itkExtractImageFilterID4ID2)

def itkExtractImageFilterID4ID3_New():
    return itkExtractImageFilterID4ID3.New()

class itkExtractImageFilterID4ID3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterID4ID3):
    r"""Proxy of C++ itkExtractImageFilterID4ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterID4ID3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterID4ID3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterID4ID3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterID4ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterID4ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterID4ID3

        Create a new object of the class itkExtractImageFilterID4ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterID4ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterID4ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterID4ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterID4ID3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterID4ID3_swigregister(itkExtractImageFilterID4ID3)

def itkExtractImageFilterID4ID4_New():
    return itkExtractImageFilterID4ID4.New()

class itkExtractImageFilterID4ID4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ID4):
    r"""Proxy of C++ itkExtractImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterID4ID4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterID4ID4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID4_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID4_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID4_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID4_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID4_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID4_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID4_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID4_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterID4ID4_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterID4ID4

        Create a new object of the class itkExtractImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterID4ID4 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterID4ID4_swigregister(itkExtractImageFilterID4ID4)

def itkExtractImageFilterIF2IF2_New():
    return itkExtractImageFilterIF2IF2.New()

class itkExtractImageFilterIF2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkExtractImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIF2IF2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIF2IF2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF2IF2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF2IF2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF2IF2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF2IF2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF2IF2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF2IF2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF2IF2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF2IF2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIF2IF2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIF2IF2

        Create a new object of the class itkExtractImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIF2IF2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIF2IF2_swigregister(itkExtractImageFilterIF2IF2)

def itkExtractImageFilterIF3IF2_New():
    return itkExtractImageFilterIF3IF2.New()

class itkExtractImageFilterIF3IF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3IF2):
    r"""Proxy of C++ itkExtractImageFilterIF3IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIF3IF2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIF3IF2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIF3IF2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIF3IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIF3IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIF3IF2

        Create a new object of the class itkExtractImageFilterIF3IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIF3IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIF3IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIF3IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIF3IF2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIF3IF2_swigregister(itkExtractImageFilterIF3IF2)

def itkExtractImageFilterIF3IF3_New():
    return itkExtractImageFilterIF3IF3.New()

class itkExtractImageFilterIF3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkExtractImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIF3IF3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIF3IF3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIF3IF3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIF3IF3

        Create a new object of the class itkExtractImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIF3IF3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIF3IF3_swigregister(itkExtractImageFilterIF3IF3)

def itkExtractImageFilterIF4IF2_New():
    return itkExtractImageFilterIF4IF2.New()

class itkExtractImageFilterIF4IF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF4IF2):
    r"""Proxy of C++ itkExtractImageFilterIF4IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIF4IF2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIF4IF2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIF4IF2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIF4IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIF4IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIF4IF2

        Create a new object of the class itkExtractImageFilterIF4IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIF4IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIF4IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIF4IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIF4IF2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIF4IF2_swigregister(itkExtractImageFilterIF4IF2)

def itkExtractImageFilterIF4IF3_New():
    return itkExtractImageFilterIF4IF3.New()

class itkExtractImageFilterIF4IF3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF4IF3):
    r"""Proxy of C++ itkExtractImageFilterIF4IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIF4IF3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIF4IF3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIF4IF3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIF4IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIF4IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIF4IF3

        Create a new object of the class itkExtractImageFilterIF4IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIF4IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIF4IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIF4IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIF4IF3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIF4IF3_swigregister(itkExtractImageFilterIF4IF3)

def itkExtractImageFilterIF4IF4_New():
    return itkExtractImageFilterIF4IF4.New()

class itkExtractImageFilterIF4IF4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IF4):
    r"""Proxy of C++ itkExtractImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIF4IF4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIF4IF4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF4_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF4_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF4_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF4_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF4_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF4_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF4_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF4_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIF4IF4_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIF4IF4

        Create a new object of the class itkExtractImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIF4IF4 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIF4IF4_swigregister(itkExtractImageFilterIF4IF4)

def itkExtractImageFilterIRGBAUC2IRGBAUC2_New():
    return itkExtractImageFilterIRGBAUC2IRGBAUC2.New()

class itkExtractImageFilterIRGBAUC2IRGBAUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2):
    r"""Proxy of C++ itkExtractImageFilterIRGBAUC2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIRGBAUC2IRGBAUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIRGBAUC2IRGBAUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIRGBAUC2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIRGBAUC2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIRGBAUC2IRGBAUC2

        Create a new object of the class itkExtractImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIRGBAUC2IRGBAUC2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2_swigregister(itkExtractImageFilterIRGBAUC2IRGBAUC2)

def itkExtractImageFilterIRGBAUC3IRGBAUC3_New():
    return itkExtractImageFilterIRGBAUC3IRGBAUC3.New()

class itkExtractImageFilterIRGBAUC3IRGBAUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3):
    r"""Proxy of C++ itkExtractImageFilterIRGBAUC3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIRGBAUC3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIRGBAUC3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkExtractImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIRGBAUC3IRGBAUC3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3_swigregister(itkExtractImageFilterIRGBAUC3IRGBAUC3)

def itkExtractImageFilterIRGBAUC4IRGBAUC4_New():
    return itkExtractImageFilterIRGBAUC4IRGBAUC4.New()

class itkExtractImageFilterIRGBAUC4IRGBAUC4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC4IRGBAUC4):
    r"""Proxy of C++ itkExtractImageFilterIRGBAUC4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIRGBAUC4IRGBAUC4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIRGBAUC4IRGBAUC4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIRGBAUC4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIRGBAUC4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIRGBAUC4IRGBAUC4

        Create a new object of the class itkExtractImageFilterIRGBAUC4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIRGBAUC4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIRGBAUC4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIRGBAUC4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIRGBAUC4IRGBAUC4 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4_swigregister(itkExtractImageFilterIRGBAUC4IRGBAUC4)

def itkExtractImageFilterIRGBUC2IRGBUC2_New():
    return itkExtractImageFilterIRGBUC2IRGBUC2.New()

class itkExtractImageFilterIRGBUC2IRGBUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2):
    r"""Proxy of C++ itkExtractImageFilterIRGBUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIRGBUC2IRGBUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIRGBUC2IRGBUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIRGBUC2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIRGBUC2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkExtractImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIRGBUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIRGBUC2IRGBUC2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2_swigregister(itkExtractImageFilterIRGBUC2IRGBUC2)

def itkExtractImageFilterIRGBUC3IRGBUC2_New():
    return itkExtractImageFilterIRGBUC3IRGBUC2.New()

class itkExtractImageFilterIRGBUC3IRGBUC2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIRGBUC3IRGBUC2):
    r"""Proxy of C++ itkExtractImageFilterIRGBUC3IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIRGBUC3IRGBUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIRGBUC3IRGBUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIRGBUC3IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIRGBUC3IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIRGBUC3IRGBUC2

        Create a new object of the class itkExtractImageFilterIRGBUC3IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIRGBUC3IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIRGBUC3IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIRGBUC3IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIRGBUC3IRGBUC2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC2_swigregister(itkExtractImageFilterIRGBUC3IRGBUC2)

def itkExtractImageFilterIRGBUC3IRGBUC3_New():
    return itkExtractImageFilterIRGBUC3IRGBUC3.New()

class itkExtractImageFilterIRGBUC3IRGBUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3):
    r"""Proxy of C++ itkExtractImageFilterIRGBUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIRGBUC3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIRGBUC3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkExtractImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIRGBUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIRGBUC3IRGBUC3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3_swigregister(itkExtractImageFilterIRGBUC3IRGBUC3)

def itkExtractImageFilterIRGBUC4IRGBUC2_New():
    return itkExtractImageFilterIRGBUC4IRGBUC2.New()

class itkExtractImageFilterIRGBUC4IRGBUC2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIRGBUC4IRGBUC2):
    r"""Proxy of C++ itkExtractImageFilterIRGBUC4IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIRGBUC4IRGBUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIRGBUC4IRGBUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIRGBUC4IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIRGBUC4IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIRGBUC4IRGBUC2

        Create a new object of the class itkExtractImageFilterIRGBUC4IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIRGBUC4IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIRGBUC4IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIRGBUC4IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIRGBUC4IRGBUC2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC2_swigregister(itkExtractImageFilterIRGBUC4IRGBUC2)

def itkExtractImageFilterIRGBUC4IRGBUC3_New():
    return itkExtractImageFilterIRGBUC4IRGBUC3.New()

class itkExtractImageFilterIRGBUC4IRGBUC3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIRGBUC4IRGBUC3):
    r"""Proxy of C++ itkExtractImageFilterIRGBUC4IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIRGBUC4IRGBUC3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIRGBUC4IRGBUC3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIRGBUC4IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIRGBUC4IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIRGBUC4IRGBUC3

        Create a new object of the class itkExtractImageFilterIRGBUC4IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIRGBUC4IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIRGBUC4IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIRGBUC4IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIRGBUC4IRGBUC3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC3_swigregister(itkExtractImageFilterIRGBUC4IRGBUC3)

def itkExtractImageFilterIRGBUC4IRGBUC4_New():
    return itkExtractImageFilterIRGBUC4IRGBUC4.New()

class itkExtractImageFilterIRGBUC4IRGBUC4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC4IRGBUC4):
    r"""Proxy of C++ itkExtractImageFilterIRGBUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIRGBUC4IRGBUC4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIRGBUC4IRGBUC4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIRGBUC4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIRGBUC4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIRGBUC4IRGBUC4

        Create a new object of the class itkExtractImageFilterIRGBUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIRGBUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIRGBUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIRGBUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIRGBUC4IRGBUC4 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4_swigregister(itkExtractImageFilterIRGBUC4IRGBUC4)

def itkExtractImageFilterISS2ISS2_New():
    return itkExtractImageFilterISS2ISS2.New()

class itkExtractImageFilterISS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkExtractImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterISS2ISS2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterISS2ISS2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterISS2ISS2

        Create a new object of the class itkExtractImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterISS2ISS2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2_swigregister(itkExtractImageFilterISS2ISS2)

def itkExtractImageFilterISS3ISS2_New():
    return itkExtractImageFilterISS3ISS2.New()

class itkExtractImageFilterISS3ISS2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterISS3ISS2):
    r"""Proxy of C++ itkExtractImageFilterISS3ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterISS3ISS2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterISS3ISS2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterISS3ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterISS3ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterISS3ISS2

        Create a new object of the class itkExtractImageFilterISS3ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterISS3ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterISS3ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterISS3ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterISS3ISS2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterISS3ISS2_swigregister(itkExtractImageFilterISS3ISS2)

def itkExtractImageFilterISS3ISS3_New():
    return itkExtractImageFilterISS3ISS3.New()

class itkExtractImageFilterISS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkExtractImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterISS3ISS3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterISS3ISS3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterISS3ISS3

        Create a new object of the class itkExtractImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterISS3ISS3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3_swigregister(itkExtractImageFilterISS3ISS3)

def itkExtractImageFilterISS4ISS2_New():
    return itkExtractImageFilterISS4ISS2.New()

class itkExtractImageFilterISS4ISS2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterISS4ISS2):
    r"""Proxy of C++ itkExtractImageFilterISS4ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterISS4ISS2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterISS4ISS2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterISS4ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterISS4ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterISS4ISS2

        Create a new object of the class itkExtractImageFilterISS4ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterISS4ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterISS4ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterISS4ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterISS4ISS2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterISS4ISS2_swigregister(itkExtractImageFilterISS4ISS2)

def itkExtractImageFilterISS4ISS3_New():
    return itkExtractImageFilterISS4ISS3.New()

class itkExtractImageFilterISS4ISS3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterISS4ISS3):
    r"""Proxy of C++ itkExtractImageFilterISS4ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterISS4ISS3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterISS4ISS3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterISS4ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterISS4ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterISS4ISS3

        Create a new object of the class itkExtractImageFilterISS4ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterISS4ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterISS4ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterISS4ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterISS4ISS3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterISS4ISS3_swigregister(itkExtractImageFilterISS4ISS3)

def itkExtractImageFilterISS4ISS4_New():
    return itkExtractImageFilterISS4ISS4.New()

class itkExtractImageFilterISS4ISS4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4ISS4):
    r"""Proxy of C++ itkExtractImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterISS4ISS4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterISS4ISS4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterISS4ISS4

        Create a new object of the class itkExtractImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterISS4ISS4 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4_swigregister(itkExtractImageFilterISS4ISS4)

def itkExtractImageFilterIUC2IUC2_New():
    return itkExtractImageFilterIUC2IUC2.New()

class itkExtractImageFilterIUC2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkExtractImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUC2IUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUC2IUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUC2IUC2

        Create a new object of the class itkExtractImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUC2IUC2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2_swigregister(itkExtractImageFilterIUC2IUC2)

def itkExtractImageFilterIUC3IUC2_New():
    return itkExtractImageFilterIUC3IUC2.New()

class itkExtractImageFilterIUC3IUC2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC3IUC2):
    r"""Proxy of C++ itkExtractImageFilterIUC3IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUC3IUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUC3IUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUC3IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUC3IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUC3IUC2

        Create a new object of the class itkExtractImageFilterIUC3IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUC3IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUC3IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUC3IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUC3IUC2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC2_swigregister(itkExtractImageFilterIUC3IUC2)

def itkExtractImageFilterIUC3IUC3_New():
    return itkExtractImageFilterIUC3IUC3.New()

class itkExtractImageFilterIUC3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkExtractImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUC3IUC3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUC3IUC3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUC3IUC3

        Create a new object of the class itkExtractImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUC3IUC3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3_swigregister(itkExtractImageFilterIUC3IUC3)

def itkExtractImageFilterIUC4IUC2_New():
    return itkExtractImageFilterIUC4IUC2.New()

class itkExtractImageFilterIUC4IUC2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC4IUC2):
    r"""Proxy of C++ itkExtractImageFilterIUC4IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUC4IUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUC4IUC2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUC4IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUC4IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUC4IUC2

        Create a new object of the class itkExtractImageFilterIUC4IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUC4IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUC4IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUC4IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUC4IUC2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC2_swigregister(itkExtractImageFilterIUC4IUC2)

def itkExtractImageFilterIUC4IUC3_New():
    return itkExtractImageFilterIUC4IUC3.New()

class itkExtractImageFilterIUC4IUC3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUC4IUC3):
    r"""Proxy of C++ itkExtractImageFilterIUC4IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUC4IUC3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUC4IUC3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUC4IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUC4IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUC4IUC3

        Create a new object of the class itkExtractImageFilterIUC4IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUC4IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUC4IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUC4IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUC4IUC3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC3_swigregister(itkExtractImageFilterIUC4IUC3)

def itkExtractImageFilterIUC4IUC4_New():
    return itkExtractImageFilterIUC4IUC4.New()

class itkExtractImageFilterIUC4IUC4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IUC4):
    r"""Proxy of C++ itkExtractImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUC4IUC4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUC4IUC4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUC4IUC4

        Create a new object of the class itkExtractImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUC4IUC4 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4_swigregister(itkExtractImageFilterIUC4IUC4)

def itkExtractImageFilterIUL2IUL2_New():
    return itkExtractImageFilterIUL2IUL2.New()

class itkExtractImageFilterIUL2IUL2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IUL2):
    r"""Proxy of C++ itkExtractImageFilterIUL2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUL2IUL2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL2IUL2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUL2IUL2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL2IUL2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL2IUL2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL2IUL2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL2IUL2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL2IUL2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL2IUL2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL2IUL2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL2IUL2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUL2IUL2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUL2IUL2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUL2IUL2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL2IUL2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUL2IUL2

        Create a new object of the class itkExtractImageFilterIUL2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUL2IUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUL2IUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUL2IUL2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUL2IUL2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUL2IUL2_swigregister(itkExtractImageFilterIUL2IUL2)

def itkExtractImageFilterIUL3IUL3_New():
    return itkExtractImageFilterIUL3IUL3.New()

class itkExtractImageFilterIUL3IUL3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IUL3):
    r"""Proxy of C++ itkExtractImageFilterIUL3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUL3IUL3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL3IUL3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUL3IUL3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL3IUL3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL3IUL3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL3IUL3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL3IUL3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL3IUL3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL3IUL3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL3IUL3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL3IUL3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUL3IUL3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUL3IUL3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUL3IUL3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL3IUL3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUL3IUL3

        Create a new object of the class itkExtractImageFilterIUL3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUL3IUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUL3IUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUL3IUL3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUL3IUL3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUL3IUL3_swigregister(itkExtractImageFilterIUL3IUL3)

def itkExtractImageFilterIUL4IUL4_New():
    return itkExtractImageFilterIUL4IUL4.New()

class itkExtractImageFilterIUL4IUL4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL4IUL4):
    r"""Proxy of C++ itkExtractImageFilterIUL4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUL4IUL4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL4IUL4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUL4IUL4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL4IUL4_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL4IUL4_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL4IUL4_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL4IUL4_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL4IUL4_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL4IUL4_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL4IUL4_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL4IUL4_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUL4IUL4_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUL4IUL4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUL4IUL4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUL4IUL4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUL4IUL4

        Create a new object of the class itkExtractImageFilterIUL4IUL4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUL4IUL4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUL4IUL4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUL4IUL4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUL4IUL4 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUL4IUL4_swigregister(itkExtractImageFilterIUL4IUL4)

def itkExtractImageFilterIUS2IUS2_New():
    return itkExtractImageFilterIUS2IUS2.New()

class itkExtractImageFilterIUS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkExtractImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUS2IUS2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUS2IUS2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUS2IUS2

        Create a new object of the class itkExtractImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUS2IUS2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2_swigregister(itkExtractImageFilterIUS2IUS2)

def itkExtractImageFilterIUS3IUS2_New():
    return itkExtractImageFilterIUS3IUS2.New()

class itkExtractImageFilterIUS3IUS2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS3IUS2):
    r"""Proxy of C++ itkExtractImageFilterIUS3IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUS3IUS2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUS3IUS2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUS3IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUS3IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUS3IUS2

        Create a new object of the class itkExtractImageFilterIUS3IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUS3IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUS3IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUS3IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUS3IUS2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS2_swigregister(itkExtractImageFilterIUS3IUS2)

def itkExtractImageFilterIUS3IUS3_New():
    return itkExtractImageFilterIUS3IUS3.New()

class itkExtractImageFilterIUS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkExtractImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUS3IUS3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUS3IUS3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUS3IUS3

        Create a new object of the class itkExtractImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUS3IUS3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3_swigregister(itkExtractImageFilterIUS3IUS3)

def itkExtractImageFilterIUS4IUS2_New():
    return itkExtractImageFilterIUS4IUS2.New()

class itkExtractImageFilterIUS4IUS2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS4IUS2):
    r"""Proxy of C++ itkExtractImageFilterIUS4IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUS4IUS2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUS4IUS2_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS2_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS2_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS2_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS2_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS2_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS2_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS2_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS2_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS2_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUS4IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUS4IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUS4IUS2

        Create a new object of the class itkExtractImageFilterIUS4IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUS4IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUS4IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUS4IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUS4IUS2 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS2_swigregister(itkExtractImageFilterIUS4IUS2)

def itkExtractImageFilterIUS4IUS3_New():
    return itkExtractImageFilterIUS4IUS3.New()

class itkExtractImageFilterIUS4IUS3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIUS4IUS3):
    r"""Proxy of C++ itkExtractImageFilterIUS4IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUS4IUS3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUS4IUS3_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS3_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS3_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS3_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS3_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS3_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS3_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS3_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS3_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS3_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUS4IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUS4IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUS4IUS3

        Create a new object of the class itkExtractImageFilterIUS4IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUS4IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUS4IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUS4IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUS4IUS3 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS3_swigregister(itkExtractImageFilterIUS4IUS3)

def itkExtractImageFilterIUS4IUS4_New():
    return itkExtractImageFilterIUS4IUS4.New()

class itkExtractImageFilterIUS4IUS4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUS4):
    r"""Proxy of C++ itkExtractImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIUS4IUS4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIUS4IUS4_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIUS4IUS4

        Create a new object of the class itkExtractImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIUS4IUS4 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4_swigregister(itkExtractImageFilterIUS4IUS4)

def itkExtractImageFilterIVF22IVF22_New():
    return itkExtractImageFilterIVF22IVF22.New()

class itkExtractImageFilterIVF22IVF22(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22):
    r"""Proxy of C++ itkExtractImageFilterIVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIVF22IVF22_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIVF22IVF22_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIVF22IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIVF22IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIVF22IVF22

        Create a new object of the class itkExtractImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIVF22IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIVF22IVF22 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22_swigregister(itkExtractImageFilterIVF22IVF22)

def itkExtractImageFilterIVF23IVF23_New():
    return itkExtractImageFilterIVF23IVF23.New()

class itkExtractImageFilterIVF23IVF23(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF23IVF23):
    r"""Proxy of C++ itkExtractImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIVF23IVF23_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIVF23IVF23_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIVF23IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIVF23IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIVF23IVF23

        Create a new object of the class itkExtractImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIVF23IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIVF23IVF23 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23_swigregister(itkExtractImageFilterIVF23IVF23)

def itkExtractImageFilterIVF24IVF24_New():
    return itkExtractImageFilterIVF24IVF24.New()

class itkExtractImageFilterIVF24IVF24(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF24IVF24):
    r"""Proxy of C++ itkExtractImageFilterIVF24IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIVF24IVF24_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIVF24IVF24_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIVF24IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIVF24IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIVF24IVF24

        Create a new object of the class itkExtractImageFilterIVF24IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIVF24IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIVF24IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIVF24IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIVF24IVF24 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24_swigregister(itkExtractImageFilterIVF24IVF24)

def itkExtractImageFilterIVF32IVF32_New():
    return itkExtractImageFilterIVF32IVF32.New()

class itkExtractImageFilterIVF32IVF32(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF32IVF32):
    r"""Proxy of C++ itkExtractImageFilterIVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIVF32IVF32_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIVF32IVF32_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIVF32IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIVF32IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIVF32IVF32

        Create a new object of the class itkExtractImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIVF32IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIVF32IVF32 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32_swigregister(itkExtractImageFilterIVF32IVF32)

def itkExtractImageFilterIVF33IVF33_New():
    return itkExtractImageFilterIVF33IVF33.New()

class itkExtractImageFilterIVF33IVF33(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33):
    r"""Proxy of C++ itkExtractImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIVF33IVF33_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIVF33IVF33_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIVF33IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIVF33IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIVF33IVF33

        Create a new object of the class itkExtractImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIVF33IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIVF33IVF33 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33_swigregister(itkExtractImageFilterIVF33IVF33)

def itkExtractImageFilterIVF34IVF34_New():
    return itkExtractImageFilterIVF34IVF34.New()

class itkExtractImageFilterIVF34IVF34(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF34IVF34):
    r"""Proxy of C++ itkExtractImageFilterIVF34IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIVF34IVF34_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIVF34IVF34_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIVF34IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIVF34IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIVF34IVF34

        Create a new object of the class itkExtractImageFilterIVF34IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIVF34IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIVF34IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIVF34IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIVF34IVF34 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34_swigregister(itkExtractImageFilterIVF34IVF34)

def itkExtractImageFilterIVF42IVF42_New():
    return itkExtractImageFilterIVF42IVF42.New()

class itkExtractImageFilterIVF42IVF42(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF42IVF42):
    r"""Proxy of C++ itkExtractImageFilterIVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIVF42IVF42_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIVF42IVF42_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion2

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion2"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIVF42IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIVF42IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIVF42IVF42

        Create a new object of the class itkExtractImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIVF42IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIVF42IVF42 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42_swigregister(itkExtractImageFilterIVF42IVF42)

def itkExtractImageFilterIVF43IVF43_New():
    return itkExtractImageFilterIVF43IVF43.New()

class itkExtractImageFilterIVF43IVF43(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF43IVF43):
    r"""Proxy of C++ itkExtractImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIVF43IVF43_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIVF43IVF43_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion3

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion3"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIVF43IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIVF43IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIVF43IVF43

        Create a new object of the class itkExtractImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIVF43IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIVF43IVF43 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43_swigregister(itkExtractImageFilterIVF43IVF43)

def itkExtractImageFilterIVF44IVF44_New():
    return itkExtractImageFilterIVF44IVF44.New()

class itkExtractImageFilterIVF44IVF44(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF44IVF44):
    r"""Proxy of C++ itkExtractImageFilterIVF44IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExtractImageFilterIVF44IVF44_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExtractImageFilterIVF44IVF44_Pointer"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44_Clone(self)

    def SetDirectionCollapseToStrategy(self, choosenStrategy):
        r"""
        SetDirectionCollapseToStrategy(self, choosenStrategy)

        Parameters
        ----------
        choosenStrategy: enum itkExtractImageFilterEnums::DirectionCollapseStrategy const

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44_SetDirectionCollapseToStrategy(self, choosenStrategy)

    def GetDirectionCollapseToStrategy(self):
        r"""GetDirectionCollapseToStrategy(self) -> itkExtractImageFilterEnums::DirectionCollapseStrategy"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44_GetDirectionCollapseToStrategy(self)

    def SetDirectionCollapseToGuess(self):
        r"""SetDirectionCollapseToGuess(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44_SetDirectionCollapseToGuess(self)

    def SetDirectionCollapseToIdentity(self):
        r"""SetDirectionCollapseToIdentity(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44_SetDirectionCollapseToIdentity(self)

    def SetDirectionCollapseToSubmatrix(self):
        r"""SetDirectionCollapseToSubmatrix(self)"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44_SetDirectionCollapseToSubmatrix(self)

    def SetExtractionRegion(self, extractRegion):
        r"""
        SetExtractionRegion(self, extractRegion)

        Parameters
        ----------
        extractRegion: itkImageRegion4

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44_SetExtractionRegion(self, extractRegion)

    def GetExtractionRegion(self):
        r"""GetExtractionRegion(self) -> itkImageRegion4"""
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44_GetExtractionRegion(self)
    InputCovertibleToOutputCheck = _itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44_InputCovertibleToOutputCheck
    
    __swig_destroy__ = _itkExtractImageFilterPython.delete_itkExtractImageFilterIVF44IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExtractImageFilterIVF44IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExtractImageFilterIVF44IVF44

        Create a new object of the class itkExtractImageFilterIVF44IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExtractImageFilterIVF44IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExtractImageFilterIVF44IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExtractImageFilterIVF44IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExtractImageFilterIVF44IVF44 in _itkExtractImageFilterPython:
_itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44_swigregister(itkExtractImageFilterIVF44IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def extract_image_filter(*args: itkt.ImageLike,  direction_collapse_to_strategy=..., extraction_region: itkt.ImageRegion=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ExtractImageFilter"""
    import itk

    kwarg_typehints = { 'direction_collapse_to_strategy':direction_collapse_to_strategy,'extraction_region':extraction_region }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ExtractImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def extract_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKCommon.ExtractImageFilter
    extract_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    extract_image_filter.__doc__ = filter_object.__doc__



