# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKStatisticsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkScalarImageToTextureFeaturesFilterPython
else:
    import _itkScalarImageToTextureFeaturesFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkCovariantVectorPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkOffsetPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVectorContainerPython
import itk.itkArrayPython
import itk.itkContinuousIndexPython

def itkScalarImageToTextureFeaturesFilterID2_New():
    return itkScalarImageToTextureFeaturesFilterID2.New()

class itkScalarImageToTextureFeaturesFilterID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterID2_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterID2_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageD2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageD2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: double

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterID2

        Create a new object of the class itkScalarImageToTextureFeaturesFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterID2 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_swigregister(itkScalarImageToTextureFeaturesFilterID2)

def itkScalarImageToTextureFeaturesFilterID3_New():
    return itkScalarImageToTextureFeaturesFilterID3.New()

class itkScalarImageToTextureFeaturesFilterID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterID3_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterID3_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageD3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageD3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: double

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterID3

        Create a new object of the class itkScalarImageToTextureFeaturesFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterID3 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_swigregister(itkScalarImageToTextureFeaturesFilterID3)

def itkScalarImageToTextureFeaturesFilterID4_New():
    return itkScalarImageToTextureFeaturesFilterID4.New()

class itkScalarImageToTextureFeaturesFilterID4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterID4_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterID4_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageD4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageD4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: double

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterID4

        Create a new object of the class itkScalarImageToTextureFeaturesFilterID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterID4 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_swigregister(itkScalarImageToTextureFeaturesFilterID4)

def itkScalarImageToTextureFeaturesFilterIF2_New():
    return itkScalarImageToTextureFeaturesFilterIF2.New()

class itkScalarImageToTextureFeaturesFilterIF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterIF2_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterIF2_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageF2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: float
        max: float

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageF2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: float

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIF2

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIF2 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_swigregister(itkScalarImageToTextureFeaturesFilterIF2)

def itkScalarImageToTextureFeaturesFilterIF3_New():
    return itkScalarImageToTextureFeaturesFilterIF3.New()

class itkScalarImageToTextureFeaturesFilterIF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterIF3_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterIF3_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageF3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: float
        max: float

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageF3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: float

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIF3

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIF3 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_swigregister(itkScalarImageToTextureFeaturesFilterIF3)

def itkScalarImageToTextureFeaturesFilterIF4_New():
    return itkScalarImageToTextureFeaturesFilterIF4.New()

class itkScalarImageToTextureFeaturesFilterIF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterIF4_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterIF4_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageF4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: float
        max: float

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageF4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: float

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIF4

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIF4 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_swigregister(itkScalarImageToTextureFeaturesFilterIF4)

def itkScalarImageToTextureFeaturesFilterISS2_New():
    return itkScalarImageToTextureFeaturesFilterISS2.New()

class itkScalarImageToTextureFeaturesFilterISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterISS2_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterISS2_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: short
        max: short

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: short

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterISS2

        Create a new object of the class itkScalarImageToTextureFeaturesFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterISS2 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_swigregister(itkScalarImageToTextureFeaturesFilterISS2)

def itkScalarImageToTextureFeaturesFilterISS3_New():
    return itkScalarImageToTextureFeaturesFilterISS3.New()

class itkScalarImageToTextureFeaturesFilterISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterISS3_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterISS3_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: short
        max: short

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: short

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterISS3

        Create a new object of the class itkScalarImageToTextureFeaturesFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterISS3 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_swigregister(itkScalarImageToTextureFeaturesFilterISS3)

def itkScalarImageToTextureFeaturesFilterISS4_New():
    return itkScalarImageToTextureFeaturesFilterISS4.New()

class itkScalarImageToTextureFeaturesFilterISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterISS4_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterISS4_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: short
        max: short

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: short

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterISS4

        Create a new object of the class itkScalarImageToTextureFeaturesFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterISS4 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_swigregister(itkScalarImageToTextureFeaturesFilterISS4)

def itkScalarImageToTextureFeaturesFilterIUC2_New():
    return itkScalarImageToTextureFeaturesFilterIUC2.New()

class itkScalarImageToTextureFeaturesFilterIUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterIUC2_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterIUC2_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: unsigned char
        max: unsigned char

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: unsigned char

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIUC2

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIUC2 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_swigregister(itkScalarImageToTextureFeaturesFilterIUC2)

def itkScalarImageToTextureFeaturesFilterIUC3_New():
    return itkScalarImageToTextureFeaturesFilterIUC3.New()

class itkScalarImageToTextureFeaturesFilterIUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterIUC3_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterIUC3_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: unsigned char
        max: unsigned char

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: unsigned char

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIUC3

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIUC3 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_swigregister(itkScalarImageToTextureFeaturesFilterIUC3)

def itkScalarImageToTextureFeaturesFilterIUC4_New():
    return itkScalarImageToTextureFeaturesFilterIUC4.New()

class itkScalarImageToTextureFeaturesFilterIUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterIUC4_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterIUC4_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: unsigned char
        max: unsigned char

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: unsigned char

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIUC4

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIUC4 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_swigregister(itkScalarImageToTextureFeaturesFilterIUC4)

def itkScalarImageToTextureFeaturesFilterIUS2_New():
    return itkScalarImageToTextureFeaturesFilterIUS2.New()

class itkScalarImageToTextureFeaturesFilterIUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterIUS2_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterIUS2_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: unsigned short
        max: unsigned short

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS2 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: unsigned short

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIUS2

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIUS2 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_swigregister(itkScalarImageToTextureFeaturesFilterIUS2)

def itkScalarImageToTextureFeaturesFilterIUS3_New():
    return itkScalarImageToTextureFeaturesFilterIUS3.New()

class itkScalarImageToTextureFeaturesFilterIUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterIUS3_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterIUS3_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: unsigned short
        max: unsigned short

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS3 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: unsigned short

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIUS3

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIUS3 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_swigregister(itkScalarImageToTextureFeaturesFilterIUS3)

def itkScalarImageToTextureFeaturesFilterIUS4_New():
    return itkScalarImageToTextureFeaturesFilterIUS4.New()

class itkScalarImageToTextureFeaturesFilterIUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToTextureFeaturesFilterIUS4_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToTextureFeaturesFilterIUS4_Pointer"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_Clone(self)

    def GetFeatureMeansOutput(self):
        r"""GetFeatureMeansOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetFeatureMeansOutput(self)

    def GetFeatureStandardDeviationsOutput(self):
        r"""GetFeatureStandardDeviationsOutput(self) -> itkDataObjectDecoratorVCUCD"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetFeatureStandardDeviationsOutput(self)

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetInput(self)

    def GetFeatureMeans(self):
        r"""GetFeatureMeans(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetFeatureMeans(self)

    def GetFeatureStandardDeviations(self):
        r"""GetFeatureStandardDeviations(self) -> itkVectorContainerUCD_Pointer const &"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetFeatureStandardDeviations(self)

    def SetRequestedFeatures(self, _arg):
        r"""
        SetRequestedFeatures(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCUC const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetRequestedFeatures(self, _arg)

    def GetRequestedFeatures(self):
        r"""GetRequestedFeatures(self) -> itkVectorContainerUCUC"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetRequestedFeatures(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetOffsets(self, _arg)

    def GetOffsets(self):
        r"""GetOffsets(self) -> itkVectorContainerUCO4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetOffsets(self)

    def SetNumberOfBinsPerAxis(self, arg0):
        r"""
        SetNumberOfBinsPerAxis(self, arg0)

        Parameters
        ----------
        arg0: unsigned int

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetNumberOfBinsPerAxis(self, arg0)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: unsigned short
        max: unsigned short

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetPixelValueMinMax(self, min, max)

    def SetMaskImage(self, arg0):
        r"""
        SetMaskImage(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS4 const *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetMaskImage(self, arg0)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetMaskImage(self)

    def SetInsidePixelValue(self, insidePixelValue):
        r"""
        SetInsidePixelValue(self, insidePixelValue)

        Parameters
        ----------
        insidePixelValue: unsigned short

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetInsidePixelValue(self, insidePixelValue)

    def GetFastCalculations(self):
        r"""GetFastCalculations(self) -> bool"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetFastCalculations(self)

    def SetFastCalculations(self, _arg):
        r"""
        SetFastCalculations(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetFastCalculations(self, _arg)

    def FastCalculationsOn(self):
        r"""FastCalculationsOn(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_FastCalculationsOn(self)

    def FastCalculationsOff(self):
        r"""FastCalculationsOff(self)"""
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_FastCalculationsOff(self)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToTextureFeaturesFilterIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIUS4

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIUS4 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_swigregister(itkScalarImageToTextureFeaturesFilterIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def scalar_image_to_texture_features_filter(*args,  requested_features=..., offsets=..., number_of_bins_per_axis: int=..., pixel_value_min_max: int=..., mask_image: itkt.Image=..., inside_pixel_value: int=..., fast_calculations: bool=...,**kwargs):
    """Functional interface for ScalarImageToTextureFeaturesFilter"""
    import itk

    kwarg_typehints = { 'requested_features':requested_features,'offsets':offsets,'number_of_bins_per_axis':number_of_bins_per_axis,'pixel_value_min_max':pixel_value_min_max,'mask_image':mask_image,'inside_pixel_value':inside_pixel_value,'fast_calculations':fast_calculations }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ScalarImageToTextureFeaturesFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def scalar_image_to_texture_features_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKStatistics.ScalarImageToTextureFeaturesFilter
    scalar_image_to_texture_features_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    scalar_image_to_texture_features_filter.__doc__ = filter_object.__doc__



