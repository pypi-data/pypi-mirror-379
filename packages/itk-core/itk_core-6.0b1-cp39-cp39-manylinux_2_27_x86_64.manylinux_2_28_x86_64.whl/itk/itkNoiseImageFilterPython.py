# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFilterBasePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNoiseImageFilterPython
else:
    import _itkNoiseImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkNoiseImageFilterID2ID2_New():
    return itkNoiseImageFilterID2ID2.New()

class itkNoiseImageFilterID2ID2(itk.itkBoxImageFilterPython.itkBoxImageFilterID2ID2):
    r"""Proxy of C++ itkNoiseImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterID2ID2_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterID2ID2_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterID2ID2_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterID2ID2

        Create a new object of the class itkNoiseImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterID2ID2 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterID2ID2_swigregister(itkNoiseImageFilterID2ID2)

def itkNoiseImageFilterID3ID3_New():
    return itkNoiseImageFilterID3ID3.New()

class itkNoiseImageFilterID3ID3(itk.itkBoxImageFilterPython.itkBoxImageFilterID3ID3):
    r"""Proxy of C++ itkNoiseImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterID3ID3_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterID3ID3_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterID3ID3_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterID3ID3

        Create a new object of the class itkNoiseImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterID3ID3 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterID3ID3_swigregister(itkNoiseImageFilterID3ID3)

def itkNoiseImageFilterID4ID4_New():
    return itkNoiseImageFilterID4ID4.New()

class itkNoiseImageFilterID4ID4(itk.itkBoxImageFilterPython.itkBoxImageFilterID4ID4):
    r"""Proxy of C++ itkNoiseImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterID4ID4_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterID4ID4_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterID4ID4_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterID4ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterID4ID4

        Create a new object of the class itkNoiseImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterID4ID4 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterID4ID4_swigregister(itkNoiseImageFilterID4ID4)

def itkNoiseImageFilterIF2IF2_New():
    return itkNoiseImageFilterIF2IF2.New()

class itkNoiseImageFilterIF2IF2(itk.itkBoxImageFilterPython.itkBoxImageFilterIF2IF2):
    r"""Proxy of C++ itkNoiseImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterIF2IF2_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterIF2IF2_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIF2IF2_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterIF2IF2

        Create a new object of the class itkNoiseImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterIF2IF2 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterIF2IF2_swigregister(itkNoiseImageFilterIF2IF2)

def itkNoiseImageFilterIF3IF3_New():
    return itkNoiseImageFilterIF3IF3.New()

class itkNoiseImageFilterIF3IF3(itk.itkBoxImageFilterPython.itkBoxImageFilterIF3IF3):
    r"""Proxy of C++ itkNoiseImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterIF3IF3_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterIF3IF3_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIF3IF3_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterIF3IF3

        Create a new object of the class itkNoiseImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterIF3IF3 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterIF3IF3_swigregister(itkNoiseImageFilterIF3IF3)

def itkNoiseImageFilterIF4IF4_New():
    return itkNoiseImageFilterIF4IF4.New()

class itkNoiseImageFilterIF4IF4(itk.itkBoxImageFilterPython.itkBoxImageFilterIF4IF4):
    r"""Proxy of C++ itkNoiseImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterIF4IF4_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterIF4IF4_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIF4IF4_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterIF4IF4

        Create a new object of the class itkNoiseImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterIF4IF4 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterIF4IF4_swigregister(itkNoiseImageFilterIF4IF4)

def itkNoiseImageFilterISS2ISS2_New():
    return itkNoiseImageFilterISS2ISS2.New()

class itkNoiseImageFilterISS2ISS2(itk.itkBoxImageFilterPython.itkBoxImageFilterISS2ISS2):
    r"""Proxy of C++ itkNoiseImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterISS2ISS2_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterISS2ISS2_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterISS2ISS2_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterISS2ISS2

        Create a new object of the class itkNoiseImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterISS2ISS2 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterISS2ISS2_swigregister(itkNoiseImageFilterISS2ISS2)

def itkNoiseImageFilterISS3ISS3_New():
    return itkNoiseImageFilterISS3ISS3.New()

class itkNoiseImageFilterISS3ISS3(itk.itkBoxImageFilterPython.itkBoxImageFilterISS3ISS3):
    r"""Proxy of C++ itkNoiseImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterISS3ISS3_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterISS3ISS3_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterISS3ISS3_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterISS3ISS3

        Create a new object of the class itkNoiseImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterISS3ISS3 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterISS3ISS3_swigregister(itkNoiseImageFilterISS3ISS3)

def itkNoiseImageFilterISS4ISS4_New():
    return itkNoiseImageFilterISS4ISS4.New()

class itkNoiseImageFilterISS4ISS4(itk.itkBoxImageFilterPython.itkBoxImageFilterISS4ISS4):
    r"""Proxy of C++ itkNoiseImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterISS4ISS4_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterISS4ISS4_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterISS4ISS4_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterISS4ISS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterISS4ISS4

        Create a new object of the class itkNoiseImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterISS4ISS4 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterISS4ISS4_swigregister(itkNoiseImageFilterISS4ISS4)

def itkNoiseImageFilterIUC2IUC2_New():
    return itkNoiseImageFilterIUC2IUC2.New()

class itkNoiseImageFilterIUC2IUC2(itk.itkBoxImageFilterPython.itkBoxImageFilterIUC2IUC2):
    r"""Proxy of C++ itkNoiseImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterIUC2IUC2_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterIUC2IUC2_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUC2IUC2_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterIUC2IUC2

        Create a new object of the class itkNoiseImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterIUC2IUC2 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterIUC2IUC2_swigregister(itkNoiseImageFilterIUC2IUC2)

def itkNoiseImageFilterIUC3IUC3_New():
    return itkNoiseImageFilterIUC3IUC3.New()

class itkNoiseImageFilterIUC3IUC3(itk.itkBoxImageFilterPython.itkBoxImageFilterIUC3IUC3):
    r"""Proxy of C++ itkNoiseImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterIUC3IUC3_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterIUC3IUC3_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUC3IUC3_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterIUC3IUC3

        Create a new object of the class itkNoiseImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterIUC3IUC3 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterIUC3IUC3_swigregister(itkNoiseImageFilterIUC3IUC3)

def itkNoiseImageFilterIUC4IUC4_New():
    return itkNoiseImageFilterIUC4IUC4.New()

class itkNoiseImageFilterIUC4IUC4(itk.itkBoxImageFilterPython.itkBoxImageFilterIUC4IUC4):
    r"""Proxy of C++ itkNoiseImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterIUC4IUC4_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterIUC4IUC4_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUC4IUC4_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterIUC4IUC4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterIUC4IUC4

        Create a new object of the class itkNoiseImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterIUC4IUC4 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterIUC4IUC4_swigregister(itkNoiseImageFilterIUC4IUC4)

def itkNoiseImageFilterIUS2IUS2_New():
    return itkNoiseImageFilterIUS2IUS2.New()

class itkNoiseImageFilterIUS2IUS2(itk.itkBoxImageFilterPython.itkBoxImageFilterIUS2IUS2):
    r"""Proxy of C++ itkNoiseImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterIUS2IUS2_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterIUS2IUS2_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUS2IUS2_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterIUS2IUS2

        Create a new object of the class itkNoiseImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterIUS2IUS2 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterIUS2IUS2_swigregister(itkNoiseImageFilterIUS2IUS2)

def itkNoiseImageFilterIUS3IUS3_New():
    return itkNoiseImageFilterIUS3IUS3.New()

class itkNoiseImageFilterIUS3IUS3(itk.itkBoxImageFilterPython.itkBoxImageFilterIUS3IUS3):
    r"""Proxy of C++ itkNoiseImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterIUS3IUS3_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterIUS3IUS3_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUS3IUS3_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterIUS3IUS3

        Create a new object of the class itkNoiseImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterIUS3IUS3 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterIUS3IUS3_swigregister(itkNoiseImageFilterIUS3IUS3)

def itkNoiseImageFilterIUS4IUS4_New():
    return itkNoiseImageFilterIUS4IUS4.New()

class itkNoiseImageFilterIUS4IUS4(itk.itkBoxImageFilterPython.itkBoxImageFilterIUS4IUS4):
    r"""Proxy of C++ itkNoiseImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkNoiseImageFilterIUS4IUS4_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkNoiseImageFilterIUS4IUS4_Pointer"""
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUS4IUS4_Clone(self)
    InputHasNumericTraitsCheck = _itkNoiseImageFilterPython.itkNoiseImageFilterIUS4IUS4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNoiseImageFilterPython.delete_itkNoiseImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNoiseImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNoiseImageFilterPython.itkNoiseImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkNoiseImageFilterIUS4IUS4

        Create a new object of the class itkNoiseImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNoiseImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNoiseImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNoiseImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNoiseImageFilterIUS4IUS4 in _itkNoiseImageFilterPython:
_itkNoiseImageFilterPython.itkNoiseImageFilterIUS4IUS4_swigregister(itkNoiseImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def noise_image_filter(*args: itkt.ImageLike,  radius: Union[int, Sequence[int]]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for NoiseImageFilter"""
    import itk

    kwarg_typehints = { 'radius':radius }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.NoiseImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def noise_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFilterBase.NoiseImageFilter
    noise_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    noise_image_filter.__doc__ = filter_object.__doc__



