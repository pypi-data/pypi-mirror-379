# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFunctionPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBSplineResampleImageFunctionPython
else:
    import _itkBSplineResampleImageFunctionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkCovariantVectorPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkOffsetPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkBSplineInterpolateImageFunctionPython
import itk.itkContinuousIndexPython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkFunctionBasePython
import itk.itkArrayPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkBSplineResampleImageFunctionID2D_New():
    return itkBSplineResampleImageFunctionID2D.New()

class itkBSplineResampleImageFunctionID2D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionID2DD):
    r"""Proxy of C++ itkBSplineResampleImageFunctionID2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionID2D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID2D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionID2D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID2D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionID2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionID2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID2D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionID2D

        Create a new object of the class itkBSplineResampleImageFunctionID2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionID2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionID2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionID2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionID2D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID2D_swigregister(itkBSplineResampleImageFunctionID2D)

def itkBSplineResampleImageFunctionID3D_New():
    return itkBSplineResampleImageFunctionID3D.New()

class itkBSplineResampleImageFunctionID3D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionID3DD):
    r"""Proxy of C++ itkBSplineResampleImageFunctionID3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionID3D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID3D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionID3D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID3D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionID3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionID3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID3D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionID3D

        Create a new object of the class itkBSplineResampleImageFunctionID3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionID3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionID3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionID3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionID3D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID3D_swigregister(itkBSplineResampleImageFunctionID3D)

def itkBSplineResampleImageFunctionID4D_New():
    return itkBSplineResampleImageFunctionID4D.New()

class itkBSplineResampleImageFunctionID4D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionID4DD):
    r"""Proxy of C++ itkBSplineResampleImageFunctionID4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionID4D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionID4D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID4D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionID4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionID4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionID4D

        Create a new object of the class itkBSplineResampleImageFunctionID4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionID4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionID4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionID4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionID4D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionID4D_swigregister(itkBSplineResampleImageFunctionID4D)

def itkBSplineResampleImageFunctionIF2D_New():
    return itkBSplineResampleImageFunctionIF2D.New()

class itkBSplineResampleImageFunctionIF2D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIF2DF):
    r"""Proxy of C++ itkBSplineResampleImageFunctionIF2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionIF2D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF2D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionIF2D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF2D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIF2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionIF2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF2D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIF2D

        Create a new object of the class itkBSplineResampleImageFunctionIF2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIF2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIF2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIF2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIF2D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF2D_swigregister(itkBSplineResampleImageFunctionIF2D)

def itkBSplineResampleImageFunctionIF3D_New():
    return itkBSplineResampleImageFunctionIF3D.New()

class itkBSplineResampleImageFunctionIF3D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIF3DF):
    r"""Proxy of C++ itkBSplineResampleImageFunctionIF3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionIF3D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF3D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionIF3D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF3D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIF3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionIF3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF3D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIF3D

        Create a new object of the class itkBSplineResampleImageFunctionIF3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIF3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIF3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIF3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIF3D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF3D_swigregister(itkBSplineResampleImageFunctionIF3D)

def itkBSplineResampleImageFunctionIF4D_New():
    return itkBSplineResampleImageFunctionIF4D.New()

class itkBSplineResampleImageFunctionIF4D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIF4DF):
    r"""Proxy of C++ itkBSplineResampleImageFunctionIF4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionIF4D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionIF4D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF4D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIF4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionIF4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIF4D

        Create a new object of the class itkBSplineResampleImageFunctionIF4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIF4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIF4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIF4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIF4D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIF4D_swigregister(itkBSplineResampleImageFunctionIF4D)

def itkBSplineResampleImageFunctionISS2D_New():
    return itkBSplineResampleImageFunctionISS2D.New()

class itkBSplineResampleImageFunctionISS2D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionISS2DSS):
    r"""Proxy of C++ itkBSplineResampleImageFunctionISS2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionISS2D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS2D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionISS2D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS2D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionISS2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionISS2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS2D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionISS2D

        Create a new object of the class itkBSplineResampleImageFunctionISS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionISS2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionISS2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionISS2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionISS2D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS2D_swigregister(itkBSplineResampleImageFunctionISS2D)

def itkBSplineResampleImageFunctionISS3D_New():
    return itkBSplineResampleImageFunctionISS3D.New()

class itkBSplineResampleImageFunctionISS3D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionISS3DSS):
    r"""Proxy of C++ itkBSplineResampleImageFunctionISS3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionISS3D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS3D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionISS3D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS3D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionISS3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionISS3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS3D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionISS3D

        Create a new object of the class itkBSplineResampleImageFunctionISS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionISS3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionISS3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionISS3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionISS3D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS3D_swigregister(itkBSplineResampleImageFunctionISS3D)

def itkBSplineResampleImageFunctionISS4D_New():
    return itkBSplineResampleImageFunctionISS4D.New()

class itkBSplineResampleImageFunctionISS4D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionISS4DSS):
    r"""Proxy of C++ itkBSplineResampleImageFunctionISS4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionISS4D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionISS4D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS4D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionISS4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionISS4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionISS4D

        Create a new object of the class itkBSplineResampleImageFunctionISS4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionISS4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionISS4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionISS4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionISS4D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionISS4D_swigregister(itkBSplineResampleImageFunctionISS4D)

def itkBSplineResampleImageFunctionIUC2D_New():
    return itkBSplineResampleImageFunctionIUC2D.New()

class itkBSplineResampleImageFunctionIUC2D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIUC2DUC):
    r"""Proxy of C++ itkBSplineResampleImageFunctionIUC2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionIUC2D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC2D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionIUC2D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC2D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIUC2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionIUC2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC2D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIUC2D

        Create a new object of the class itkBSplineResampleImageFunctionIUC2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIUC2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIUC2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIUC2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIUC2D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC2D_swigregister(itkBSplineResampleImageFunctionIUC2D)

def itkBSplineResampleImageFunctionIUC3D_New():
    return itkBSplineResampleImageFunctionIUC3D.New()

class itkBSplineResampleImageFunctionIUC3D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIUC3DUC):
    r"""Proxy of C++ itkBSplineResampleImageFunctionIUC3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionIUC3D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC3D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionIUC3D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC3D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIUC3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionIUC3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC3D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIUC3D

        Create a new object of the class itkBSplineResampleImageFunctionIUC3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIUC3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIUC3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIUC3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIUC3D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC3D_swigregister(itkBSplineResampleImageFunctionIUC3D)

def itkBSplineResampleImageFunctionIUC4D_New():
    return itkBSplineResampleImageFunctionIUC4D.New()

class itkBSplineResampleImageFunctionIUC4D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIUC4DUC):
    r"""Proxy of C++ itkBSplineResampleImageFunctionIUC4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionIUC4D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionIUC4D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC4D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIUC4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionIUC4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIUC4D

        Create a new object of the class itkBSplineResampleImageFunctionIUC4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIUC4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIUC4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIUC4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIUC4D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUC4D_swigregister(itkBSplineResampleImageFunctionIUC4D)

def itkBSplineResampleImageFunctionIUS2D_New():
    return itkBSplineResampleImageFunctionIUS2D.New()

class itkBSplineResampleImageFunctionIUS2D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIUS2DUS):
    r"""Proxy of C++ itkBSplineResampleImageFunctionIUS2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionIUS2D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS2D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionIUS2D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS2D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIUS2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionIUS2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS2D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIUS2D

        Create a new object of the class itkBSplineResampleImageFunctionIUS2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIUS2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIUS2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIUS2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIUS2D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS2D_swigregister(itkBSplineResampleImageFunctionIUS2D)

def itkBSplineResampleImageFunctionIUS3D_New():
    return itkBSplineResampleImageFunctionIUS3D.New()

class itkBSplineResampleImageFunctionIUS3D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIUS3DUS):
    r"""Proxy of C++ itkBSplineResampleImageFunctionIUS3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionIUS3D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS3D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionIUS3D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS3D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIUS3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionIUS3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS3D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIUS3D

        Create a new object of the class itkBSplineResampleImageFunctionIUS3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIUS3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIUS3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIUS3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIUS3D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS3D_swigregister(itkBSplineResampleImageFunctionIUS3D)

def itkBSplineResampleImageFunctionIUS4D_New():
    return itkBSplineResampleImageFunctionIUS4D.New()

class itkBSplineResampleImageFunctionIUS4D(itk.itkBSplineInterpolateImageFunctionPython.itkBSplineInterpolateImageFunctionIUS4DUS):
    r"""Proxy of C++ itkBSplineResampleImageFunctionIUS4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineResampleImageFunctionIUS4D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineResampleImageFunctionIUS4D_Pointer"""
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS4D_Clone(self)
    __swig_destroy__ = _itkBSplineResampleImageFunctionPython.delete_itkBSplineResampleImageFunctionIUS4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineResampleImageFunctionIUS4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineResampleImageFunctionIUS4D

        Create a new object of the class itkBSplineResampleImageFunctionIUS4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineResampleImageFunctionIUS4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineResampleImageFunctionIUS4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineResampleImageFunctionIUS4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineResampleImageFunctionIUS4D in _itkBSplineResampleImageFunctionPython:
_itkBSplineResampleImageFunctionPython.itkBSplineResampleImageFunctionIUS4D_swigregister(itkBSplineResampleImageFunctionIUS4D)

