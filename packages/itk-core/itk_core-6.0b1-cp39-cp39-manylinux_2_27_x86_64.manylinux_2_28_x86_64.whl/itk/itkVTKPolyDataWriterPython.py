# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMeshPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVTKPolyDataWriterPython
else:
    import _itkVTKPolyDataWriterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkMeshBasePython
import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkMapContainerPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkPointSetPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkBoundingBoxPython

def itkVTKPolyDataWriterMD2_Superclass_New():
    return itkVTKPolyDataWriterMD2_Superclass.New()

class itkVTKPolyDataWriterMD2_Superclass(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkVTKPolyDataWriterMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKPolyDataWriterMF2_Superclass_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass___New_orig__()

    def DebugOn(self):
        r"""DebugOn(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_DebugOn(self)

    def DebugOff(self):
        r"""DebugOff(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_DebugOff(self)

    def GetDebug(self):
        r"""GetDebug(self) -> bool"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetDebug(self)

    def SetDebug(self, debugFlag):
        r"""
        SetDebug(self, debugFlag)

        Parameters
        ----------
        debugFlag: bool

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_SetDebug(self, debugFlag)

    def GetMTime(self):
        r"""GetMTime(self) -> unsigned long"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetMTime(self)

    def GetTimeStamp(self):
        r"""GetTimeStamp(self) -> itkTimeStamp"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetTimeStamp(self)

    def Modified(self):
        r"""Modified(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_Modified(self)

    @staticmethod
    def SetGlobalWarningDisplay(val):
        r"""
        SetGlobalWarningDisplay(val)

        Parameters
        ----------
        val: bool

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_SetGlobalWarningDisplay(val)

    @staticmethod
    def GetGlobalWarningDisplay():
        r"""GetGlobalWarningDisplay() -> bool"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetGlobalWarningDisplay()

    @staticmethod
    def GlobalWarningDisplayOn():
        r"""GlobalWarningDisplayOn()"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GlobalWarningDisplayOn()

    @staticmethod
    def GlobalWarningDisplayOff():
        r"""GlobalWarningDisplayOff()"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GlobalWarningDisplayOff()

    def AddObserver(self, event, cmd):
        r"""
        AddObserver(self, event, cmd) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        cmd: itkCommand *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_AddObserver(self, event, cmd)

    def GetCommand(self, tag):
        r"""
        GetCommand(self, tag) -> itkCommand

        Parameters
        ----------
        tag: unsigned long

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetCommand(self, tag)

    def InvokeEvent(self, *args):
        r"""
        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_InvokeEvent(self, *args)

    def RemoveObserver(self, tag):
        r"""
        RemoveObserver(self, tag)

        Parameters
        ----------
        tag: unsigned long

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_RemoveObserver(self, tag)

    def RemoveAllObservers(self):
        r"""RemoveAllObservers(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_RemoveAllObservers(self)

    def HasObserver(self, event):
        r"""
        HasObserver(self, event) -> bool

        Parameters
        ----------
        event: itkEventObject const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_HasObserver(self, event)

    def GetMetaDataDictionary(self, *args):
        r"""
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetMetaDataDictionary(self, *args)

    def SetMetaDataDictionary(self, rhs):
        r"""
        SetMetaDataDictionary(self, rhs)

        Parameters
        ----------
        rhs: itkMetaDataDictionary const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_SetMetaDataDictionary(self, rhs)

    def SetObjectName(self, _arg):
        r"""
        SetObjectName(self, _arg)

        Parameters
        ----------
        _arg: std::string

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_SetObjectName(self, _arg)

    def GetObjectName(self):
        r"""GetObjectName(self) -> std::string const &"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_GetObjectName(self)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMD2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKPolyDataWriterMD2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMD2_Superclass

        Create a new object of the class itkVTKPolyDataWriterMD2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMD2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMD2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMD2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMD2_Superclass in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Superclass_swigregister(itkVTKPolyDataWriterMD2_Superclass)

def itkVTKPolyDataWriterMD3_Superclass_New():
    return itkVTKPolyDataWriterMD3_Superclass.New()

class itkVTKPolyDataWriterMD3_Superclass(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkVTKPolyDataWriterMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKPolyDataWriterMF2_Superclass_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass___New_orig__()

    def DebugOn(self):
        r"""DebugOn(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_DebugOn(self)

    def DebugOff(self):
        r"""DebugOff(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_DebugOff(self)

    def GetDebug(self):
        r"""GetDebug(self) -> bool"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetDebug(self)

    def SetDebug(self, debugFlag):
        r"""
        SetDebug(self, debugFlag)

        Parameters
        ----------
        debugFlag: bool

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_SetDebug(self, debugFlag)

    def GetMTime(self):
        r"""GetMTime(self) -> unsigned long"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetMTime(self)

    def GetTimeStamp(self):
        r"""GetTimeStamp(self) -> itkTimeStamp"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetTimeStamp(self)

    def Modified(self):
        r"""Modified(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_Modified(self)

    @staticmethod
    def SetGlobalWarningDisplay(val):
        r"""
        SetGlobalWarningDisplay(val)

        Parameters
        ----------
        val: bool

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_SetGlobalWarningDisplay(val)

    @staticmethod
    def GetGlobalWarningDisplay():
        r"""GetGlobalWarningDisplay() -> bool"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetGlobalWarningDisplay()

    @staticmethod
    def GlobalWarningDisplayOn():
        r"""GlobalWarningDisplayOn()"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GlobalWarningDisplayOn()

    @staticmethod
    def GlobalWarningDisplayOff():
        r"""GlobalWarningDisplayOff()"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GlobalWarningDisplayOff()

    def AddObserver(self, event, cmd):
        r"""
        AddObserver(self, event, cmd) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        cmd: itkCommand *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_AddObserver(self, event, cmd)

    def GetCommand(self, tag):
        r"""
        GetCommand(self, tag) -> itkCommand

        Parameters
        ----------
        tag: unsigned long

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetCommand(self, tag)

    def InvokeEvent(self, *args):
        r"""
        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_InvokeEvent(self, *args)

    def RemoveObserver(self, tag):
        r"""
        RemoveObserver(self, tag)

        Parameters
        ----------
        tag: unsigned long

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_RemoveObserver(self, tag)

    def RemoveAllObservers(self):
        r"""RemoveAllObservers(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_RemoveAllObservers(self)

    def HasObserver(self, event):
        r"""
        HasObserver(self, event) -> bool

        Parameters
        ----------
        event: itkEventObject const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_HasObserver(self, event)

    def GetMetaDataDictionary(self, *args):
        r"""
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetMetaDataDictionary(self, *args)

    def SetMetaDataDictionary(self, rhs):
        r"""
        SetMetaDataDictionary(self, rhs)

        Parameters
        ----------
        rhs: itkMetaDataDictionary const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_SetMetaDataDictionary(self, rhs)

    def SetObjectName(self, _arg):
        r"""
        SetObjectName(self, _arg)

        Parameters
        ----------
        _arg: std::string

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_SetObjectName(self, _arg)

    def GetObjectName(self):
        r"""GetObjectName(self) -> std::string const &"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_GetObjectName(self)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMD3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKPolyDataWriterMD3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMD3_Superclass

        Create a new object of the class itkVTKPolyDataWriterMD3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMD3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMD3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMD3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMD3_Superclass in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Superclass_swigregister(itkVTKPolyDataWriterMD3_Superclass)

def itkVTKPolyDataWriterMD4_Superclass_New():
    return itkVTKPolyDataWriterMD4_Superclass.New()

class itkVTKPolyDataWriterMD4_Superclass(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkVTKPolyDataWriterMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKPolyDataWriterMF2_Superclass_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass___New_orig__()

    def DebugOn(self):
        r"""DebugOn(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_DebugOn(self)

    def DebugOff(self):
        r"""DebugOff(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_DebugOff(self)

    def GetDebug(self):
        r"""GetDebug(self) -> bool"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_GetDebug(self)

    def SetDebug(self, debugFlag):
        r"""
        SetDebug(self, debugFlag)

        Parameters
        ----------
        debugFlag: bool

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_SetDebug(self, debugFlag)

    def GetMTime(self):
        r"""GetMTime(self) -> unsigned long"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_GetMTime(self)

    def GetTimeStamp(self):
        r"""GetTimeStamp(self) -> itkTimeStamp"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_GetTimeStamp(self)

    def Modified(self):
        r"""Modified(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_Modified(self)

    @staticmethod
    def SetGlobalWarningDisplay(val):
        r"""
        SetGlobalWarningDisplay(val)

        Parameters
        ----------
        val: bool

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_SetGlobalWarningDisplay(val)

    @staticmethod
    def GetGlobalWarningDisplay():
        r"""GetGlobalWarningDisplay() -> bool"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_GetGlobalWarningDisplay()

    @staticmethod
    def GlobalWarningDisplayOn():
        r"""GlobalWarningDisplayOn()"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_GlobalWarningDisplayOn()

    @staticmethod
    def GlobalWarningDisplayOff():
        r"""GlobalWarningDisplayOff()"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_GlobalWarningDisplayOff()

    def AddObserver(self, event, cmd):
        r"""
        AddObserver(self, event, cmd) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        cmd: itkCommand *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_AddObserver(self, event, cmd)

    def GetCommand(self, tag):
        r"""
        GetCommand(self, tag) -> itkCommand

        Parameters
        ----------
        tag: unsigned long

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_GetCommand(self, tag)

    def InvokeEvent(self, *args):
        r"""
        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_InvokeEvent(self, *args)

    def RemoveObserver(self, tag):
        r"""
        RemoveObserver(self, tag)

        Parameters
        ----------
        tag: unsigned long

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_RemoveObserver(self, tag)

    def RemoveAllObservers(self):
        r"""RemoveAllObservers(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_RemoveAllObservers(self)

    def HasObserver(self, event):
        r"""
        HasObserver(self, event) -> bool

        Parameters
        ----------
        event: itkEventObject const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_HasObserver(self, event)

    def GetMetaDataDictionary(self, *args):
        r"""
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_GetMetaDataDictionary(self, *args)

    def SetMetaDataDictionary(self, rhs):
        r"""
        SetMetaDataDictionary(self, rhs)

        Parameters
        ----------
        rhs: itkMetaDataDictionary const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_SetMetaDataDictionary(self, rhs)

    def SetObjectName(self, _arg):
        r"""
        SetObjectName(self, _arg)

        Parameters
        ----------
        _arg: std::string

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_SetObjectName(self, _arg)

    def GetObjectName(self):
        r"""GetObjectName(self) -> std::string const &"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_GetObjectName(self)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMD4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKPolyDataWriterMD4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMD4_Superclass

        Create a new object of the class itkVTKPolyDataWriterMD4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMD4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMD4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMD4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMD4_Superclass in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Superclass_swigregister(itkVTKPolyDataWriterMD4_Superclass)

def itkVTKPolyDataWriterMF2_Superclass_New():
    return itkVTKPolyDataWriterMF2_Superclass.New()

class itkVTKPolyDataWriterMF2_Superclass(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkVTKPolyDataWriterMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKPolyDataWriterMF2_Superclass_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass___New_orig__()

    def DebugOn(self):
        r"""DebugOn(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_DebugOn(self)

    def DebugOff(self):
        r"""DebugOff(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_DebugOff(self)

    def GetDebug(self):
        r"""GetDebug(self) -> bool"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetDebug(self)

    def SetDebug(self, debugFlag):
        r"""
        SetDebug(self, debugFlag)

        Parameters
        ----------
        debugFlag: bool

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_SetDebug(self, debugFlag)

    def GetMTime(self):
        r"""GetMTime(self) -> unsigned long"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetMTime(self)

    def GetTimeStamp(self):
        r"""GetTimeStamp(self) -> itkTimeStamp"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetTimeStamp(self)

    def Modified(self):
        r"""Modified(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_Modified(self)

    @staticmethod
    def SetGlobalWarningDisplay(val):
        r"""
        SetGlobalWarningDisplay(val)

        Parameters
        ----------
        val: bool

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_SetGlobalWarningDisplay(val)

    @staticmethod
    def GetGlobalWarningDisplay():
        r"""GetGlobalWarningDisplay() -> bool"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetGlobalWarningDisplay()

    @staticmethod
    def GlobalWarningDisplayOn():
        r"""GlobalWarningDisplayOn()"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GlobalWarningDisplayOn()

    @staticmethod
    def GlobalWarningDisplayOff():
        r"""GlobalWarningDisplayOff()"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GlobalWarningDisplayOff()

    def AddObserver(self, event, cmd):
        r"""
        AddObserver(self, event, cmd) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        cmd: itkCommand *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_AddObserver(self, event, cmd)

    def GetCommand(self, tag):
        r"""
        GetCommand(self, tag) -> itkCommand

        Parameters
        ----------
        tag: unsigned long

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetCommand(self, tag)

    def InvokeEvent(self, *args):
        r"""
        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_InvokeEvent(self, *args)

    def RemoveObserver(self, tag):
        r"""
        RemoveObserver(self, tag)

        Parameters
        ----------
        tag: unsigned long

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_RemoveObserver(self, tag)

    def RemoveAllObservers(self):
        r"""RemoveAllObservers(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_RemoveAllObservers(self)

    def HasObserver(self, event):
        r"""
        HasObserver(self, event) -> bool

        Parameters
        ----------
        event: itkEventObject const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_HasObserver(self, event)

    def GetMetaDataDictionary(self, *args):
        r"""
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetMetaDataDictionary(self, *args)

    def SetMetaDataDictionary(self, rhs):
        r"""
        SetMetaDataDictionary(self, rhs)

        Parameters
        ----------
        rhs: itkMetaDataDictionary const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_SetMetaDataDictionary(self, rhs)

    def SetObjectName(self, _arg):
        r"""
        SetObjectName(self, _arg)

        Parameters
        ----------
        _arg: std::string

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_SetObjectName(self, _arg)

    def GetObjectName(self):
        r"""GetObjectName(self) -> std::string const &"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_GetObjectName(self)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKPolyDataWriterMF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMF2_Superclass

        Create a new object of the class itkVTKPolyDataWriterMF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMF2_Superclass in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Superclass_swigregister(itkVTKPolyDataWriterMF2_Superclass)

def itkVTKPolyDataWriterMF3_New():
    return itkVTKPolyDataWriterMF3.New()

class itkVTKPolyDataWriterMF3(itkVTKPolyDataWriterMF2_Superclass):
    r"""Proxy of C++ itkVTKPolyDataWriterMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKPolyDataWriterMF3_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKPolyDataWriterMF3_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Clone(self)

    def Update(self):
        r"""Update(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Update(self)

    def Write(self):
        r"""Write(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Write(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshF3 const *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_SetInput(self, input)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_GetFileName(self)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKPolyDataWriterMF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMF3

        Create a new object of the class itkVTKPolyDataWriterMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMF3 in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_swigregister(itkVTKPolyDataWriterMF3)

def itkVTKPolyDataWriterMF3_Superclass_New():
    return itkVTKPolyDataWriterMF3_Superclass.New()

class itkVTKPolyDataWriterMF3_Superclass(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkVTKPolyDataWriterMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKPolyDataWriterMF2_Superclass_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass___New_orig__()

    def DebugOn(self):
        r"""DebugOn(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_DebugOn(self)

    def DebugOff(self):
        r"""DebugOff(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_DebugOff(self)

    def GetDebug(self):
        r"""GetDebug(self) -> bool"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetDebug(self)

    def SetDebug(self, debugFlag):
        r"""
        SetDebug(self, debugFlag)

        Parameters
        ----------
        debugFlag: bool

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_SetDebug(self, debugFlag)

    def GetMTime(self):
        r"""GetMTime(self) -> unsigned long"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetMTime(self)

    def GetTimeStamp(self):
        r"""GetTimeStamp(self) -> itkTimeStamp"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetTimeStamp(self)

    def Modified(self):
        r"""Modified(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_Modified(self)

    @staticmethod
    def SetGlobalWarningDisplay(val):
        r"""
        SetGlobalWarningDisplay(val)

        Parameters
        ----------
        val: bool

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_SetGlobalWarningDisplay(val)

    @staticmethod
    def GetGlobalWarningDisplay():
        r"""GetGlobalWarningDisplay() -> bool"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetGlobalWarningDisplay()

    @staticmethod
    def GlobalWarningDisplayOn():
        r"""GlobalWarningDisplayOn()"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GlobalWarningDisplayOn()

    @staticmethod
    def GlobalWarningDisplayOff():
        r"""GlobalWarningDisplayOff()"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GlobalWarningDisplayOff()

    def AddObserver(self, event, cmd):
        r"""
        AddObserver(self, event, cmd) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        cmd: itkCommand *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_AddObserver(self, event, cmd)

    def GetCommand(self, tag):
        r"""
        GetCommand(self, tag) -> itkCommand

        Parameters
        ----------
        tag: unsigned long

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetCommand(self, tag)

    def InvokeEvent(self, *args):
        r"""
        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_InvokeEvent(self, *args)

    def RemoveObserver(self, tag):
        r"""
        RemoveObserver(self, tag)

        Parameters
        ----------
        tag: unsigned long

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_RemoveObserver(self, tag)

    def RemoveAllObservers(self):
        r"""RemoveAllObservers(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_RemoveAllObservers(self)

    def HasObserver(self, event):
        r"""
        HasObserver(self, event) -> bool

        Parameters
        ----------
        event: itkEventObject const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_HasObserver(self, event)

    def GetMetaDataDictionary(self, *args):
        r"""
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetMetaDataDictionary(self, *args)

    def SetMetaDataDictionary(self, rhs):
        r"""
        SetMetaDataDictionary(self, rhs)

        Parameters
        ----------
        rhs: itkMetaDataDictionary const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_SetMetaDataDictionary(self, rhs)

    def SetObjectName(self, _arg):
        r"""
        SetObjectName(self, _arg)

        Parameters
        ----------
        _arg: std::string

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_SetObjectName(self, _arg)

    def GetObjectName(self):
        r"""GetObjectName(self) -> std::string const &"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_GetObjectName(self)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKPolyDataWriterMF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMF3_Superclass

        Create a new object of the class itkVTKPolyDataWriterMF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMF3_Superclass in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF3_Superclass_swigregister(itkVTKPolyDataWriterMF3_Superclass)

def itkVTKPolyDataWriterMF4_New():
    return itkVTKPolyDataWriterMF4.New()

class itkVTKPolyDataWriterMF4(itkVTKPolyDataWriterMF2_Superclass):
    r"""Proxy of C++ itkVTKPolyDataWriterMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKPolyDataWriterMF4_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKPolyDataWriterMF4_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Clone(self)

    def Update(self):
        r"""Update(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Update(self)

    def Write(self):
        r"""Write(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Write(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshF4 const *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_SetInput(self, input)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_GetFileName(self)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKPolyDataWriterMF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMF4

        Create a new object of the class itkVTKPolyDataWriterMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMF4 in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_swigregister(itkVTKPolyDataWriterMF4)

def itkVTKPolyDataWriterMF4_Superclass_New():
    return itkVTKPolyDataWriterMF4_Superclass.New()

class itkVTKPolyDataWriterMF4_Superclass(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkVTKPolyDataWriterMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKPolyDataWriterMF2_Superclass_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass___New_orig__()

    def DebugOn(self):
        r"""DebugOn(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_DebugOn(self)

    def DebugOff(self):
        r"""DebugOff(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_DebugOff(self)

    def GetDebug(self):
        r"""GetDebug(self) -> bool"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_GetDebug(self)

    def SetDebug(self, debugFlag):
        r"""
        SetDebug(self, debugFlag)

        Parameters
        ----------
        debugFlag: bool

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_SetDebug(self, debugFlag)

    def GetMTime(self):
        r"""GetMTime(self) -> unsigned long"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_GetMTime(self)

    def GetTimeStamp(self):
        r"""GetTimeStamp(self) -> itkTimeStamp"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_GetTimeStamp(self)

    def Modified(self):
        r"""Modified(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_Modified(self)

    @staticmethod
    def SetGlobalWarningDisplay(val):
        r"""
        SetGlobalWarningDisplay(val)

        Parameters
        ----------
        val: bool

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_SetGlobalWarningDisplay(val)

    @staticmethod
    def GetGlobalWarningDisplay():
        r"""GetGlobalWarningDisplay() -> bool"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_GetGlobalWarningDisplay()

    @staticmethod
    def GlobalWarningDisplayOn():
        r"""GlobalWarningDisplayOn()"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_GlobalWarningDisplayOn()

    @staticmethod
    def GlobalWarningDisplayOff():
        r"""GlobalWarningDisplayOff()"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_GlobalWarningDisplayOff()

    def AddObserver(self, event, cmd):
        r"""
        AddObserver(self, event, cmd) -> unsigned long

        Parameters
        ----------
        event: itkEventObject const &
        cmd: itkCommand *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_AddObserver(self, event, cmd)

    def GetCommand(self, tag):
        r"""
        GetCommand(self, tag) -> itkCommand

        Parameters
        ----------
        tag: unsigned long

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_GetCommand(self, tag)

    def InvokeEvent(self, *args):
        r"""
        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        InvokeEvent(self, arg0)

        Parameters
        ----------
        arg0: itkEventObject const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_InvokeEvent(self, *args)

    def RemoveObserver(self, tag):
        r"""
        RemoveObserver(self, tag)

        Parameters
        ----------
        tag: unsigned long

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_RemoveObserver(self, tag)

    def RemoveAllObservers(self):
        r"""RemoveAllObservers(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_RemoveAllObservers(self)

    def HasObserver(self, event):
        r"""
        HasObserver(self, event) -> bool

        Parameters
        ----------
        event: itkEventObject const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_HasObserver(self, event)

    def GetMetaDataDictionary(self, *args):
        r"""
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        GetMetaDataDictionary(self) -> itkMetaDataDictionary
        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_GetMetaDataDictionary(self, *args)

    def SetMetaDataDictionary(self, rhs):
        r"""
        SetMetaDataDictionary(self, rhs)

        Parameters
        ----------
        rhs: itkMetaDataDictionary const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_SetMetaDataDictionary(self, rhs)

    def SetObjectName(self, _arg):
        r"""
        SetObjectName(self, _arg)

        Parameters
        ----------
        _arg: std::string

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_SetObjectName(self, _arg)

    def GetObjectName(self):
        r"""GetObjectName(self) -> std::string const &"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_GetObjectName(self)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKPolyDataWriterMF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMF4_Superclass

        Create a new object of the class itkVTKPolyDataWriterMF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMF4_Superclass in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF4_Superclass_swigregister(itkVTKPolyDataWriterMF4_Superclass)

def itkVTKPolyDataWriterMD2_New():
    return itkVTKPolyDataWriterMD2.New()

class itkVTKPolyDataWriterMD2(itkVTKPolyDataWriterMF2_Superclass):
    r"""Proxy of C++ itkVTKPolyDataWriterMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKPolyDataWriterMD2_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKPolyDataWriterMD2_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Clone(self)

    def Update(self):
        r"""Update(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Update(self)

    def Write(self):
        r"""Write(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_Write(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshD2 const *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_SetInput(self, input)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_GetFileName(self)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKPolyDataWriterMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMD2

        Create a new object of the class itkVTKPolyDataWriterMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMD2 in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD2_swigregister(itkVTKPolyDataWriterMD2)

def itkVTKPolyDataWriterMD3_New():
    return itkVTKPolyDataWriterMD3.New()

class itkVTKPolyDataWriterMD3(itkVTKPolyDataWriterMF2_Superclass):
    r"""Proxy of C++ itkVTKPolyDataWriterMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKPolyDataWriterMD3_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKPolyDataWriterMD3_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Clone(self)

    def Update(self):
        r"""Update(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Update(self)

    def Write(self):
        r"""Write(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_Write(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshD3 const *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_SetInput(self, input)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_GetFileName(self)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKPolyDataWriterMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMD3

        Create a new object of the class itkVTKPolyDataWriterMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMD3 in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD3_swigregister(itkVTKPolyDataWriterMD3)

def itkVTKPolyDataWriterMD4_New():
    return itkVTKPolyDataWriterMD4.New()

class itkVTKPolyDataWriterMD4(itkVTKPolyDataWriterMF2_Superclass):
    r"""Proxy of C++ itkVTKPolyDataWriterMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKPolyDataWriterMD4_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKPolyDataWriterMD4_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Clone(self)

    def Update(self):
        r"""Update(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Update(self)

    def Write(self):
        r"""Write(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_Write(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshD4 const *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_SetInput(self, input)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_GetFileName(self)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKPolyDataWriterMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMD4

        Create a new object of the class itkVTKPolyDataWriterMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMD4 in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMD4_swigregister(itkVTKPolyDataWriterMD4)

def itkVTKPolyDataWriterMF2_New():
    return itkVTKPolyDataWriterMF2.New()

class itkVTKPolyDataWriterMF2(itkVTKPolyDataWriterMF2_Superclass):
    r"""Proxy of C++ itkVTKPolyDataWriterMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKPolyDataWriterMF2_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKPolyDataWriterMF2_Pointer"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Clone(self)

    def Update(self):
        r"""Update(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Update(self)

    def Write(self):
        r"""Write(self)"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_Write(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshF2 const *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_SetInput(self, input)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_GetFileName(self)
    __swig_destroy__ = _itkVTKPolyDataWriterPython.delete_itkVTKPolyDataWriterMF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKPolyDataWriterMF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKPolyDataWriterMF2

        Create a new object of the class itkVTKPolyDataWriterMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKPolyDataWriterMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKPolyDataWriterMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKPolyDataWriterMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKPolyDataWriterMF2 in _itkVTKPolyDataWriterPython:
_itkVTKPolyDataWriterPython.itkVTKPolyDataWriterMF2_swigregister(itkVTKPolyDataWriterMF2)

