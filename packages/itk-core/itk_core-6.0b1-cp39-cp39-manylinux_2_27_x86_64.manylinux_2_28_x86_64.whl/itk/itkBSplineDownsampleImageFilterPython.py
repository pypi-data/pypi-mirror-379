# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBSplineDownsampleImageFilterPython
else:
    import _itkBSplineDownsampleImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkOffsetPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
class itkBSplineDownsampleImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID2ID2_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID2ID2_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID2ID2_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterID2ID2_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID2ID2_Superclass_swigregister(itkBSplineDownsampleImageFilterID2ID2_Superclass)
class itkBSplineDownsampleImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID3ID3_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID3ID3_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID3ID3_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterID3ID3_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID3ID3_Superclass_swigregister(itkBSplineDownsampleImageFilterID3ID3_Superclass)
class itkBSplineDownsampleImageFilterID4ID4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID4ID4_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID4ID4_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID4ID4_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterID4ID4_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID4ID4_Superclass_swigregister(itkBSplineDownsampleImageFilterID4ID4_Superclass)
class itkBSplineDownsampleImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF2IF2_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF2IF2_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF2IF2_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterIF2IF2_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF2IF2_Superclass_swigregister(itkBSplineDownsampleImageFilterIF2IF2_Superclass)
class itkBSplineDownsampleImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF3IF3_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF3IF3_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF3IF3_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterIF3IF3_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF3IF3_Superclass_swigregister(itkBSplineDownsampleImageFilterIF3IF3_Superclass)
class itkBSplineDownsampleImageFilterIF4IF4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF4IF4_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF4IF4_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF4IF4_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterIF4IF4_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF4IF4_Superclass_swigregister(itkBSplineDownsampleImageFilterIF4IF4_Superclass)
class itkBSplineDownsampleImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS2ISS2_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS2ISS2_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS2ISS2_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterISS2ISS2_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS2ISS2_Superclass_swigregister(itkBSplineDownsampleImageFilterISS2ISS2_Superclass)
class itkBSplineDownsampleImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS3ISS3_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS3ISS3_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS3ISS3_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterISS3ISS3_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS3ISS3_Superclass_swigregister(itkBSplineDownsampleImageFilterISS3ISS3_Superclass)
class itkBSplineDownsampleImageFilterISS4ISS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS4ISS4_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS4ISS4_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS4ISS4_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterISS4ISS4_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS4ISS4_Superclass_swigregister(itkBSplineDownsampleImageFilterISS4ISS4_Superclass)
class itkBSplineDownsampleImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC2IUC2_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC2IUC2_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC2IUC2_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterIUC2IUC2_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC2IUC2_Superclass_swigregister(itkBSplineDownsampleImageFilterIUC2IUC2_Superclass)
class itkBSplineDownsampleImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC3IUC3_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC3IUC3_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC3IUC3_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterIUC3IUC3_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC3IUC3_Superclass_swigregister(itkBSplineDownsampleImageFilterIUC3IUC3_Superclass)
class itkBSplineDownsampleImageFilterIUC4IUC4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC4IUC4_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC4IUC4_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC4IUC4_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterIUC4IUC4_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC4IUC4_Superclass_swigregister(itkBSplineDownsampleImageFilterIUC4IUC4_Superclass)
class itkBSplineDownsampleImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS2IUS2_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS2IUS2_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS2IUS2_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterIUS2IUS2_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS2IUS2_Superclass_swigregister(itkBSplineDownsampleImageFilterIUS2IUS2_Superclass)
class itkBSplineDownsampleImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS3IUS3_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS3IUS3_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS3IUS3_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterIUS3IUS3_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS3IUS3_Superclass_swigregister(itkBSplineDownsampleImageFilterIUS3IUS3_Superclass)
class itkBSplineDownsampleImageFilterIUS4IUS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetSplineOrder(self, splineOrder):
        r"""
        SetSplineOrder(self, splineOrder)

        Parameters
        ----------
        splineOrder: int

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS4IUS4_Superclass_SetSplineOrder(self, splineOrder)

    def GetSplineOrder(self):
        r"""GetSplineOrder(self) -> int"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS4IUS4_Superclass_GetSplineOrder(self)
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS4IUS4_Superclass_cast(obj)

# Register itkBSplineDownsampleImageFilterIUS4IUS4_Superclass in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS4IUS4_Superclass_swigregister(itkBSplineDownsampleImageFilterIUS4IUS4_Superclass)

def itkBSplineDownsampleImageFilterID2ID2_New():
    return itkBSplineDownsampleImageFilterID2ID2.New()

class itkBSplineDownsampleImageFilterID2ID2(itkBSplineDownsampleImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterID2ID2_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterID2ID2_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID2ID2_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID2ID2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID2ID2_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID2ID2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterID2ID2

        Create a new object of the class itkBSplineDownsampleImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterID2ID2 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID2ID2_swigregister(itkBSplineDownsampleImageFilterID2ID2)

def itkBSplineDownsampleImageFilterID3ID3_New():
    return itkBSplineDownsampleImageFilterID3ID3.New()

class itkBSplineDownsampleImageFilterID3ID3(itkBSplineDownsampleImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterID3ID3_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterID3ID3_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID3ID3_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID3ID3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID3ID3_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID3ID3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterID3ID3

        Create a new object of the class itkBSplineDownsampleImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterID3ID3 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID3ID3_swigregister(itkBSplineDownsampleImageFilterID3ID3)

def itkBSplineDownsampleImageFilterID4ID4_New():
    return itkBSplineDownsampleImageFilterID4ID4.New()

class itkBSplineDownsampleImageFilterID4ID4(itkBSplineDownsampleImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterID4ID4_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterID4ID4_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID4ID4_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID4ID4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID4ID4_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID4ID4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterID4ID4

        Create a new object of the class itkBSplineDownsampleImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterID4ID4 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterID4ID4_swigregister(itkBSplineDownsampleImageFilterID4ID4)

def itkBSplineDownsampleImageFilterIF2IF2_New():
    return itkBSplineDownsampleImageFilterIF2IF2.New()

class itkBSplineDownsampleImageFilterIF2IF2(itkBSplineDownsampleImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterIF2IF2_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterIF2IF2_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF2IF2_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF2IF2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF2IF2_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterIF2IF2

        Create a new object of the class itkBSplineDownsampleImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterIF2IF2 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF2IF2_swigregister(itkBSplineDownsampleImageFilterIF2IF2)

def itkBSplineDownsampleImageFilterIF3IF3_New():
    return itkBSplineDownsampleImageFilterIF3IF3.New()

class itkBSplineDownsampleImageFilterIF3IF3(itkBSplineDownsampleImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterIF3IF3_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterIF3IF3_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF3IF3_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF3IF3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF3IF3_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterIF3IF3

        Create a new object of the class itkBSplineDownsampleImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterIF3IF3 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF3IF3_swigregister(itkBSplineDownsampleImageFilterIF3IF3)

def itkBSplineDownsampleImageFilterIF4IF4_New():
    return itkBSplineDownsampleImageFilterIF4IF4.New()

class itkBSplineDownsampleImageFilterIF4IF4(itkBSplineDownsampleImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterIF4IF4_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterIF4IF4_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF4IF4_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF4IF4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF4IF4_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF4IF4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterIF4IF4

        Create a new object of the class itkBSplineDownsampleImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterIF4IF4 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIF4IF4_swigregister(itkBSplineDownsampleImageFilterIF4IF4)

def itkBSplineDownsampleImageFilterISS2ISS2_New():
    return itkBSplineDownsampleImageFilterISS2ISS2.New()

class itkBSplineDownsampleImageFilterISS2ISS2(itkBSplineDownsampleImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterISS2ISS2_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterISS2ISS2_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS2ISS2_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS2ISS2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS2ISS2_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS2ISS2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterISS2ISS2

        Create a new object of the class itkBSplineDownsampleImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterISS2ISS2 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS2ISS2_swigregister(itkBSplineDownsampleImageFilterISS2ISS2)

def itkBSplineDownsampleImageFilterISS3ISS3_New():
    return itkBSplineDownsampleImageFilterISS3ISS3.New()

class itkBSplineDownsampleImageFilterISS3ISS3(itkBSplineDownsampleImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterISS3ISS3_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterISS3ISS3_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS3ISS3_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS3ISS3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS3ISS3_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS3ISS3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterISS3ISS3

        Create a new object of the class itkBSplineDownsampleImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterISS3ISS3 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS3ISS3_swigregister(itkBSplineDownsampleImageFilterISS3ISS3)

def itkBSplineDownsampleImageFilterISS4ISS4_New():
    return itkBSplineDownsampleImageFilterISS4ISS4.New()

class itkBSplineDownsampleImageFilterISS4ISS4(itkBSplineDownsampleImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterISS4ISS4_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterISS4ISS4_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS4ISS4_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS4ISS4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS4ISS4_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS4ISS4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterISS4ISS4

        Create a new object of the class itkBSplineDownsampleImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterISS4ISS4 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterISS4ISS4_swigregister(itkBSplineDownsampleImageFilterISS4ISS4)

def itkBSplineDownsampleImageFilterIUC2IUC2_New():
    return itkBSplineDownsampleImageFilterIUC2IUC2.New()

class itkBSplineDownsampleImageFilterIUC2IUC2(itkBSplineDownsampleImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterIUC2IUC2_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterIUC2IUC2_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC2IUC2_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC2IUC2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC2IUC2_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC2IUC2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterIUC2IUC2

        Create a new object of the class itkBSplineDownsampleImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterIUC2IUC2 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC2IUC2_swigregister(itkBSplineDownsampleImageFilterIUC2IUC2)

def itkBSplineDownsampleImageFilterIUC3IUC3_New():
    return itkBSplineDownsampleImageFilterIUC3IUC3.New()

class itkBSplineDownsampleImageFilterIUC3IUC3(itkBSplineDownsampleImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterIUC3IUC3_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterIUC3IUC3_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC3IUC3_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC3IUC3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC3IUC3_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC3IUC3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterIUC3IUC3

        Create a new object of the class itkBSplineDownsampleImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterIUC3IUC3 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC3IUC3_swigregister(itkBSplineDownsampleImageFilterIUC3IUC3)

def itkBSplineDownsampleImageFilterIUC4IUC4_New():
    return itkBSplineDownsampleImageFilterIUC4IUC4.New()

class itkBSplineDownsampleImageFilterIUC4IUC4(itkBSplineDownsampleImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterIUC4IUC4_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterIUC4IUC4_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC4IUC4_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC4IUC4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC4IUC4_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC4IUC4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterIUC4IUC4

        Create a new object of the class itkBSplineDownsampleImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterIUC4IUC4 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUC4IUC4_swigregister(itkBSplineDownsampleImageFilterIUC4IUC4)

def itkBSplineDownsampleImageFilterIUS2IUS2_New():
    return itkBSplineDownsampleImageFilterIUS2IUS2.New()

class itkBSplineDownsampleImageFilterIUS2IUS2(itkBSplineDownsampleImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterIUS2IUS2_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterIUS2IUS2_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS2IUS2_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS2IUS2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS2IUS2_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS2IUS2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterIUS2IUS2

        Create a new object of the class itkBSplineDownsampleImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterIUS2IUS2 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS2IUS2_swigregister(itkBSplineDownsampleImageFilterIUS2IUS2)

def itkBSplineDownsampleImageFilterIUS3IUS3_New():
    return itkBSplineDownsampleImageFilterIUS3IUS3.New()

class itkBSplineDownsampleImageFilterIUS3IUS3(itkBSplineDownsampleImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterIUS3IUS3_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterIUS3IUS3_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS3IUS3_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS3IUS3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS3IUS3_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS3IUS3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterIUS3IUS3

        Create a new object of the class itkBSplineDownsampleImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterIUS3IUS3 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS3IUS3_swigregister(itkBSplineDownsampleImageFilterIUS3IUS3)

def itkBSplineDownsampleImageFilterIUS4IUS4_New():
    return itkBSplineDownsampleImageFilterIUS4IUS4.New()

class itkBSplineDownsampleImageFilterIUS4IUS4(itkBSplineDownsampleImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkBSplineDownsampleImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBSplineDownsampleImageFilterIUS4IUS4_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBSplineDownsampleImageFilterIUS4IUS4_Pointer"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS4IUS4_Clone(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS4IUS4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS4IUS4_GenerateInputRequestedRegion(self)
    DoubleConvertibleToOutputCheck = _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS4IUS4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBSplineDownsampleImageFilterPython.delete_itkBSplineDownsampleImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBSplineDownsampleImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBSplineDownsampleImageFilterIUS4IUS4

        Create a new object of the class itkBSplineDownsampleImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBSplineDownsampleImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBSplineDownsampleImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBSplineDownsampleImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBSplineDownsampleImageFilterIUS4IUS4 in _itkBSplineDownsampleImageFilterPython:
_itkBSplineDownsampleImageFilterPython.itkBSplineDownsampleImageFilterIUS4IUS4_swigregister(itkBSplineDownsampleImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def b_spline_resample_image_filter_base(*args: itkt.ImageLike,  spline_order: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BSplineResampleImageFilterBase"""
    import itk

    kwarg_typehints = { 'spline_order':spline_order }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BSplineResampleImageFilterBase.New(*args, **kwargs)

    return instance.__internal_call__()

def b_spline_resample_image_filter_base_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageGrid.BSplineResampleImageFilterBase
    b_spline_resample_image_filter_base.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    b_spline_resample_image_filter_base.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def b_spline_downsample_image_filter(*args: itkt.ImageLike,  spline_order: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BSplineDownsampleImageFilter"""
    import itk

    kwarg_typehints = { 'spline_order':spline_order }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BSplineDownsampleImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def b_spline_downsample_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageGrid.BSplineDownsampleImageFilter
    b_spline_downsample_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    b_spline_downsample_image_filter.__doc__ = filter_object.__doc__



