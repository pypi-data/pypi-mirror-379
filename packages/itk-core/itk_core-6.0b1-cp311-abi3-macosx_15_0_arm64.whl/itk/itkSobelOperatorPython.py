# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSobelOperatorPython
else:
    import _itkSobelOperatorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkNeighborhoodOperatorPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSizePython
import itk.itkNeighborhoodPython
import itk.itkRGBPixelPython
import itk.itkOffsetPython
class itkSobelOperatorD2(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD2):
    r"""Proxy of C++ itkSobelOperatorD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSobelOperatorPython.delete_itkSobelOperatorD2

    def __init__(self, *args):
        r"""
        __init__(self) -> itkSobelOperatorD2
        __init__(self, arg0) -> itkSobelOperatorD2

        Parameters
        ----------
        arg0: itkSobelOperatorD2 const &

        """
        _itkSobelOperatorPython.itkSobelOperatorD2_swiginit(self, _itkSobelOperatorPython.new_itkSobelOperatorD2(*args))

# Register itkSobelOperatorD2 in _itkSobelOperatorPython:
_itkSobelOperatorPython.itkSobelOperatorD2_swigregister(itkSobelOperatorD2)
class itkSobelOperatorD3(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD3):
    r"""Proxy of C++ itkSobelOperatorD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSobelOperatorPython.delete_itkSobelOperatorD3

    def __init__(self, *args):
        r"""
        __init__(self) -> itkSobelOperatorD3
        __init__(self, arg0) -> itkSobelOperatorD3

        Parameters
        ----------
        arg0: itkSobelOperatorD3 const &

        """
        _itkSobelOperatorPython.itkSobelOperatorD3_swiginit(self, _itkSobelOperatorPython.new_itkSobelOperatorD3(*args))

# Register itkSobelOperatorD3 in _itkSobelOperatorPython:
_itkSobelOperatorPython.itkSobelOperatorD3_swigregister(itkSobelOperatorD3)
class itkSobelOperatorD4(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD4):
    r"""Proxy of C++ itkSobelOperatorD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSobelOperatorPython.delete_itkSobelOperatorD4

    def __init__(self, *args):
        r"""
        __init__(self) -> itkSobelOperatorD4
        __init__(self, arg0) -> itkSobelOperatorD4

        Parameters
        ----------
        arg0: itkSobelOperatorD4 const &

        """
        _itkSobelOperatorPython.itkSobelOperatorD4_swiginit(self, _itkSobelOperatorPython.new_itkSobelOperatorD4(*args))

# Register itkSobelOperatorD4 in _itkSobelOperatorPython:
_itkSobelOperatorPython.itkSobelOperatorD4_swigregister(itkSobelOperatorD4)
class itkSobelOperatorF2(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF2):
    r"""Proxy of C++ itkSobelOperatorF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSobelOperatorPython.delete_itkSobelOperatorF2

    def __init__(self, *args):
        r"""
        __init__(self) -> itkSobelOperatorF2
        __init__(self, arg0) -> itkSobelOperatorF2

        Parameters
        ----------
        arg0: itkSobelOperatorF2 const &

        """
        _itkSobelOperatorPython.itkSobelOperatorF2_swiginit(self, _itkSobelOperatorPython.new_itkSobelOperatorF2(*args))

# Register itkSobelOperatorF2 in _itkSobelOperatorPython:
_itkSobelOperatorPython.itkSobelOperatorF2_swigregister(itkSobelOperatorF2)
class itkSobelOperatorF3(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF3):
    r"""Proxy of C++ itkSobelOperatorF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSobelOperatorPython.delete_itkSobelOperatorF3

    def __init__(self, *args):
        r"""
        __init__(self) -> itkSobelOperatorF3
        __init__(self, arg0) -> itkSobelOperatorF3

        Parameters
        ----------
        arg0: itkSobelOperatorF3 const &

        """
        _itkSobelOperatorPython.itkSobelOperatorF3_swiginit(self, _itkSobelOperatorPython.new_itkSobelOperatorF3(*args))

# Register itkSobelOperatorF3 in _itkSobelOperatorPython:
_itkSobelOperatorPython.itkSobelOperatorF3_swigregister(itkSobelOperatorF3)
class itkSobelOperatorF4(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF4):
    r"""Proxy of C++ itkSobelOperatorF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSobelOperatorPython.delete_itkSobelOperatorF4

    def __init__(self, *args):
        r"""
        __init__(self) -> itkSobelOperatorF4
        __init__(self, arg0) -> itkSobelOperatorF4

        Parameters
        ----------
        arg0: itkSobelOperatorF4 const &

        """
        _itkSobelOperatorPython.itkSobelOperatorF4_swiginit(self, _itkSobelOperatorPython.new_itkSobelOperatorF4(*args))

# Register itkSobelOperatorF4 in _itkSobelOperatorPython:
_itkSobelOperatorPython.itkSobelOperatorF4_swigregister(itkSobelOperatorF4)

