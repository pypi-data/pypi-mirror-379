# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGaussianDerivativeOperatorPython
else:
    import _itkGaussianDerivativeOperatorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkNeighborhoodOperatorPython
import itk.itkSizePython
import itk.itkNeighborhoodPython
import itk.itkRGBPixelPython
import itk.itkOffsetPython
class itkGaussianDerivativeOperatorD2(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD2):
    r"""Proxy of C++ itkGaussianDerivativeOperatorD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def SetNormalizeAcrossScale(self, flag):
        r"""
        SetNormalizeAcrossScale(self, flag)

        Parameters
        ----------
        flag: bool

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_SetNormalizeAcrossScale(self, flag)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_NormalizeAcrossScaleOff(self)

    def SetVariance(self, variance):
        r"""
        SetVariance(self, variance)

        Parameters
        ----------
        variance: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_SetVariance(self, variance)

    def GetVariance(self):
        r"""GetVariance(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_GetVariance(self)

    def SetSpacing(self, spacing):
        r"""
        SetSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_SetSpacing(self, spacing)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_GetSpacing(self)

    def SetMaximumError(self, maxerror):
        r"""
        SetMaximumError(self, maxerror)

        Parameters
        ----------
        maxerror: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_SetMaximumError(self, maxerror)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_GetMaximumError(self)

    def SetMaximumKernelWidth(self, n):
        r"""
        SetMaximumKernelWidth(self, n)

        Parameters
        ----------
        n: unsigned int

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_SetMaximumKernelWidth(self, n)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> unsigned int"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_GetMaximumKernelWidth(self)

    def SetOrder(self, order):
        r"""
        SetOrder(self, order)

        Parameters
        ----------
        order: unsigned int const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_SetOrder(self, order)

    def GetOrder(self):
        r"""GetOrder(self) -> unsigned int"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_GetOrder(self)
    __swig_destroy__ = _itkGaussianDerivativeOperatorPython.delete_itkGaussianDerivativeOperatorD2

    def __init__(self, *args):
        r"""
        __init__(self) -> itkGaussianDerivativeOperatorD2
        __init__(self, arg0) -> itkGaussianDerivativeOperatorD2

        Parameters
        ----------
        arg0: itkGaussianDerivativeOperatorD2 const &

        """
        _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_swiginit(self, _itkGaussianDerivativeOperatorPython.new_itkGaussianDerivativeOperatorD2(*args))

# Register itkGaussianDerivativeOperatorD2 in _itkGaussianDerivativeOperatorPython:
_itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD2_swigregister(itkGaussianDerivativeOperatorD2)
class itkGaussianDerivativeOperatorD3(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD3):
    r"""Proxy of C++ itkGaussianDerivativeOperatorD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def SetNormalizeAcrossScale(self, flag):
        r"""
        SetNormalizeAcrossScale(self, flag)

        Parameters
        ----------
        flag: bool

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_SetNormalizeAcrossScale(self, flag)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_NormalizeAcrossScaleOff(self)

    def SetVariance(self, variance):
        r"""
        SetVariance(self, variance)

        Parameters
        ----------
        variance: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_SetVariance(self, variance)

    def GetVariance(self):
        r"""GetVariance(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_GetVariance(self)

    def SetSpacing(self, spacing):
        r"""
        SetSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_SetSpacing(self, spacing)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_GetSpacing(self)

    def SetMaximumError(self, maxerror):
        r"""
        SetMaximumError(self, maxerror)

        Parameters
        ----------
        maxerror: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_SetMaximumError(self, maxerror)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_GetMaximumError(self)

    def SetMaximumKernelWidth(self, n):
        r"""
        SetMaximumKernelWidth(self, n)

        Parameters
        ----------
        n: unsigned int

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_SetMaximumKernelWidth(self, n)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> unsigned int"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_GetMaximumKernelWidth(self)

    def SetOrder(self, order):
        r"""
        SetOrder(self, order)

        Parameters
        ----------
        order: unsigned int const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_SetOrder(self, order)

    def GetOrder(self):
        r"""GetOrder(self) -> unsigned int"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_GetOrder(self)
    __swig_destroy__ = _itkGaussianDerivativeOperatorPython.delete_itkGaussianDerivativeOperatorD3

    def __init__(self, *args):
        r"""
        __init__(self) -> itkGaussianDerivativeOperatorD3
        __init__(self, arg0) -> itkGaussianDerivativeOperatorD3

        Parameters
        ----------
        arg0: itkGaussianDerivativeOperatorD3 const &

        """
        _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_swiginit(self, _itkGaussianDerivativeOperatorPython.new_itkGaussianDerivativeOperatorD3(*args))

# Register itkGaussianDerivativeOperatorD3 in _itkGaussianDerivativeOperatorPython:
_itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD3_swigregister(itkGaussianDerivativeOperatorD3)
class itkGaussianDerivativeOperatorD4(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD4):
    r"""Proxy of C++ itkGaussianDerivativeOperatorD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def SetNormalizeAcrossScale(self, flag):
        r"""
        SetNormalizeAcrossScale(self, flag)

        Parameters
        ----------
        flag: bool

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_SetNormalizeAcrossScale(self, flag)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_NormalizeAcrossScaleOff(self)

    def SetVariance(self, variance):
        r"""
        SetVariance(self, variance)

        Parameters
        ----------
        variance: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_SetVariance(self, variance)

    def GetVariance(self):
        r"""GetVariance(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_GetVariance(self)

    def SetSpacing(self, spacing):
        r"""
        SetSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_SetSpacing(self, spacing)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_GetSpacing(self)

    def SetMaximumError(self, maxerror):
        r"""
        SetMaximumError(self, maxerror)

        Parameters
        ----------
        maxerror: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_SetMaximumError(self, maxerror)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_GetMaximumError(self)

    def SetMaximumKernelWidth(self, n):
        r"""
        SetMaximumKernelWidth(self, n)

        Parameters
        ----------
        n: unsigned int

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_SetMaximumKernelWidth(self, n)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> unsigned int"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_GetMaximumKernelWidth(self)

    def SetOrder(self, order):
        r"""
        SetOrder(self, order)

        Parameters
        ----------
        order: unsigned int const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_SetOrder(self, order)

    def GetOrder(self):
        r"""GetOrder(self) -> unsigned int"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_GetOrder(self)
    __swig_destroy__ = _itkGaussianDerivativeOperatorPython.delete_itkGaussianDerivativeOperatorD4

    def __init__(self, *args):
        r"""
        __init__(self) -> itkGaussianDerivativeOperatorD4
        __init__(self, arg0) -> itkGaussianDerivativeOperatorD4

        Parameters
        ----------
        arg0: itkGaussianDerivativeOperatorD4 const &

        """
        _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_swiginit(self, _itkGaussianDerivativeOperatorPython.new_itkGaussianDerivativeOperatorD4(*args))

# Register itkGaussianDerivativeOperatorD4 in _itkGaussianDerivativeOperatorPython:
_itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorD4_swigregister(itkGaussianDerivativeOperatorD4)
class itkGaussianDerivativeOperatorEnums(object):
    r"""Proxy of C++ itkGaussianDerivativeOperatorEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    InterpolationMode_NearestNeighbourInterpolation = _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorEnums_InterpolationMode_NearestNeighbourInterpolation
    
    InterpolationMode_LinearInterpolation = _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorEnums_InterpolationMode_LinearInterpolation
    

    def __init__(self, *args):
        r"""
        __init__(self) -> itkGaussianDerivativeOperatorEnums
        __init__(self, arg0) -> itkGaussianDerivativeOperatorEnums

        Parameters
        ----------
        arg0: itkGaussianDerivativeOperatorEnums const &

        """
        _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorEnums_swiginit(self, _itkGaussianDerivativeOperatorPython.new_itkGaussianDerivativeOperatorEnums(*args))
    __swig_destroy__ = _itkGaussianDerivativeOperatorPython.delete_itkGaussianDerivativeOperatorEnums

# Register itkGaussianDerivativeOperatorEnums in _itkGaussianDerivativeOperatorPython:
_itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorEnums_swigregister(itkGaussianDerivativeOperatorEnums)
class itkGaussianDerivativeOperatorF2(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF2):
    r"""Proxy of C++ itkGaussianDerivativeOperatorF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def SetNormalizeAcrossScale(self, flag):
        r"""
        SetNormalizeAcrossScale(self, flag)

        Parameters
        ----------
        flag: bool

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_SetNormalizeAcrossScale(self, flag)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_NormalizeAcrossScaleOff(self)

    def SetVariance(self, variance):
        r"""
        SetVariance(self, variance)

        Parameters
        ----------
        variance: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_SetVariance(self, variance)

    def GetVariance(self):
        r"""GetVariance(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_GetVariance(self)

    def SetSpacing(self, spacing):
        r"""
        SetSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_SetSpacing(self, spacing)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_GetSpacing(self)

    def SetMaximumError(self, maxerror):
        r"""
        SetMaximumError(self, maxerror)

        Parameters
        ----------
        maxerror: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_SetMaximumError(self, maxerror)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_GetMaximumError(self)

    def SetMaximumKernelWidth(self, n):
        r"""
        SetMaximumKernelWidth(self, n)

        Parameters
        ----------
        n: unsigned int

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_SetMaximumKernelWidth(self, n)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> unsigned int"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_GetMaximumKernelWidth(self)

    def SetOrder(self, order):
        r"""
        SetOrder(self, order)

        Parameters
        ----------
        order: unsigned int const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_SetOrder(self, order)

    def GetOrder(self):
        r"""GetOrder(self) -> unsigned int"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_GetOrder(self)
    __swig_destroy__ = _itkGaussianDerivativeOperatorPython.delete_itkGaussianDerivativeOperatorF2

    def __init__(self, *args):
        r"""
        __init__(self) -> itkGaussianDerivativeOperatorF2
        __init__(self, arg0) -> itkGaussianDerivativeOperatorF2

        Parameters
        ----------
        arg0: itkGaussianDerivativeOperatorF2 const &

        """
        _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_swiginit(self, _itkGaussianDerivativeOperatorPython.new_itkGaussianDerivativeOperatorF2(*args))

# Register itkGaussianDerivativeOperatorF2 in _itkGaussianDerivativeOperatorPython:
_itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF2_swigregister(itkGaussianDerivativeOperatorF2)
class itkGaussianDerivativeOperatorF3(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF3):
    r"""Proxy of C++ itkGaussianDerivativeOperatorF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def SetNormalizeAcrossScale(self, flag):
        r"""
        SetNormalizeAcrossScale(self, flag)

        Parameters
        ----------
        flag: bool

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_SetNormalizeAcrossScale(self, flag)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_NormalizeAcrossScaleOff(self)

    def SetVariance(self, variance):
        r"""
        SetVariance(self, variance)

        Parameters
        ----------
        variance: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_SetVariance(self, variance)

    def GetVariance(self):
        r"""GetVariance(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_GetVariance(self)

    def SetSpacing(self, spacing):
        r"""
        SetSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_SetSpacing(self, spacing)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_GetSpacing(self)

    def SetMaximumError(self, maxerror):
        r"""
        SetMaximumError(self, maxerror)

        Parameters
        ----------
        maxerror: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_SetMaximumError(self, maxerror)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_GetMaximumError(self)

    def SetMaximumKernelWidth(self, n):
        r"""
        SetMaximumKernelWidth(self, n)

        Parameters
        ----------
        n: unsigned int

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_SetMaximumKernelWidth(self, n)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> unsigned int"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_GetMaximumKernelWidth(self)

    def SetOrder(self, order):
        r"""
        SetOrder(self, order)

        Parameters
        ----------
        order: unsigned int const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_SetOrder(self, order)

    def GetOrder(self):
        r"""GetOrder(self) -> unsigned int"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_GetOrder(self)
    __swig_destroy__ = _itkGaussianDerivativeOperatorPython.delete_itkGaussianDerivativeOperatorF3

    def __init__(self, *args):
        r"""
        __init__(self) -> itkGaussianDerivativeOperatorF3
        __init__(self, arg0) -> itkGaussianDerivativeOperatorF3

        Parameters
        ----------
        arg0: itkGaussianDerivativeOperatorF3 const &

        """
        _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_swiginit(self, _itkGaussianDerivativeOperatorPython.new_itkGaussianDerivativeOperatorF3(*args))

# Register itkGaussianDerivativeOperatorF3 in _itkGaussianDerivativeOperatorPython:
_itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF3_swigregister(itkGaussianDerivativeOperatorF3)
class itkGaussianDerivativeOperatorF4(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF4):
    r"""Proxy of C++ itkGaussianDerivativeOperatorF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def SetNormalizeAcrossScale(self, flag):
        r"""
        SetNormalizeAcrossScale(self, flag)

        Parameters
        ----------
        flag: bool

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_SetNormalizeAcrossScale(self, flag)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_GetNormalizeAcrossScale(self)

    def NormalizeAcrossScaleOn(self):
        r"""NormalizeAcrossScaleOn(self)"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_NormalizeAcrossScaleOn(self)

    def NormalizeAcrossScaleOff(self):
        r"""NormalizeAcrossScaleOff(self)"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_NormalizeAcrossScaleOff(self)

    def SetVariance(self, variance):
        r"""
        SetVariance(self, variance)

        Parameters
        ----------
        variance: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_SetVariance(self, variance)

    def GetVariance(self):
        r"""GetVariance(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_GetVariance(self)

    def SetSpacing(self, spacing):
        r"""
        SetSpacing(self, spacing)

        Parameters
        ----------
        spacing: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_SetSpacing(self, spacing)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_GetSpacing(self)

    def SetMaximumError(self, maxerror):
        r"""
        SetMaximumError(self, maxerror)

        Parameters
        ----------
        maxerror: double const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_SetMaximumError(self, maxerror)

    def GetMaximumError(self):
        r"""GetMaximumError(self) -> double"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_GetMaximumError(self)

    def SetMaximumKernelWidth(self, n):
        r"""
        SetMaximumKernelWidth(self, n)

        Parameters
        ----------
        n: unsigned int

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_SetMaximumKernelWidth(self, n)

    def GetMaximumKernelWidth(self):
        r"""GetMaximumKernelWidth(self) -> unsigned int"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_GetMaximumKernelWidth(self)

    def SetOrder(self, order):
        r"""
        SetOrder(self, order)

        Parameters
        ----------
        order: unsigned int const

        """
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_SetOrder(self, order)

    def GetOrder(self):
        r"""GetOrder(self) -> unsigned int"""
        return _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_GetOrder(self)
    __swig_destroy__ = _itkGaussianDerivativeOperatorPython.delete_itkGaussianDerivativeOperatorF4

    def __init__(self, *args):
        r"""
        __init__(self) -> itkGaussianDerivativeOperatorF4
        __init__(self, arg0) -> itkGaussianDerivativeOperatorF4

        Parameters
        ----------
        arg0: itkGaussianDerivativeOperatorF4 const &

        """
        _itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_swiginit(self, _itkGaussianDerivativeOperatorPython.new_itkGaussianDerivativeOperatorF4(*args))

# Register itkGaussianDerivativeOperatorF4 in _itkGaussianDerivativeOperatorPython:
_itkGaussianDerivativeOperatorPython.itkGaussianDerivativeOperatorF4_swigregister(itkGaussianDerivativeOperatorF4)

