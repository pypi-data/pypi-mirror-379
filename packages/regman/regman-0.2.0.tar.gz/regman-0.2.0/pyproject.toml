[project]
name = "regman"
version = "0.2.0"
description = "Thread-safe registry framework for Python objects, plugins, strategies, handlers, or any reusable objects."
authors = [
    {name = "Ephraim Seddor",email = "seddorephraim7@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10,<3.14"
dependencies = [
]

[tool.poetry]
packages = [{include = "regman", from = "src"}]

exclude = ["examples*", "tests*"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.2"
pytest-cov = "^7.0.0"
ruff = "^0.13.2"
black = "^25.9.0"
isort = "^6.0.1"
mypy = "^1.18.2"
commitizen = "^4.9.1"
pre-commit = "^4.3.0"
types-pyyaml = "^6.0.12.20250915"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.0"
tag_format = "v$version"
update_changelog_on_bump = true
version_files = [
    "pyproject.toml:version",
    "src/regman/__init__.py:__version__",
]

[tool.black]
line-length = 88
target-version = ["py310"]
skip-string-normalization = false
preview = true
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | examples
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 88
skip = [
    "examples",
    "migrations",
    ".venv",
    "venv",
    "env",
    ".env",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
]


[tool.ruff]
line-length = 88
target-version = "py310"
exclude = ["examples", "migrations", ".venv", "venv", "env", ".env", ".bzr", ".direnv", ".eggs", ".git", ".git-rewrite", ".hg", ".ipynb_checkpoints", ".mypy_cache", ".nox", ".pants.d", ".pyenv", ".pytest_cache", ".pytype", ".ruff_cache", ".svn", ".tox", ".venv", ".vscode", "__pypackages__", "_build", "buck-out", "build", "dist", "node_modules", "site-packages"]

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
ignore = ["E501"]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
exclude = ["examples"]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
