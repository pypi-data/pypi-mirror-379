"""Tests for the card module."""
from ballmatro.card import Card, parse_card_list

def test_card_suit():
    card = Card("10â™ ")
    assert card.suit == "â™ "
    card = Card("Aâ™¥")
    assert card.suit == "â™¥"
    card = Card("ğŸ‚¿ Double Double: Cards with rank 2 provide double chips")
    assert card.suit is None

def test_card_rank():
    card = Card("10â™ ")
    assert card.rank == "10"
    card = Card("Aâ™¥")
    assert card.rank == "A"
    card = Card("ğŸ‚¿ Double Double: Cards with rank 2 provide double chips")
    assert card.rank is None

def test_card_modifier():
    card = Card("10â™ +")
    assert card.modifier == "+"
    card = Card("Aâ™¥x")
    assert card.modifier == "x"
    card = Card("Qâ™¦")
    assert card.modifier is None

def test_card_is_joker():
    card = Card("ğŸ‚¿ Diamond Crack: Cards from the â™¦ suit cannot be used in the hand")
    assert card.is_joker is True
    card = Card("10â™ ")
    assert card.is_joker is False
    card = Card("ğŸ‚¿ Diamond Crack")
    assert card.is_joker is True

def test_card_joker_rule():
    card = Card("ğŸ‚¿ Oblique: Straights cannot be played")
    assert card.joker_rule == "Straights cannot be played"
    card = Card("10â™ ")
    assert card.joker_rule is None

def test_card_joker_name():
    card = Card("ğŸ‚¿ Double Double: Cards with rank 2 provide double chips")
    assert card.joker_name == "Double Double"
    card = Card("10â™ ")
    assert card.joker_name is None
    card = Card("ğŸ‚¿ Double Double")
    assert card.joker_name == "Double Double"

def test_card_empty_string():
    try:
        Card("")
    except ValueError as e:
        assert str(e) == "Card text must be a non-empty string"

def test_parse_card_list_basic():
    cards = parse_card_list("[2â™£,3â™ ,4â™¥]")
    assert cards == [Card("2â™£"), Card("3â™ "), Card("4â™¥")]

def test_parse_card_list_with_spaces():
    cards = parse_card_list("[ 2â™£ , 3â™  , 4â™¥ ]")
    assert cards == [Card("2â™£"), Card("3â™ "), Card("4â™¥")]

def test_parse_card_list_single_card():
    cards = parse_card_list("[Aâ™¦]")
    assert cards == [Card("Aâ™¦")]

def test_parse_card_list_empty():
    cards = parse_card_list("[]")
    assert cards == []
