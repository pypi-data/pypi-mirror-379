[project]
name = "uv-burn"
version = "0.1.1"
description = "Convert uv (Astral) project files (pyproject.toml + uv.lock) into Pipenv (Pipfile + Pipfile.lock) so security tooling like Veracode can scan projects that don't yet support uv directly."
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["uv", "pipenv", "converter", "veracode", "security", "pyproject", "lockfile"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Security",
]
requires-python = ">=3.12"
dependencies = [
    "httpx>=0.28.1",
    "packaging>=25.0",
    "pydantic>=2.11.7",
    "rich>=14.1.0",
    "tomli-w>=1.2.0",
    "typer>=0.16.1",
]

[project.scripts]
uv-burn = "uv_burn:main.cli"

[build-system]
requires = ["uv_build>=0.8.12,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "ipdb>=0.13.13",
    "pyright>=1.1.405",
    "ruff>=0.12.9",
]
test = [
    "orjson>=3.11.3",
    "pipenv>=2025.0.4",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-mock>=3.15.1",
    "testcontainers[nginx]>=4.13.0",
]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = [
    "ALL", # include all the rules, including new ones
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
    "D200",
    "D203", # 1 blank line required before class docstring
    "D205", 
    "D211",
    "D212",
    "D202",
    "D400", # Firrst line should end with a period
    "D401",
    "D411",
    "D410",
    "D413",
    "D415", # First line should end with a period
    "COM812",
    "INP001",
    "TC001",
    "EM101",
    "EM102",
    "TRY003",
    "PLR0912",
    "C901",
    "TC002", # Use Typeching block
    "TC003", # Use Typeching block
    #"RUFFG004"
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", # Use of `assert` detected.
    "S105", # hardcoded password string
    "PLR2004", # Magic value used in comparison
    "S106", # Allow hardcoded passwords 
    "D101", # missing docstring in public class
] 
