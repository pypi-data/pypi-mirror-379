Metadata-Version: 2.4
Name: rhoshift
Version: 0.1.7.3
Summary: RHOAI tool kit for managing and upgrading RHOAI
Author: Milind Waykole
License:                                  Apache License
                                   Version 2.0, January 2004
                                http://www.apache.org/licenses/
        
           TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        
           1. Definitions.
        
              "License" shall mean the terms and conditions for use, reproduction,
              and distribution as defined by Sections 1 through 9 of this document.
        
              "Licensor" shall mean the copyright owner or entity authorized by
              the copyright owner that is granting the License.
        
              "Legal Entity" shall mean the union of the acting entity and all
              other entities that control, are controlled by, or are under common
              control with that entity. For the purposes of this definition,
              "control" means (i) the power, direct or indirect, to cause the
              direction or management of such entity, whether by contract or
              otherwise, or (ii) ownership of fifty percent (50%) or more of the
              outstanding shares, or (iii) beneficial ownership of such entity.
        
              "You" (or "Your") shall mean an individual or Legal Entity
              exercising permissions granted by this License.
        
              "Source" form shall mean the preferred form for making modifications,
              including but not limited to software source code, documentation
              source, and configuration files.
        
              "Object" form shall mean any form resulting from mechanical
              transformation or translation of a Source form, including but
              not limited to compiled object code, generated documentation,
              and conversions to other media types.
        
              "Work" shall mean the work of authorship, whether in Source or
              Object form, made available under the License, as indicated by a
              copyright notice that is included in or attached to the work
              (an example is provided in the Appendix below).
        
              "Derivative Works" shall mean any work, whether in Source or Object
              form, that is based on (or derived from) the Work and for which the
              editorial revisions, annotations, elaborations, or other modifications
              represent, as a whole, an original work of authorship. For the purposes
              of this License, Derivative Works shall not include works that remain
              separable from, or merely link (or bind by name) to the interfaces of,
              the Work and Derivative Works thereof.
        
              "Contribution" shall mean any work of authorship, including
              the original version of the Work and any modifications or additions
              to that Work or Derivative Works thereof, that is intentionally
              submitted to Licensor for inclusion in the Work by the copyright owner
              or by an individual or Legal Entity authorized to submit on behalf of
              the copyright owner. For the purposes of this definition, "submitted"
              means any form of electronic, verbal, or written communication sent
              to the Licensor or its representatives, including but not limited to
              communication on electronic mailing lists, source code control systems,
              and issue tracking systems that are managed by, or on behalf of, the
              Licensor for the purpose of discussing and improving the Work, but
              excluding communication that is conspicuously marked or otherwise
              designated in writing by the copyright owner as "Not a Contribution."
        
              "Contributor" shall mean Licensor and any individual or Legal Entity
              on behalf of whom a Contribution has been received by Licensor and
              subsequently incorporated within the Work.
        
           2. Grant of Copyright License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              copyright license to reproduce, prepare Derivative Works of,
              publicly display, publicly perform, sublicense, and distribute the
              Work and such Derivative Works in Source or Object form.
        
           3. Grant of Patent License. Subject to the terms and conditions of
              this License, each Contributor hereby grants to You a perpetual,
              worldwide, non-exclusive, no-charge, royalty-free, irrevocable
              (except as stated in this section) patent license to make, have made,
              use, offer to sell, sell, import, and otherwise transfer the Work,
              where such license applies only to those patent claims licensable
              by such Contributor that are necessarily infringed by their
              Contribution(s) alone or by combination of their Contribution(s)
              with the Work to which such Contribution(s) was submitted. If You
              institute patent litigation against any entity (including a
              cross-claim or counterclaim in a lawsuit) alleging that the Work
              or a Contribution incorporated within the Work constitutes direct
              or contributory patent infringement, then any patent licenses
              granted to You under this License for that Work shall terminate
              as of the date such litigation is filed.
        
           4. Redistribution. You may reproduce and distribute copies of the
              Work or Derivative Works thereof in any medium, with or without
              modifications, and in Source or Object form, provided that You
              meet the following conditions:
        
              (a) You must give any other recipients of the Work or
                  Derivative Works a copy of this License; and
        
              (b) You must cause any modified files to carry prominent notices
                  stating that You changed the files; and
        
              (c) You must retain, in the Source form of any Derivative Works
                  that You distribute, all copyright, patent, trademark, and
                  attribution notices from the Source form of the Work,
                  excluding those notices that do not pertain to any part of
                  the Derivative Works; and
        
              (d) If the Work includes a "NOTICE" text file as part of its
                  distribution, then any Derivative Works that You distribute must
                  include a readable copy of the attribution notices contained
                  within such NOTICE file, excluding those notices that do not
                  pertain to any part of the Derivative Works, in at least one
                  of the following places: within a NOTICE text file distributed
                  as part of the Derivative Works; within the Source form or
                  documentation, if provided along with the Derivative Works; or,
                  within a display generated by the Derivative Works, if and
                  wherever such third-party notices normally appear. The contents
                  of the NOTICE file are for informational purposes only and
                  do not modify the License. You may add Your own attribution
                  notices within Derivative Works that You distribute, alongside
                  or as an addendum to the NOTICE text from the Work, provided
                  that such additional attribution notices cannot be construed
                  as modifying the License.
        
              You may add Your own copyright statement to Your modifications and
              may provide additional or different license terms and conditions
              for use, reproduction, or distribution of Your modifications, or
              for any such Derivative Works as a whole, provided Your use,
              reproduction, and distribution of the Work otherwise complies with
              the conditions stated in this License.
        
           5. Submission of Contributions. Unless You explicitly state otherwise,
              any Contribution intentionally submitted for inclusion in the Work
              by You to the Licensor shall be under the terms and conditions of
              this License, without any additional terms or conditions.
              Notwithstanding the above, nothing herein shall supersede or modify
              the terms of any separate license agreement you may have executed
              with Licensor regarding such Contributions.
        
           6. Trademarks. This License does not grant permission to use the trade
              names, trademarks, service marks, or product names of the Licensor,
              except as required for reasonable and customary use in describing the
              origin of the Work and reproducing the content of the NOTICE file.
        
           7. Disclaimer of Warranty. Unless required by applicable law or
              agreed to in writing, Licensor provides the Work (and each
              Contributor provides its Contributions) on an "AS IS" BASIS,
              WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
              implied, including, without limitation, any warranties or conditions
              of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
              PARTICULAR PURPOSE. You are solely responsible for determining the
              appropriateness of using or redistributing the Work and assume any
              risks associated with Your exercise of permissions under this License.
        
           8. Limitation of Liability. In no event and under no legal theory,
              whether in tort (including negligence), contract, or otherwise,
              unless required by applicable law (such as deliberate and grossly
              negligent acts) or agreed to in writing, shall any Contributor be
              liable to You for damages, including any direct, indirect, special,
              incidental, or consequential damages of any character arising as a
              result of this License or out of the use or inability to use the
              Work (including but not limited to damages for loss of goodwill,
              work stoppage, computer failure or malfunction, or any and all
              other commercial damages or losses), even if such Contributor
              has been advised of the possibility of such damages.
        
           9. Accepting Warranty or Additional Liability. While redistributing
              the Work or Derivative Works thereof, You may choose to offer,
              and charge a fee for, acceptance of support, warranty, indemnity,
              or other liability obligations and/or rights consistent with this
              License. However, in accepting such obligations, You may act only
              on Your own behalf and on Your sole responsibility, not on behalf
              of any other Contributor, and only if You agree to indemnify,
              defend, and hold each Contributor harmless for any liability
              incurred by, or claims asserted against, such Contributor by reason
              of your accepting any such warranty or additional liability.
        
           END OF TERMS AND CONDITIONS
        
           APPENDIX: How to apply the Apache License to your work.
        
              To apply the Apache License to your work, attach the following
              boilerplate notice, with the fields enclosed by brackets "[]"
              replaced with your own identifying information. (Don't include
              the brackets!)  The text should be enclosed in the appropriate
              comment syntax for the file format. We also recommend that a
              file or class name and description of purpose be included on the
              same "printed page" as the copyright notice for easier
              identification within third-party archives.
        
           Copyright [yyyy] [name of copyright owner]
        
           Licensed under the Apache License, Version 2.0 (the "License");
           you may not use this file except in compliance with the License.
           You may obtain a copy of the License at
        
               http://www.apache.org/licenses/LICENSE-2.0
        
           Unless required by applicable law or agreed to in writing, software
           distributed under the License is distributed on an "AS IS" BASIS,
           WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           See the License for the specific language governing permissions and
           limitations under the License.
        
Project-URL: Homepage, https://github.com/mwaykole/O
Project-URL: Bug Tracker, https://github.com/mwaykole/O/issues
Keywords: rhoai,openshift,upgrade,toolkit,red hat
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: boto3<1.39.0,>=1.26.0
Requires-Dist: botocore<1.39.0,>=1.29.0
Requires-Dist: kubernetes<34.0.0,>=26.1.0
Requires-Dist: openshift-client<3.0.0,>=1.0.2
Requires-Dist: python-dotenv<2.0.0,>=1.0.0
Requires-Dist: requests<3.0.0,>=2.31.0
Requires-Dist: urllib3<3.0.0,>=1.26.0
Requires-Dist: colorlog<7.0.0,>=6.7.0
Requires-Dist: pyfiglet<2.0.0,>=0.8.post1
Requires-Dist: setuptools<76.0.0,>=61.0
Requires-Dist: typing-extensions<5.0.0,>=4.7.0
Provides-Extra: test
Requires-Dist: pytest; extra == "test"
Requires-Dist: pytest-cov; extra == "test"
Provides-Extra: dev
Requires-Dist: ruff; extra == "dev"
Requires-Dist: pre-commit; extra == "dev"
Requires-Dist: build; extra == "dev"
Dynamic: license-file

# RHOShift - OpenShift Operator Installation Toolkit

![Python Version](https://img.shields.io/badge/python-3.8+-blue.svg)
![OpenShift Compatible](https://img.shields.io/badge/OpenShift-4.x-lightgrey.svg)
![Stability Level](https://img.shields.io/badge/stability-enhanced-brightgreen.svg)

A comprehensive, enterprise-grade toolkit for managing OpenShift operators with enhanced stability features, automatic dependency resolution, and Red Hat OpenShift AI (RHOAI) integration.

## 📋 Table of Contents
- [Features](#-features)
- [Enhanced Stability Features](#-enhanced-stability-features)
- [Supported Operators](#-supported-operators)
- [Installation](#-installation)
- [Usage](#-usage)
- [Advanced Usage](#-advanced-usage)
- [Dependency Management](#-dependency-management)
- [RHOAI Integration](#-rhoai-integration)
- [Configuration](#-configuration)
- [Troubleshooting](#-troubleshooting)
- [Contributing](#-contributing)

## ✨ Features

### 🚀 **Core Functionality**
- **7 Enterprise Operators**: Complete operator stack for modern OpenShift deployments
- **Enhanced Stability System**: 3-tier stability levels with comprehensive error handling
- **Automatic Dependency Resolution**: Smart installation order with dependency detection
- **Pre-flight Validation**: Cluster readiness and permission verification
- **Health Monitoring**: Real-time operator status tracking and reporting
- **Auto-recovery**: Intelligent error classification and automatic retry logic

### 🛡️ **Enterprise-Grade Reliability**
- **Comprehensive Error Handling**: 59+ exception handlers throughout codebase
- **Webhook Certificate Resilience**: Automatic timing issue resolution for RHOAI
- **Resource Conflict Detection**: Prevention of operator namespace conflicts
- **Smart Retry Logic**: Exponential backoff with contextual error recovery
- **Parallel Installation**: Optimized performance for multiple operators

### 🔧 **Advanced Integration**
- **RHOAI DSC/DSCI Management**: Complete DataScienceCluster lifecycle control
- **Kueue Management States**: Dynamic DSC integration with Managed/Unmanaged modes
- **KedaController Automation**: Automatic KEDA controller creation and validation
- **Configurable Timeouts**: Flexible timing control for enterprise environments

## 🛡️ Enhanced Stability Features

RHOShift includes a comprehensive stability system designed for enterprise deployments:

### **Stability Levels**
- **🟢 Enhanced (Default)**: Pre-flight checks + health monitoring + auto-recovery
- **🔵 Comprehensive**: Maximum resilience with advanced error classification
- **⚪ Basic**: Standard installation with basic error handling

### **Pre-flight Validation**
- ✅ Cluster connectivity and authentication
- ✅ Required permissions verification  
- ✅ Resource quota validation
- ✅ Operator catalog accessibility
- ✅ Namespace conflict detection
- ✅ DSCI compatibility validation for RHOAI installations

### **Health Monitoring**
- 📊 Real-time operator status tracking
- 🔍 Multi-resource health validation
- 📈 Installation progress reporting
- ⚡ Performance metrics and timing

### **Auto-recovery Features**
- 🔄 Intelligent retry mechanisms
- 🧠 Error classification (transient vs. permanent)
- ⏰ Exponential backoff strategies
- 🛠️ Automatic resource cleanup and recreation

## 📦 Supported Operators

| Operator | Package | Namespace | Channel | Dependencies |
|----------|---------|-----------|---------|--------------|
| **OpenShift Serverless** | `serverless-operator` | `openshift-serverless` | `stable` | None |
| **Service Mesh** | `servicemeshoperator` | `openshift-operators` | `stable` | None |
| **Authorino** | `authorino-operator` | `openshift-operators` | `stable` | None |
| **cert-manager** | `openshift-cert-manager-operator` | `cert-manager-operator` | `stable-v1` | None |
| **Kueue** | `kueue-operator` | `openshift-kueue-operator` | `stable-v1.0` | cert-manager |
| **KEDA** | `openshift-custom-metrics-autoscaler-operator` | `openshift-keda` | `stable` | None |
| **RHOAI/ODH** | `opendatahub-operator` | `openshift-operators` | `stable` | None |

## 🚀 Installation

### Quick Install
```bash
git clone https://github.com/mwaykole/O.git
cd O
pip install -e .
```

### Verify Installation
```bash
rhoshift --help
rhoshift --summary
```

## 💻 Usage

### **Basic Commands**
```bash
# Install single operator with enhanced stability
rhoshift --serverless

# Install multiple operators with batch optimization
rhoshift --serverless --servicemesh --authorino

# Install with dependency resolution (Kueue + cert-manager)
rhoshift --kueue

# Install all operators (includes DSCI validation for RHOAI)
rhoshift --all

# Install all with RHOAI channel preference
rhoshift --all --rhoai-channel=odh-nightlies

# Show detailed operator summary
rhoshift --summary

# Clean up all operators
rhoshift --cleanup
```

### **RHOAI with DSC/DSCI**
```bash
# Install RHOAI with complete setup
rhoshift --rhoai \
  --rhoai-channel=odh-nightlies \
  --rhoai-image=brew.registry.redhat.io/rh-osbs/iib:1049242 \
  --deploy-rhoai-resources

# Install RHOAI with Kueue integration
rhoshift --rhoai --kueue Managed \
  --rhoai-channel=stable \
  --rhoai-image=quay.io/rhoai/rhoai-fbc-fragment:rhoai-2.25-nightly \
  --deploy-rhoai-resources
```

### **Kueue Management States**
```bash
# Install Kueue as Managed (RHOAI controls it)
rhoshift --kueue Managed

# Install Kueue as Unmanaged (independent) - Default
rhoshift --kueue Unmanaged
rhoshift --kueue  # Same as above

# Switch management states (updates existing DSC)
rhoshift --kueue Managed    # Switch to Managed
rhoshift --kueue Unmanaged  # Switch to Unmanaged
```

## 🔧 Advanced Usage

### **Enterprise Deployment**
```bash
# Complete ML/AI stack with queue management
rhoshift --all --kueue Managed \
  --rhoai-channel=stable \
  --rhoai-image=brew.registry.redhat.io/rh-osbs/iib:1049242 \
  --deploy-rhoai-resources \
  --timeout=900

# High-availability setup with service mesh
rhoshift --serverless --servicemesh --keda --authorino

# Development environment setup
rhoshift --cert-manager --kueue Unmanaged --keda
```

### **Custom Configuration**
```bash
# Custom timeouts and retries for enterprise clusters
rhoshift --all \
  --timeout=1200 \
  --retries=5 \
  --retry-delay=15

# Custom oc binary path
rhoshift --serverless --oc-binary=/usr/local/bin/oc

# Verbose output for debugging
rhoshift --kueue Managed --verbose
```

## 🔗 Dependency Management

RHOShift automatically handles operator dependencies:

### **Automatic Resolution**
- **Kueue** → **cert-manager**: Installing Kueue automatically includes cert-manager
- **Installation Order**: Dependencies installed first, primary operators second
- **Conflict Detection**: Prevents namespace and resource conflicts

### **Smart Validation**
```bash
# This command installs BOTH cert-manager AND Kueue in correct order:
rhoshift --kueue
# Output:
# 🔍 Pre-flight checks passed. Cluster is ready for installation.
# ⚠️  Missing dependency: kueue-operator requires openshift-cert-manager-operator
# 🚀 Installing 2 operators with enhanced stability...
# ✅ cert-manager installed successfully
# ✅ kueue installed successfully
```

## 🤖 RHOAI Integration

### **DataScienceCluster Management**
RHOShift provides complete DSC/DSCI lifecycle management:

```bash
# Create RHOAI with DSC/DSCI
rhoshift --rhoai --deploy-rhoai-resources

# RHOAI with Kueue integration
rhoshift --rhoai --kueue Managed --deploy-rhoai-resources
```

### **DSC Behavior**
- **Existing DSC**: Automatically updates Kueue managementState
- **No DSC**: State applied when DSC is created via `--deploy-rhoai-resources`
- **Webhook Resilience**: Automatic handling of certificate timing issues

### **Output Examples**
```bash
# When DSC exists and gets updated:
🔄 Updating DSC with Kueue managementState: Managed
✅ Successfully updated DSC with Kueue managementState: Managed

# When no DSC exists:
ℹ️  No existing DSC found. Kueue managementState will be applied when DSC is created.
```

## ⚙️ Configuration

### **CLI Options**
```bash
Operator Selection:
  --serverless          Install OpenShift Serverless Operator
  --servicemesh         Install Service Mesh Operator  
  --authorino           Install Authorino Operator
  --cert-manager        Install cert-manager Operator
  --rhoai               Install RHOAI Operator
  --kueue [{Managed,Unmanaged}]  Install Kueue with DSC integration
  --keda                Install KEDA (Custom Metrics Autoscaler)
  --all                 Install all operators
  --cleanup             Clean up all operators
  --summary             Show operator summary

Configuration:
  --oc-binary OC_BINARY     Path to oc CLI (default: oc)
  --retries RETRIES         Max retry attempts (default: 3)
  --retry-delay RETRY_DELAY Delay between retries (default: 10s)
  --timeout TIMEOUT         Command timeout (default: 300s)
  
RHOAI Options:
  --rhoai-channel CHANNEL   RHOAI channel (stable/odh-nightlies)
  --rhoai-image IMAGE       RHOAI container image
  --raw RAW                 Enable raw serving (True/False)
  --deploy-rhoai-resources  Create DSC and DSCI
```

### **Environment Variables**
```bash
export LOG_FILE_LEVEL=DEBUG      # File logging level
export LOG_CONSOLE_LEVEL=INFO    # Console logging level
```

### **Logging**
- **Location**: `/tmp/rhoshift.log`
- **Rotation**: 10MB max size, 5 backup files
- **Levels**: DEBUG (file) / INFO (console)
- **Colors**: Supported in compatible terminals

## 🔍 Troubleshooting

### **Common Issues**

#### **Permission Errors**
```bash
# Verify cluster access
oc whoami
oc auth can-i create subscriptions -n openshift-operators
```

#### **Installation Failures**
```bash
# Check logs
tail -f /tmp/rhoshift.log

# Verify operator catalogs
oc get catalogsource -n openshift-marketplace

# Check with enhanced timeouts
rhoshift --kueue --timeout=900 --retries=5
```

#### **Dependency Issues**
```bash
# Verify dependencies are resolved
rhoshift --summary

# Manual dependency installation
rhoshift --cert-manager
rhoshift --kueue
```

#### **RHOAI/DSC Issues**
```bash
# Check DSC status
oc get dsc,dsci -A

# Verify webhook certificates
oc get pods -n opendatahub-operators

# Manual DSC creation
rhoshift --rhoai --deploy-rhoai-resources --timeout=900
```

#### **DSCI Immutable Field Conflicts**
```bash
# Error: MonitoringNamespace is immutable
# This happens when existing DSCI has different monitoring namespace

# Check existing DSCI configuration
oc get dsci default-dsci -o yaml

# Solution 1: Force recreate DSCI (recommended)
rhoshift --rhoai --deploy-rhoai-resources

# Solution 2: Use existing DSCI configuration
# RHOShift will automatically detect and adapt to existing DSCI
```

### **Debug Mode**
```bash
# Enable verbose output
rhoshift --all --verbose

# Check stability report
rhoshift --summary
```

## 🛠️ Development

### **Prerequisites**
- Python 3.8+
- OpenShift CLI (oc)
- OpenShift cluster access
- cluster-admin privileges

### **Project Structure**
```
rhoshift/
├── rhoshift/
│   ├── cli/              # Command-line interface
│   ├── logger/           # Logging system
│   ├── utils/
│   │   ├── operator/     # Operator management
│   │   ├── resilience.py # Error handling & recovery
│   │   ├── health_monitor.py # Health monitoring
│   │   ├── stability_coordinator.py # Stability management
│   │   └── constants.py  # Operator configurations
│   └── main.py          # Entry point
├── scripts/
│   ├── cleanup/         # Cleanup utilities
│   └── run_upgrade_matrix.sh # Upgrade testing
└── tests/               # Test suite
```

### **Running Tests**
```bash
pytest tests/
```

## 🤝 Contributing

1. Fork the repository
2. Create a feature branch: `git checkout -b feature-name`
3. Commit changes: `git commit -am 'Add feature'`
4. Push to branch: `git push origin feature-name`
5. Create Pull Request

### **Development Guidelines**
- Follow Python PEP 8 standards
- Add tests for new features
- Update documentation
- Ensure backward compatibility

## 📄 License

This project is licensed under the Apache License 2.0 - see the [LICENSE](LICENSE) file for details.

## 🆘 Support

- **Issues**: [GitHub Issues](https://github.com/mwaykole/O/issues)
- **Documentation**: This README and `--help` output
- **Logs**: `/tmp/rhoshift.log` for detailed debugging

---

**RHOShift** - Enterprise-grade OpenShift operator management with enhanced stability and reliability features.
